###############################################################################################
# For help on syntax, variables and functions, please read the file: "plcSyntaxHelp.plc"
#
# PLC Functionality Demo:
#
#   Code Description:
#     1. Enable power on axis (mc_power())
#     2. Home at startup if needed (mc_home())
#     3. Move to position 70 (mc_move_abs())
#     4. Disable power on axis (mc_power())
#     5. A warning light will flash during sequence (at ec0.s2.binaryOutput04)
#     6. PLC will be disabled after startup sequence have been performed
#     

var errorCode:=0;

##### 0. Put all initiations here
if(plc3.firstscan){  
  static.blink_cycles:=1/plc3.scantime;
  println('Starting PLC motion example!!');
  #Ignore commands during startup sequence
  ax1.blockcom:=1;
  static.seqStep:=1;
};

##### 1. Put power on axis (run mc_power())
if(static.seqStep==1)
{
  if(not(ax1.error))
  {
    errorCode=mc_power(1,1);
    if(errorCode)
    {
      println('Function mc_power() returned error: ', errorCode);
      plc3.error:=errorCode;
    };
  }
  else
  {
    ax1.reset:=1;
  };
  if(ax1.drv.enabled){
    static.seqStep:=2;
    println('2. Function mc_home()  triggered!');
  }
};

##### 2. Do homing sequence (run mc_home())
if(static.seqStep==2)
{
  var homingSeq:=3;
  var velTwoardsCam:=5;
  var velOffCam:=4;
  errorCode=mc_home(1,1,homingSeq,velTwoardsCam,velOffCam);
  if(errorCode){
    println('Function mc_home() returned error: ', errorCode);
    plc3.error:=errorCode;
  };
  if(mc_get_homed(1) and not(mc_get_busy(1)))
  {
    static.seqStep:=3;
    println('3. Function mc_move_abs() triggered!');
  };
};

##### 3. Trigger a absolute move after homing seq (or direct if abs encoder)
if(static.seqStep==3){    
  var posTarg:=70;
  var vel:=5;
  var acc:=10;
  var dec:=10;
  errorCode:=mc_move_abs(1,1,posTarg,vel,acc,dec);
  if(errorCode){
    println('Error: mc_move_abs() returned error: ',errorCode);
    plc3.error:=errorCode;
  };
  if(ax1.traj.setpos==posTarg and not(mc_get_busy(1)))
  {
    static.seqStep:=4;
    println('4. Function mc_power() triggered!');
  };
};

##### 4. Disable power again
if(static.seqStep==4)
{
  errorCode=mc_power(1,0);
  if(errorCode)
  {
    println('Function mc_power() returned error: ', errorCode);
    plc3.error:=errorCode;
  };

  if(not(ax1.drv.enabled))
  {
    println('Startup sequence ready.. Have fun!!');    
    static.seqStep:=10;      # Sequence end
    ax1.blockcom:=0;         # Allow commands again
    plc3.enable:=0;          # Disable PLC
  };
};

# Print status during startup sequence and flash warning light during sequence
var warning_light:=ec0.s2.binaryOutput04;
if(static.seqStep<10){  
  static.counter+=1;
  if(static.counter>=static.blink_cycles)
  {
    warning_light:=not(warning_light);
    static.counter:=0;  
  };  
  ec0.s2.binaryOutput04:=warning_light;  
};

return [];

println('NEVER HERE');