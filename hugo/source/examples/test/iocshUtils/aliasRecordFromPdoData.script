##############################################################################
## Name a record based on pdo data from cyclic interface. Same concept can be
## used for naming records based on any passed to ecmcConfig(OrDie).
## Result of ecmcConfig(OrDie) will be stored in the EPICS variable:
## "ECMC_CONFIG_RETURN_VAL"
##
## Demo: Name a record based on the ID switch of a EK1101.
## 1. Configure hardware as normal
## 2. Go active with "setAppMode(1)"
## 3. Make a read of the id pdo of EK1101. The result of read operation is now
##    stored in "ECMC_CONFIG_RETURN_VAL"
## 4. Apply alias to record to rename based on the ID
## 5. issue iocInit
## 6. check name and value (dbgrep, dbgf)
##

##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg master

#- Choose motor record driver implementation
#-   ECMC_MR_MODULE="ecmcMotorRecord"  => ECMC native built in motor record support (Default)
#-   ECMC_MR_MODULE="EthercatMC"       => Motor record support from EthercatMC module (need to be loaded)
#- Uncomment the line below to use EthercatMC (and add optional EthercatMC_VER to startup.cmd call):
#- epicsEnvSet(ECMC_MR_MODULE,"EthercatMC")


# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=anders_dev20200227"

##############################################################################
## 1. Config hardware:

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "0")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EK1101"

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"

##############################################################################
## 2. go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)

##############################################################################
## 3. Read pdo data from EK1101 (from ec0.s0.ID) result in "ECMC_CONFIG_RETURN_VAL"
ecmcConfig "ReadEcEntryIDString(${ECMC_EC_SLAVE_NUM},ID)"
## This is the value of the EK1101 ID switch
epicsEnvShow(ECMC_CONFIG_RETURN_VAL)

##############################################################################
## 4. Apply alias to records
dbLoadRecords(./ecmcGenericAlias.db,"NAME=IOC_TEST:ec0-s0-EK1101-ID, ALIAS=IOC_TEST:ec0-s0-Crate_$(ECMC_CONFIG_RETURN_VAL)-EK1101-ID")

##############################################################################
## 5. iocInit
iocInit

##############################################################################
## 6. This is the record with alias:
dbgrep *$(ECMC_CONFIG_RETURN_VAL)*
#
## The value of the EK1101 ID switch (by alias):
dbgf IOC_TEST:ec0-s0-Crate_$(ECMC_CONFIG_RETURN_VAL)-EK1101-ID
#
## The value of the EK1101 ID switch (by record name):
dbgf IOC_TEST:ec0-s0-EK1101-ID
#
#
