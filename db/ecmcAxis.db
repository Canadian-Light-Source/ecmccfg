#Asyn parameters for one axis
record(ai,"$(P)$(AXIS_NAME)-PosAct"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "Axis ax$(AXIS_NO): Actual Position")
  field(TSE,  "$(TSE=-2)")
}

record(ai,"$(P)$(AXIS_NAME)-PosSet"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).setpos?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "Axis ax$(AXIS_NO): Setpoint Position")
  field(TSE,  "$(TSE=-2)")
}

record(ai,"$(P)$(AXIS_NAME)-PosErr"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).poserr?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "Axis ax$(AXIS_NO): Following Error")
  field(TSE,  "$(TSE=-2)")
}

record(waveform,"$(P)$(AXIS_NAME)-Array-Stat"){
  field(PINI, "1")
  field(DTYP, "asynInt8ArrayIn")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynInt8ArrayIn/ax$(AXIS_NO).diagnostic?")
  field(FTVL, "CHAR")
  field(NELM, "$(SIZE=256)")
  field(SCAN, "I/O Intr")
  field(DESC, "Axis ax$(AXIS_NO): Diagnostic String")
  field(TSE,  "$(TSE=-2)")
}

record(longin,"$(P)$(AXIS_NAME)-Stat"){
  field(DESC, "$(AXIS_NAME): Status Word")
  field(PINI, "$(PINI=1)")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynInt32/ax$(AXIS_NO).status?")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)$(AXIS_NAME)-seqstate.PROC")
  field(TSE,  "$(TSE=-2)")
}

record(calc,"$(P)$(AXIS_NAME)-seqstate") {
  field(DESC, "$(AXIS_NAME): Seq state")
  field(PINI, "$(PINI=1)")
  field(CALC,"A>>20")
  field(INPA,"$(P)$(AXIS_NAME)-Stat.VAL")
  field(FLNK, "$(P)$(AXIS_NAME)-lastilock.PROC")
}

record(calc,"$(P)$(AXIS_NAME)-lastilock") {
  field(DESC, "$(AXIS_NAME): Last interlock")
  field(PINI, "$(PINI=1)")
  field(CALC, "A>>24")
  field(INPA, "$(P)$(AXIS_NAME)-Stat.VAL")
  field(FLNK, "$(P)$(AXIS_NAME)-Stat_.PROC")
}

record(mbbiDirect,"$(P)$(AXIS_NAME)-Stat_"){
  field(DESC, "$(AXIS_NAME): Status Word mbbiD")
  field(PINI, "$(PINI=1)")
  field(INP,  "$(P)$(AXIS_NAME)-Stat.VAL")
  field(FLNK, "$(P)$(AXIS_NAME)-enable.PROC")
  field(TSE,  "$(TSE=-2)")
}

#  // bit 0 enable
record(bi,"$(P)$(AXIS_NAME)-enable"){
  field(DESC, "$(AXIS_NAME): Enable")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B0")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-enabled.PROC")
}

#  // bit 1 enabled
record(bi,"$(P)$(AXIS_NAME)-enabled"){
  field(DESC, "$(AXIS_NAME): Enabled")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-execute.PROC")
}
#  // bit 2 execute  
record(bi,"$(P)$(AXIS_NAME)-execute"){
  field(DESC, "$(AXIS_NAME): Execute Cmd")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B2")
  field(ZNAM, "No Execute")
  field(ONAM, "Execute")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-busy.PROC")
}

#  // bit 3 busy
record(bi,"$(P)$(AXIS_NAME)-busy"){
  field(DESC, "$(AXIS_NAME): Busy")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B3")
  field(ZNAM, "Free")
  field(ONAM, "Busy")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-attarget.PROC")
}

#  // bit 4 at target  
record(bi,"$(P)$(AXIS_NAME)-attarget"){
  field(DESC, "$(AXIS_NAME): At target")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B4")
  field(ZNAM, "Not at target")
  field(ONAM, "At target")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-moving.PROC")
}

#  // bit 5 moving
record(bi,"$(P)$(AXIS_NAME)-moving"){
  field(DESC, "$(AXIS_NAME): Moving")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B5")
  field(ZNAM, "Standstill")
  field(ONAM, "Moving")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-limitfwd.PROC")
}

#  // bit 6 limit fwd
record(bi,"$(P)$(AXIS_NAME)-limitfwd"){
  field(DESC, "$(AXIS_NAME): Limit FWD")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B6")
  field(ZNAM, "Limit activated")
  field(ONAM, "Limit OK")
  field(ZSV,  "MINOR")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-limitbwd.PROC")
}

#  // bit 7 limit bwd
record(bi,"$(P)$(AXIS_NAME)-limitbwd"){
  field(DESC, "$(AXIS_NAME): Limit BWD")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B7")
  field(ZNAM, "Limit activated")
  field(ONAM, "Limit OK")
  field(ZSV,  "MINOR")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-homeswitch.PROC")
}

#  // bit 8 homeswitch
record(bi,"$(P)$(AXIS_NAME)-homeswitch"){
  field(DESC, "$(AXIS_NAME): Home switch")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B8")
  field(ZNAM, "Low")
  field(ONAM, "High")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-homed.PROC")
}

#  // bit 9 homed
record(bi,"$(P)$(AXIS_NAME)-homed"){
  field(DESC, "$(AXIS_NAME): Homed")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.B9")
  field(ZNAM, "Not homed")
  field(ONAM, "Homed")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-inrealtime.PROC")
}

#  // bit 10 inRealtime  
record(bi,"$(P)$(AXIS_NAME)-inrealtime"){
  field(DESC, "$(AXIS_NAME): In realtime")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BA")
  field(ZNAM, "Not in realtime")
  field(ONAM, "In realtime")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-TrajSourceType-RB.PROC")
}

#  // bit 11 traj source  
record(bi,"$(P)$(AXIS_NAME)-TrajSourceType-RB"){
  field(DESC, "$(AXIS_NAME): Traj Source")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BB")
  field(ZNAM, "Internal")
  field(ONAM, "PLC")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-EncSourceType-RB.PROC")
}

#  // bit 12 enc source  
record(bi,"$(P)$(AXIS_NAME)-EncSourceType-RB"){
  field(DESC, "$(AXIS_NAME): Enc Source")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BC")
  field(ZNAM, "Internal")
  field(ONAM, "PLC")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-AllowCmdFromPLC-CmdEn-RB.PROC")
}

#  // bit 13 Allow plc commands  
record(bi,"$(P)$(AXIS_NAME)-AllowCmdFromPLC-CmdEn-RB"){
  field(DESC, "$(AXIS_NAME): Allow PLC cmds")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BD")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-SoftLimFwd-CmdEn-RB.PROC")
}

#  // bit 14 softlimbwdena
record(bi,"$(P)$(AXIS_NAME)-SoftLimFwd-CmdEn-RB"){
  field(DESC, "$(AXIS_NAME): Softlim Fwd")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BE")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
  field(FLNK, "$(P)$(AXIS_NAME)-SoftLimBwd-CmdEn-RB.PROC")
}

#  // bit 15 softlimbwdena  
record(bi,"$(P)$(AXIS_NAME)-SoftLimBwd-Ena-RB"){
  field(DESC, "$(AXIS_NAME): Softlim Fwd")
  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BF")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(ZSV,  "NO_ALARM")
  field(OSV,  "NO_ALARM")
}

#  // bit 16 inStartupPhase
#record(bi,"$(P)$(AXIS_NAME)-instartup"){
#  field(DESC, "$(AXIS_NAME): In startup phase")
#  field(INP,  "$(P)$(AXIS_NAME)-Stat_.BF")
#  field(ZNAM, "Started")
#  field(ONAM, "In startup")
#  field(ZSV,  "NO_ALARM")
#  field(OSV,  "MINOR")
#  field(FLNK, "$(P)$(AXIS_NAME)-inrealtime.PROC")
#}

record(bi,"$(P)$(AXIS_NAME)-PLC-CmdEn-RB"){
  field(DESC, "$(AXIS_NAME): Plc enable")
  field(DTYP,"asynInt32")
  field(PINI, "$(PINI=1)")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CMD=FLOAT64TOINT32/T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/plcs.ax$(AXIS_NO).plc.enable?")
  field(ZNAM,"Disabled")
  field(ONAM,"Enabled")
  field(SCAN, "I/O Intr")
  field(TSE,  "$(TSE=-2)") 
}

record(bi,"$(P)$(AXIS_NAME)-PLC-firstscan"){
  field(DESC, "$(AXIS_NAME): Plc firstscan")
  field(DTYP,"asynInt32")
  field(PINI, "$(PINI=1)")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CMD=FLOAT64TOINT32/T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/plcs.ax$(AXIS_NO).plc.firstscan?")
  field(ZNAM,"Disabled")
  field(ONAM,"Enabled")
  field(SCAN, "I/O Intr")
  field(TSE,  "$(TSE=-2)") 
}

record(ai,"$(P)$(AXIS_NAME)-PLC-error"){
  field(DESC, "$(AXIS_NAME): Plc error")
  field(DTYP,"asynFloat64")
  field(PINI, "$(PINI=1)")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/plcs.ax$(AXIS_NO).plc.error?")
  field(SCAN, "I/O Intr")
  field(TSE,  "$(TSE=-2)") 
}

record(waveform,"$(P)$(AXIS_NAME)-PLCExpr-RB"){
  field(DESC, "PLC code -RB")
  field(PINI, "1")
  field(DTYP, "asynInt8ArrayIn")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynInt8ArrayIn/ax$(AXIS_NO).plc.expression?")
  field(FTVL, "CHAR")
  field(NELM, "1024")
  field(SCAN, "I/O Intr")
  field(TSE,  "$(TSE=-2)")
}

record(mbboDirect,"$(P)$(AXIS_NAME)-Cmd_"){
  info(asyn:READBACK,"1")
  field(DESC, "$(AXIS_NAME): Control Word")
  field(DTYP, "asynUInt32Digital")  
  field(OUT,  "@asynMask($(PORT),$(ADDR=0),$(MASK=0xFFFFFFFF),$(TIMEOUT=1))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynUInt32Digital/ax$(AXIS_NO).controlbin?")
  field(SCAN, "Passive")
  field(TSE,  "0")
}

record(bo,"$(P)$(AXIS_NAME)-Enable-Cmd"){
  field(DESC, "$(AXIS_NAME): Enable cmd")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B0")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-Execute-Cmd"){
  field(DESC, "$(AXIS_NAME): Execute cmd")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B1")
  field(ZNAM, "Not Execute")
  field(ONAM, "Execute")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-Reset-Cmd"){
  field(DESC, "$(AXIS_NAME): Reset cmd")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B2")
  field(ZNAM, "Not Reset")
  field(ONAM, "Reset")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-EncSourceType-Cmd"){
  field(DESC, "$(AXIS_NAME): Encoder source cmd")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B3")
  field(ZNAM, "Internal")
  field(ONAM, "PLC")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-TrajSourceType-Cmd"){
  field(DESC, "$(AXIS_NAME): Traj source cmd")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B4")
  field(ZNAM, "Internal")
  field(ONAM, "PLC")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-PLC-CmdEn"){    
  field(DESC, "$(AXIS_NAME): PLC enable cmd")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B5")
  field(ZNAM, "disable")
  field(ONAM, "enable")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-AllowCmdFromPLC-CmdEn"){
  field(DESC, "$(AXIS_NAME): Allow cmd from PLCs")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B6")
  field(ZNAM, "Refuse")
  field(ONAM, "Allow")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-SoftLimBwd-CmdEn"){
  field(DESC, "$(AXIS_NAME): Softlimit Bwd enable")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B7")
  field(ZNAM, "Refuse")
  field(ONAM, "Allow")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}

record(bo,"$(P)$(AXIS_NAME)-SoftLimFwd-CmdEn"){
  field(DESC, "$(AXIS_NAME): Softlimit Fwd enable")
  field(OUT,  "$(P)$(AXIS_NAME)-Cmd_.B8")
  field(ZNAM, "Refuse")
  field(ONAM, "Allow")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(AXIS_NAME)-Cmd_.PROC")
  field(TSE,  "0") 
}
