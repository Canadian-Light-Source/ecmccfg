# ECMC config
# Arguments
# [set by module]
# ECMC_CONFIG_ROOT  ==  $(ECMC_config_DIR)
# ECMC_CONFIG_DB    ==  $(ECMC_config_TEMPLATES)
# [mandatory]
# SYS
# [optional]
# ECMC_VER        = kivel
# EthercatMC_VER  = kivel
# INIT            = initAll
# MASTER_ID       = 0
#
# calls initAll by default, which calls init
# calls 'add_master.cmd'
#require ECMC_config kivel "SYS=STEST_KN82,SCRIPTEXEC=runScript"
require ECMC_config kivel

# slave 0 (ecmcEK1100-EtherCatCoupler)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=0, HW_DESC=ecmcEK1100-EtherCatCoupler"
# slave 1 (ecmcEL1018-digitalInput)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=1, HW_DESC=ecmcEL1018-digitalInput"
# slave 2 (ecmcEL2808-digitalOutput)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=2, HW_DESC=ecmcEL2808-digitalOutput"
# slave 3 (ecmcEL5101-IncEncoder)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=3, HW_DESC=ecmcEL5101-IncEncoder"
# slave 4 (ecmcEL5101-32bit-IncEncoder)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=4, HW_DESC=ecmcEL5101-32bit-IncEncoder"
# slave 5 ecmcEL9505-powerSupply5V()
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=5, HW_DESC=ecmcEL9505-powerSupply5V"
# slave 6 (ecmcEL1252-digitalInput)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=6, HW_DESC=ecmcEL1252-digitalInput"
# slave 7 (ecmcEL9410-powerSupplyEBus)
$(SCRIPTEXEC) $(ECMC_config_DIR)addSlave.cmd, "SLAVE_ID=7, HW_DESC=ecmcEL9410-powerSupplyEBus"
# slave 8 (ecmcEL7037-StepperDrive)
$(SCRIPTEXEC) $(ECMC_config_DIR)configureSlave.cmd, "SLAVE_ID=8, HW_DESC=ecmcEL7037-StepperDrive, CONFIG=-Motor-Nanotec-ST4118L1804-B"
# slave 9 (ecmcEL7037-StepperDrive)
$(SCRIPTEXEC) $(ECMC_config_DIR)configureSlave.cmd, "SLAVE_ID=9, HW_DESC=ecmcEL7037-StepperDrive, CONFIG=-Motor-Nanotec-ST4118L1804-B"

# Apply hardware configuration
$(SCRIPTEXEC) ($(ECMC_config_DIR)applyConfig.cmd)

# ADDITIONAL SETUP
# 
# END of ADDITIONAL SETUP

##############################################################################
## AXIS 1
#
#epicsEnvSet("DEV"      "STEST-MYDEVICE")
#$(SCRIPTEXEC) ($(ECMC_config_DIR)configureAxis.cmd, CONFIG=./axis_1)

##############################################################################
## PLC 0
$(SCRIPTEXEC) $(ECMC_config_DIR)loadPLCFile.cmd, "PLC_ID=0, FILE=./ecLibExample.plc")


##############################################################################
############# Configure diagnostics:

EthercatMCConfigController ${ECMC_MOTOR_PORT}, "Cfg.EcSetDiagnostics(1)"
EthercatMCConfigController ${ECMC_MOTOR_PORT}, "Cfg.EcEnablePrintouts(0)"
EthercatMCConfigController ${ECMC_MOTOR_PORT}, "Cfg.EcSetDomainFailedCyclesLimit(100)"
#EthercatMCConfigController ${ECMC_MOTOR_PORT}, "Cfg.SetDiagAxisIndex(1)"
#EthercatMCConfigController ${ECMC_MOTOR_PORT}, "Cfg.SetDiagAxisFreq(2)"
#EthercatMCConfigController ${ECMC_MOTOR_PORT}, "Cfg.SetDiagAxisEnable(0)"

# go active
$(SCRIPTEXEC) ($(ECMC_config_DIR)setAppMode.cmd)
