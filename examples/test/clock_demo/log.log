#
# Start at "2022-W40-Oct06-1114-11-CEST"
#
# Version information:
# European Spallation Source ERIC : iocsh (4.0.0-PID-29260)
#
# --->--> snip -->--> 
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# HOSTDISPLAY=""
# WINDOWID="31682073"
# PWD="/home/anderssandstrom/sources/ecmccfg/examples/test/timing/clock_demo"
# USER="anderssandstrom"
# LOGNAME="anderssandstrom"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/epics/base-7.0.6.1"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="4.0.0"
# E3_REQUIRE_LOCATION="/epics/base-7.0.6.1/require/4.0.0"
# E3_REQUIRE_BIN="/epics/base-7.0.6.1/require/4.0.0/bin"
# E3_REQUIRE_DB="/epics/base-7.0.6.1/require/4.0.0/db"
# E3_REQUIRE_DBD="/epics/base-7.0.6.1/require/4.0.0/dbd"
# E3_REQUIRE_INC="/epics/base-7.0.6.1/require/4.0.0/include"
# E3_REQUIRE_LIB="/epics/base-7.0.6.1/require/4.0.0/lib"
# EPICS_DRIVER_PATH="/epics/base-7.0.6.1/require/4.0.0/siteMods"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# EPICS_PVA_AUTO_ADDR_LIST=""
# EPICS_PVA_ADDR_LIST=""
# PATH="/epics/base-7.0.6.1/require/4.0.0/bin:/epics/base-7.0.6.1/bin/linux-x86_64:/opt/conda/condabin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/anderssandstrom/.local/bin:/home/anderssandstrom/bin"
# --->--> snip -->--> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:mcag-dev-asm-02-29260"
#
# Enable an exit subroutine for sotfioc
dbLoadRecords "/epics/base-7.0.6.1/db/softIocExit.db" "IOC=REQMOD:mcag-dev-asm-02-29260"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh is executed.
epicsEnvSet E3_IOCSH_TOP "/home/anderssandstrom/sources/ecmccfg/examples/test/timing/clock_demo"
#
# 
# Load require module, which has the version 4.0.0
# 
dlload /epics/base-7.0.6.1/require/4.0.0/lib/linux-x86_64/librequire.so
dbLoadDatabase /epics/base-7.0.6.1/require/4.0.0/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
# Set E3_CMD_TOP for the absolute path where clock.script exists
epicsEnvSet E3_CMD_TOP "/home/anderssandstrom/sources/ecmccfg/examples/test/timing/clock_demo"
#
iocshLoad 'clock.script',''
##############################################################################
## Example config for sync a motor to system time.
## To be used togheter with mrf or ptp sync of system clock.
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"IOC_TEST")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"iocshLoad")
require ecmccfg master
Module ecmccfg version master found in /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/
Loading library /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/lib/linux-x86_64/libecmccfg.so
Loaded ecmccfg version master
Loading dbd file /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/dbd/ecmccfg.dbd
Calling function ecmccfg_registerRecordDeviceDriver
Loading module info records for ecmccfg
# run module startup.cmd (only needed at ESS  PSI auto call at require)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/startup.cmd, "IOC=IOC_TEST,ECMC_VER=master"
#==============================================================================
# startup.cmd
on error halt
require ecmc        "master"
Module ecmc version master found in /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/
Module ecmc depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.42.0+0
Loading dbd file /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1+0
Module exprtk version 1.2.1+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1+0
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.7+0
Module motor version 7.0.7+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/
Module motor depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 already loaded
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.7+0
Loading dbd file /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Module ecmc depends on ruckig 1.0.0+0
Module ruckig version 1.0.0+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/lib/linux-x86_64/libruckig.so
Loaded ruckig version 1.0.0+0
ruckig has no dbd file
Loading module info records for ruckig
Loading library /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/lib/linux-x86_64/libecmc.so
Loaded ecmc version master
Loading dbd file /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'ecmcMotorRecord'='EthercatMC'", "require  EthercatMC 3.0.2 # Using EthercatMC motor record support.","# Using ecmcMotorRecord motor record support.")
# Using ecmcMotorRecord motor record support.
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_CONFIG_ROOT",     "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/")
epicsEnvSet("ECMC_CONFIG_DB",       "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("SM_PREFIX",            "IOC_TEST:")    # colon added since IOC is _not_ PREFIX
epicsEnvSet("ECMC_PROC_HOOK",       "")
epicsEnvSet(ECMC_MODE, FULL)
ecmcEpicsEnvSetCalcTernary(ECMC_SUPPORT_MOTION, "'FULL'!='DAQ'","","# MODE == DAQ, DISABLING MOTION.")
epicsEnvShow(ECMC_SUPPORT_MOTION)
ECMC_SUPPORT_MOTION=
ecmcEpicsEnvSetCalcTernary(ECMC_USE_MOTOR_RECORD, "'FULL'=='FULL'","","# MODE != FULL, DISABLING MOTOR RECORD.")
epicsEnvShow(ECMC_USE_MOTOR_RECORD)
ECMC_USE_MOTOR_RECORD=
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               0)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd"
#==============================================================================
# initAxis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd"
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd"
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUn2022/10/06 11:14:11.931 
ECMC Initializes.............
2022/10/06 11:14:11.931 ESS Open Source EtherCAT Motion Control Epics Module2022/10/06 11:14:11.931 
Mode: Configuration
2022/10/06 11:14:11.931 OK
2022/10/06 11:14:11.931 OK
2022/10/06 11:14:11.932 OK
2022/10/06 11:14:11.933 OK
2022/10/06 11:14:11.963 OK
2022/10/06 11:14:11.964 OK
2022/10/06 11:14:11.964 OK
set(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMC_AXISFIELDINIT",     "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "IOC_TEST:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# suffix for pva enabled scripts, templates and substitutions
ecmcEpicsEnvSetCalcTernary(ECMC_PVA, "0", "Pva","")
# Set EtherCAT frequency (defaults to 1000)
ecmcConfigOrDie "Cfg.SetSampleRate(1000)"
epicsEnvSet("ECMC_EC_SAMPLE_RATE" ,   1000)
ecmcEpicsEnvSetCalc("ECMC_EC_SAMPLE_RATE_MS" ,1000/1000)
# Update records in 10ms (100Hz) for FULL MODE and in EC_RATE for DAQ mode
ecmcEpicsEnvSetCalcTernary(ECMC_SAMPLE_RATE_MS, "'FULL'=='DAQ'","1","10")
epicsEnvSet("ECMC_P_SCRIPT",        "mXsXXX")
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd",1)
 iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd", "MASTER_ID=0"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "0")
# Claim master
ecmcConfigOrDie "Cfg.EcSetMaster(0)"
epicsEnvSet("ECMC_EC_MASTER_ID" ,0)
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd
#==============================================================================
# setDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
epicsEnvSet("ECMCCFG_INIT" ,"#")
##############################################################################
## Configure hardware:
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "37")
epicsEnvSet("ECMC_EC_SLAVE_NUM_NANO",         "37")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/c2022/10/06 11:14:11.964 OK
2022/10/06 11:14:12.033 OK
2022/10/06 11:14:12.036 OK
2022/10/06 11:14:12.036 OK
2022/10/06 11:14:12.036 OK
2022/10/06 11:14:12.037 OK
2022/10/06 11:14:12.037 OK
2022/10/06 11:14:12.038 OK
2022/10/06 11:14:12.038 OK
2022/10/06 11:14:12.039 OK
2022/10/06 11:14:12.039 OK
2022/10/06 11:14:12.039 OK
ellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=37, HW_DESC=EL7031, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "37")
epicsEnvSet("HW_DESC",            "EL7031")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=37, HW_DESC=EL7031, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "37")
epicsEnvSet("HW_DESC",            "EL7031")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7031")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b773052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,37,0x2,0x1b773052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(37,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=37,HWTYPE=EL7031"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "37","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s037")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s037-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7031.substitutions,ECMC_P=IOC_TEST:m0s037-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7031.substitutions,1,1)
dbLoadTemplate(ecmcEL7031.substitutions,"ECMC_P=IOC_TEST:m0s037-,ECMC_G=IOC_TEST:m0s037,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=37,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,NELM=1")
epicsE2022/10/06 11:14:12.053 OK
2022/10/06 11:14:12.053 OK
2022/10/06 11:14:12.053 OK
2022/10/06 11:14:12.053 OK
2022/10/06 11:14:12.054 OK
2022/10/06 11:14:12.056 OK
2022/10/06 11:14:12.128 OK
2022/10/06 11:14:12.129 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
nvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s037-,ECMC_G=IOC_TEST:m0s037"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s037-,ECMC_G=IOC_TEST:m0s037,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=37,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "37+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x3,24000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x4,450,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x6,200,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "50")
epicsEnvSet("ECMC_EC_SLAVE_NUM_SECOND",        "50")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=50, HW_DESC=EL7041, CONFIG=-Motor-Amp-57TH76-4280"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7041")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=50, HW_DESC=EL7041, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7041")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7041")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b813052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,50,0x2,0x1b813052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(50,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,32022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.130 OK
2022/10/06 11:14:12.133 OK
2022/10/06 11:14:12.133 OK
2022/10/06 11:14:12.133 OK
2022/10/06 11:14:12.133 OK
2022/10/06 11:14:12.133 OK
,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "50","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s050")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s050-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7041.substitutions,ECMC_P=IOC_TEST:m0s050-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7041.substitutions,1,1)
dbLoadTemplate(ecmcEL7041.substitutions,"ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "50+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-Motor-Amp-57TH76-4280.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-Motor-Amp-57TH76-4280.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x1,2800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x3,48000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x4,113,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x6,200,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "51")
epicsEnvSet("ECMC_EC_SLAVE_NUM_MINUTE",        "51")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=51, HW_DESC=EL7041-0052, CONFIG=-Motor-Amp-57TH76-4280"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7041-0052")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=51, HW_DESC=EL7041-0052, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7041-0052")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052.cmd" "NELM=1"
epicsEnvSet("E2022/10/06 11:14:12.134 OK
2022/10/06 11:14:12.228 OK
2022/10/06 11:14:12.229 OK
2022/10/06 11:14:12.229 OK
2022/10/06 11:14:12.229 OK
2022/10/06 11:14:12.229 OK
2022/10/06 11:14:12.229 OK
2022/10/06 11:14:12.229 OK
2022/10/06 11:14:12.230 OK
2022/10/06 11:14:12.230 OK
2022/10/06 11:14:12.230 OK
2022/10/06 11:14:12.230 OK
2022/10/06 11:14:12.233 OK
2022/10/06 11:14:12.233 OK
2022/10/06 11:14:12.233 OK
CMC_EC_HWTYPE"             "EL7041-0052")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b813052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,51,0x2,0x1b813052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(51,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1600,0x7000,0x11,16,encoderValue01"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "51","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s051")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s051-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7041-0052.substitutions,ECMC_P=IOC_TEST:m0s051-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7041-0052.substitutions,1,1)
dbLoadTemplate(ecmcEL7041-0052.substitutions,"ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "51+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052-Motor-Amp-57TH76-4280.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052-Motor-Amp-57TH76-4280.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x1,2800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x3,48000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo2022/10/06 11:14:12.233 OK
2022/10/06 11:14:12.233 OK
2022/10/06 11:14:12.234 OK
2022/10/06 11:14:12.322 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.323 OK
2022/10/06 11:14:12.324 OK
2022/10/06 11:14:12.324 OK
(51,0x8010,0x4,113,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x6,200,2)"
#ecmcConfigOrDie "Cfg.EcAddSdo(${ECMC_EC_SLAVE_NUM},0x8010,0xA,290,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "60")
epicsEnvSet("ECMC_EC_SLAVE_NUM_HOUR",        "60")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=60, HW_DESC=EL7031, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL7031")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=60, HW_DESC=EL7031, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL7031")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7031")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b773052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,60,0x2,0x1b773052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(60,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7031"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "60","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s060")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s060-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7031.substitutions,ECMC_P=IOC_TEST:m0s060-"
#=====================================2022/10/06 11:14:12.326 OK
2022/10/06 11:14:12.326 OK
2022/10/06 11:14:12.326 OK
2022/10/06 11:14:12.326 OK
2022/10/06 11:14:12.326 OK
2022/10/06 11:14:12.327 OK
macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
=========================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7031.substitutions,1,1)
dbLoadTemplate(ecmcEL7031.substitutions,"ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "60+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x3,24000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x4,450,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x6,200,2)"
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"
# Config motion
epicsEnvSet("ECMC_AXIS_HOUR_NUM_P",           "1")
epicsEnvSet("ECMC_AXIS_MINUTE_NUM_P",         "2")
epicsEnvSet("ECMC_AXIS_SECOND_NUM_P",         "3")
epicsEnvSet("ECMC_AXIS_NANOS_NUM_P",          "4")
epicsEnvSet("ECMC_AXIS_HOUR_NUM",             "5")
epicsEnvSet("ECMC_AXIS_MINUTE_NUM",           "6")
epicsEnvSet("ECMC_AXIS_SECOND_NUM",           "7")
epicsEnvSet("ECMC_AXIS_NANOS_NUM",            "8")
##############################################################################
## AXIS 1 (virtual axis hour)
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "1")
epicsEnvSet("AX_NAME",    "h_phase")
epicsEnvSet("AX_DESC",    "Hours phase")
epicsEnvSet("AX_EGU",     "h")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "h_phase")
epicsEnvSet("ECMC_AXIS_NO",               "1")
epicsEnvSet("ECMC_DESC",                  "Hours phase")
epicsEnvSet("ECMC_EGU",                   "h")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssand2022/10/06 11:14:12.330 OK
2022/10/06 11:14:12.330 OK
2022/10/06 11:14:12.330 OK
2022/10/06 11:14:12.330 OK
2022/10/06 11:14:12.330 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
2022/10/06 11:14:12.331 OK
strom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(1,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(1, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(1, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(1,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(1,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(1,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(1,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(1,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(1,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(1,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax1.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(1,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(1,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.l2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.332 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 OK
2022/10/06 11:14:12.332 ecmcMotorRecord:: setIntegerParam(1 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.332 ecmcMotorRecord:: setDoubleParam(1 motorPowerOnDelay_)=6
2022/10/06 11:14:12.332 ecmcMotorRecord:: setDoubleParam(1 motorPowerOffDelay_=-1
2022/10/06 11:14:12.332 ecmcMotorRecord:: connected(1)
2022/10/06 11:14:12.332 ecmcMotorRecord:: initialPoll(1) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:h_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:h_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax1.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:h_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:h_phase-PosAct.DESC" to "Axis ax1: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:h_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:h_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax1.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:h_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:h_phase-VelAct.DESC" to "Axis ax1: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
atchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(1,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(1,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(1,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(1,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(1,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(1,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(1,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(1, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(1, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "1", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h_phase, MOTOR_PORT=MCU1, AXIS_NO=1, DESC=Hours phase, EGU=h, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h_phase, MOTOR_PORT=MCU1, AXIS_NO=1,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=h_phase,AXIS_NO=1,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=h_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(EC2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
MC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(1,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(1,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.Append2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
2022/10/06 11:14:12.336 OK
macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
AxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(1,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(1,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(1,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(1,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(1,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 2 (virtual axis minutes)
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "2")
epicsEnvSet("AX_NAME",    "m_phase")
epicsEnvSet("AX_DESC",    "Minutes phase")
epicsEnvSet("AX_EGU",     "min")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "m_phase")
epicsEnvSet("ECMC_AXIS_NO",               "2")
epicsEnvSet("ECMC_DESC",                  "Minutes phase")
epicsEnvSet("ECMC_EGU",                   "min")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM 2022/10/06 11:14:12.339 OK
2022/10/06 11:14:12.339 OK
2022/10/06 11:14:12.339 OK
2022/10/06 11:14:12.339 OK
2022/10/06 11:14:12.339 OK
2022/10/06 11:14:12.340 OK
2022/10/06 11:14:12.340 OK
2022/10/06 11:14:12.340 OK
2022/10/06 11:14:12.340 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(2,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(2,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(2, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(2, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(2,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(2,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(2,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(2,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(2,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(2,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(2,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax2.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(2,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(2,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(2,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax2.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax2.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax2.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax2.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(2,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(2,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(2,100)"
ecmcConfigOrDie "Cfg.2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.341 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.341 OK
2022/10/06 11:14:12.342 ecmcMotorRecord:: setIntegerParam(2 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.342 ecmcMotorRecord:: setDoubleParam(2 motorPowerOnDelay_)=6
2022/10/06 11:14:12.342 ecmcMotorRecord:: setDoubleParam(2 motorPowerOffDelay_=-1
2022/10/06 11:14:12.342 ecmcMotorRecord:: connected(2)
2022/10/06 11:14:12.342 ecmcMotorRecord:: initialPoll(2) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:m_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:m_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax2.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:m_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:m_phase-PosAct.DESC" to "Axis ax2: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:m_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:m_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax2.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:m_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:m_phase-VelAct.DESC" to "Axis ax2: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
SetAxisMonEnableLagMon(2,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(2,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(2,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(2,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(2,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(2,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(2,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(2,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(2, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(2, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "2", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m_phase, MOTOR_PORT=MCU1, AXIS_NO=2, DESC=Minutes phase, EGU=min, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m_phase, MOTOR_PORT=MCU1, AXIS_NO=2,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=m_phase,AXIS_NO=2,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=m_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
e2022/10/06 11:14:12.354 OK
2022/10/06 11:14:12.354 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
2022/10/06 11:14:12.355 OK
picsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(2,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(2,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(2,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(2,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(2,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(2,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(2,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECmacLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
MC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 3 (virtual axis seconds)
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "3")
epicsEnvSet("AX_NAME",    "s_phase")
epicsEnvSet("AX_DESC",    "Seconds phase")
epicsEnvSet("AX_EGU",     "s")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "s_phase")
epicsEnvSet("ECMC_AXIS_NO",               "3")
epicsEnvSet("ECMC_DESC",                  "Seconds phase")
epicsEnvSet("ECMC_EGU",                   "s")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmcc2022/10/06 11:14:12.358 OK
2022/10/06 11:14:12.358 OK
2022/10/06 11:14:12.358 OK
2022/10/06 11:14:12.358 OK
2022/10/06 11:14:12.358 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.359 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.360 OK
2022/10/06 11:14:12.361 OK
2022/10/06 11:14:12.361 OK
2022/10/06 11:14:12.361 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.361 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.361 OK
2022/10/06 11:14:12.361 OK
2022/10/06 11:14:12.361 OK
2022/10/06 11:14:12.361 OK
fg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(3,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(3,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(3, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(3, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(3,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(3,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(3,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(3,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(3,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(3,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(3,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax3.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(3,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(3,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(3,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(3,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(3,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(3,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(3,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(3,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(3,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(3,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(3,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(3,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(3,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(3,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(3, 0)"
ecmcConfigOrDie "Cfg.S2022/10/06 11:14:12.361 OK
2022/10/06 11:14:12.362 ecmcMotorRecord:: setIntegerParam(3 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.362 ecmcMotorRecord:: setDoubleParam(3 motorPowerOnDelay_)=6
2022/10/06 11:14:12.362 ecmcMotorRecord:: setDoubleParam(3 motorPowerOffDelay_=-1
2022/10/06 11:14:12.362 ecmcMotorRecord:: connected(3)
2022/10/06 11:14:12.362 ecmcMotorRecord:: initialPoll(3) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:s_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:s_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax3.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:s_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:s_phase-PosAct.DESC" to "Axis ax3: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:s_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:s_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax3.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:s_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:s_phase-VelAct.DESC" to "Axis ax3: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
etAxisHomePostMoveTargetPosition(3, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "3", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s_phase, MOTOR_PORT=MCU1, AXIS_NO=3, DESC=Seconds phase, EGU=s, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s_phase, MOTOR_PORT=MCU1, AXIS_NO=3,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=s_phase,AXIS_NO=3,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=s_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CO2022/10/06 11:14:12.366 OK
2022/10/06 11:14:12.366 OK
2022/10/06 11:14:12.366 OK
2022/10/06 11:14:12.366 OK
2022/10/06 11:14:12.366 OK
2022/10/06 11:14:12.366 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.367 OK
2022/10/06 11:14:12.368 OK
2022/10/06 11:14:12.368 OK
NFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(3,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(3,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(3,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(3,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(3,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(3,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(3,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
################################################################macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
##############
## AXIS 4 (virtual axis nanos)
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "4")
epicsEnvSet("AX_NAME",    "n_phase")
epicsEnvSet("AX_DESC",    "Nanos phase")
epicsEnvSet("AX_EGU",     "ns")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "n_phase")
epicsEnvSet("ECMC_AXIS_NO",               "4")
epicsEnvSet("ECMC_DESC",                  "Nanos phase")
epicsEnvSet("ECMC_EGU",                   "ns")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEn2022/10/06 11:14:12.371 OK
2022/10/06 11:14:12.371 OK
2022/10/06 11:14:12.371 OK
vSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(4,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(4,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(2022/10/06 11:14:12.371 OK
2022/10/06 11:14:12.371 OK
2022/10/06 11:14:12.371 OK
2022/10/06 11:14:12.371 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.372 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.373 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.373 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 11:14:12.373 OK
2022/10/06 11:14:12.374 OK
2022/10/06 11:14:12.374 OK
2022/10/06 11:14:12.374 OK
2022/10/06 11:14:12.374 OK
2022/10/06 11:14:12.374 ecmcMotorRecord:: setIntegerParam(4 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.374 ecmcMotorRecord:: setDoubleParam(4 motorPowerOnDelay_)=6
2022/10/06 11:14:12.374 ecmcMotorRecord:: setDoubleParam(4 motorPowerOffDelay_=-1
2022/10/06 11:14:12.374 ecmcMotorRecord:: connected(4)
2022/10/06 11:14:12.374 ecmcMotorRecord:: initialPoll(4) status=0
4, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(4, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(4,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(4,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(4,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(4,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(4,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(4,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(4,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax4.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(4,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(4,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(4,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(4,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(4,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(4,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(4,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(4,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(4,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(4,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(4,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(4,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(4,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(4,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(4, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(4, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "4", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:n_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:n_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax4.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:n_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:n_phase-PosAct.DESC" to "Axis ax4: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:n_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:n_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax4.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:n_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:n_phase-VelAct.DESC" to "Axis ax4: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
NAME=n_phase, MOTOR_PORT=MCU1, AXIS_NO=4, DESC=Nanos phase, EGU=ns, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=n_phase, MOTOR_PORT=MCU1, AXIS_NO=4,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=n_phase,AXIS_NO=4,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=n_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from2022/10/06 11:14:12.377 OK
2022/10/06 11:14:12.377 OK
2022/10/06 11:14:12.377 OK
2022/10/06 11:14:12.377 OK
2022/10/06 11:14:12.377 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
2022/10/06 11:14:12.378 OK
 PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(4,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(4,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(4,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(4,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(4,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(4,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(4,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 5: Hour (physical motor)
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "60")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "5")
epicsEnvSet("AX_NAME",    "h")
epicsEnvSet("AX_DESC",    "Hours")
epicsEnvSet("AX_EGU",     "h")
epicsEnvSet("MOD_RANGE",  "12")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "h")
epicsEnvSet("ECMC_R",                     "h-")
epicsEnvSet("ECMC_AXIS_NO",               "5")
epicsEnvSet("ECMC_DESC",                  "Hours")
epicsEnvSet("ECMC_EGU",                   "h")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "12")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "12")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s60.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "12*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s60.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s60.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s60.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s60.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s60.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s60.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s60.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s60.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s60.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "12/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "12/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "12/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "12/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s60.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s60.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s60.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s60.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 12...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12)<>0","# ECMC_ENC_SCALE_NUM value OK == 12...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 12...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#===========================2022/10/06 11:14:12.384 OK
2022/10/06 11:14:12.384 OK
2022/10/06 11:14:12.384 OK
2022/10/06 11:14:12.384 OK
2022/10/06 11:14:12.385 OK
2022/10/06 11:14:12.385 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.386 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.387 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
===================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(120)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == 120...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(120)<>0","# ECMC_DRV_SCALE_NUM value OK == 120...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == 120...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(5,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(5, 12)"
ecmcConfigOrDie "Cfg.SetAxisModType(5, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(5,0)"
 ecmcConfigOrDie "Cfg.SetAxisDec(5,0)"
ecmcConfigOrDie "Cfg.SetAxisJerk(5,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(5,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(5,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(5,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(5,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(5,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(5,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(5,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.positionActual01,"ax5.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(5,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(5,12)"
ecmcConfigOrDie "Cfg.SetAxisEncType(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(5,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(5,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm1")"
ecmcConfigOrDie "Cfg.Li2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.388 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.389 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.390 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 OK
2022/10/06 11:14:12.391 ecmcMotorRecord:: setIntegerParam(5 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.391 ecmcMotorRecord:: setDoubleParam(5 motorPowerOnDelay_)=6
2022/10/06 11:14:12.391 ecmcMotorRecord:: setDoubleParam(5 motorPowerOffDelay_=-1
2022/10/06 11:14:12.391 ecmcMotorRecord:: connected(5)
2022/10/06 11:14:12.391 ecmcMotorRecord:: initialPoll(5) status=0
nkEcEntryToObject(,"ax5.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(5,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(5,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(5,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(5,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(5,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveControl01.0,"ax5.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.1,"ax5.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.velocitySetpoint01,"ax5.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveControl01.2,"ax5.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveControl01.1,"ax5.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.3,"ax5.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.7,"ax5.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.14,"ax5.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.2,"ax5.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(5,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(5,120)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(5,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(5,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax5.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax5.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax5.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax5.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(5,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(5,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(5,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(5,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(5,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(5,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(5,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(5, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(5, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "5", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(12)>0){RESULT:=abs(12);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h, MOTOR_PORT=MCU1, AXIS_NO=5, DESC=Hours, EGU=h, PREC=3, VELO=1, JVEL=1, JAR=0.0, ACCS=0, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=12.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h, MOTOR_PORT=MCU1, AXIS_NO=5,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=h,AXIS_NO=5,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=h,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)2022/10/06 11:14:12.395 OK
2022/10/06 11:14:12.395 OK
2022/10/06 11:14:12.395 OK
2022/10/06 11:14:12.395 OK
2022/10/06 11:14:12.395 OK
2022/10/06 11:14:12.395 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK
2022/10/06 11:14:12.396 OK

#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(5,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(5,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(5,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(5,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(5,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(5,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(5,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(5,1)"
##############################################################################
## AXIS 6: Minute (physical motor)
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "51")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "6")
epicsEnvSet("AX_NAME",    "m")
epicsEnvSet("AX_DESC",    "Minutes")
epicsEnvSet("AX_EGU",     "min")
epicsEnvSet("MOD_RANGE",  "60")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "m")
epicsEnvSet("ECMC_R",                     "m-")
epicsEnvSet("ECMC_AXIS_NO",               "6")
epicsEnvSet("ECMC_DESC",                  "Minutes")
epicsEnvSet("ECMC_EGU",                   "min")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "60")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s51.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "60*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s51.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s51.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s51.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s51.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s51.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s51.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s51.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s51.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s51.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "60/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "60/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "60/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "60/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s51.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s51.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s51.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s51.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cell2022/10/06 11:14:12.400 OK
2022/10/06 11:14:12.400 OK
2022/10/06 11:14:12.400 OK
2022/10/06 11:14:12.400 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
Mods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(60)<>0","# ECMC_ENC_SCALE_NUM value OK == 60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(600)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == 600...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(600)<>0","# ECMC_DRV_SCALE_NUM value OK == 600...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == 600...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(6,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(6, 60)"
ecmcConfigOrDie "Cfg.SetAxisModType(6, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(6,1)"
 ecmcConfigOrDie "Cfg.SetAxisDec(6,1)"
ecmcConfigOrDie "Cfg.SetAxisJerk(6,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(6,3)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(6,1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(6,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(6,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(6,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(6,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(6,0.0)"
ecmcConfigOr2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.401 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
2022/10/06 11:14:12.402 OK
Die "Cfg.SetAxisCntrlKff(6,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.positionActual01,"ax6.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(6,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(6,60)"
ecmcConfigOrDie "Cfg.SetAxisEncType(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(6,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(6,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(6,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(6,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(6,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(6,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveControl01.0,"ax6.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.1,"ax6.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.velocitySetpoint01,"ax6.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveControl01.2,"ax6.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveControl01.1,"ax6.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.3,"ax6.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.7,"ax6.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.14,"ax6.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.2,"ax6.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(6,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(6,600)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax6.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax6.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax6.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax6.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(6,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(6,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(6,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(6,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(6,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(6,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(6, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(6, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorReco2022/10/06 11:14:12.402 ecmcMotorRecord:: setIntegerParam(6 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.402 ecmcMotorRecord:: setDoubleParam(6 motorPowerOnDelay_)=6
2022/10/06 11:14:12.402 ecmcMotorRecord:: setDoubleParam(6 motorPowerOffDelay_=-1
2022/10/06 11:14:12.402 ecmcMotorRecord:: connected(6)
2022/10/06 11:14:12.402 ecmcMotorRecord:: initialPoll(6) status=0
rdCreateAxis(MCU1, "6", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(60)>0){RESULT:=abs(60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m, MOTOR_PORT=MCU1, AXIS_NO=6, DESC=Minutes, EGU=min, PREC=3, VELO=3, JVEL=3, JAR=0.0, ACCS=1, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=60.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m, MOTOR_PORT=MCU1, AXIS_NO=6,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=m,AXIS_NO=6,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=m,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
2022/10/06 11:14:12.413 OK
VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(6,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(6,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(6,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(6,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(6,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(6,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(6,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABL2022/10/06 11:14:12.414 OK
E)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(6,1)"
##############################################################################
## AXIS 7: Second (physical motor)
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "50")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "7")
epicsEnvSet("AX_NAME",    "s")
epicsEnvSet("AX_DESC",    "Seconds")
epicsEnvSet("AX_EGU",     "s")
epicsEnvSet("MOD_RANGE",  "60")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "s")
epicsEnvSet("ECMC_R",                     "s-")
epicsEnvSet("ECMC_AXIS_NO",               "7")
epicsEnvSet("ECMC_DESC",                  "Seconds")
epicsEnvSet("ECMC_EGU",                   "s")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "60")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s50.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "60*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s50.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s50.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s50.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s50.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s50.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s50.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s50.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s50.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s50.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "60/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "60/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "60/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "60/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s50.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s50.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s50.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s50.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cm2022/10/06 11:14:12.418 OK
2022/10/06 11:14:12.418 OK
2022/10/06 11:14:12.418 OK
2022/10/06 11:14:12.418 OK
d",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(60)<>0","# ECMC_ENC_SCALE_NUM value OK == 60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(600)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == 600...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(600)<>0","# ECMC_DRV_SCALE_NUM value OK == 600...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == 600...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(7,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(7, 60)"
ecmcConfigOrDie "Cfg.SetAxisModType(7, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#===========================2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.431 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.432 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.433 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.434 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.435 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.436 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
===================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(7,1)"
 ecmcConfigOrDie "Cfg.SetAxisDec(7,1)"
ecmcConfigOrDie "Cfg.SetAxisJerk(7,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(7,3)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(7,1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(7,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(7,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(7,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(7,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(7,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(7,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.positionActual01,"ax7.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(7,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(7,60)"
ecmcConfigOrDie "Cfg.SetAxisEncType(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(7,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(7,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(7,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(7,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(7,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(7,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(7,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(7,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(7,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.0,"ax7.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.1,"ax7.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.velocitySetpoint01,"ax7.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.2,"ax7.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.1,"ax7.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.3,"ax7.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.7,"ax7.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.14,"ax7.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.2,"ax7.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(7,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(7,600)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(7,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(7,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(7,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax7.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax7.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax7.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax7.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(7,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(7,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(7,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(7,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(7,502022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.437 OK
2022/10/06 11:14:12.438 OK
2022/10/06 11:14:12.438 OK
2022/10/06 11:14:12.438 OK
2022/10/06 11:14:12.438 OK
2022/10/06 11:14:12.438 OK
2022/10/06 11:14:12.438 ecmcMotorRecord:: setIntegerParam(7 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.438 ecmcMotorRecord:: setDoubleParam(7 motorPowerOnDelay_)=6
2022/10/06 11:14:12.438 ecmcMotorRecord:: setDoubleParam(7 motorPowerOffDelay_=-1
2022/10/06 11:14:12.439 ecmcMotorRecord:: connected(7)
2022/10/06 11:14:12.439 ecmcMotorRecord:: initialPoll(7) status=0
0.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(7,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(7,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(7,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(7,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(7, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(7, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "7", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(60)>0){RESULT:=abs(60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s, MOTOR_PORT=MCU1, AXIS_NO=7, DESC=Seconds, EGU=s, PREC=3, VELO=3, JVEL=3, JAR=0.0, ACCS=1, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=60.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s, MOTOR_PORT=MCU1, AXIS_NO=7,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=s,AXIS_NO=7,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=s,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEn2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.443 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
vUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(7,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(7,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.Appe2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
2022/10/06 11:14:12.444 OK
ndAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(7,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(7,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(7,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(7,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(7,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(7,1)"
##############################################################################
## AXIS 8: nanos (physical motor)
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "50")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "8")
epicsEnvSet("AX_NAME",    "ns")
epicsEnvSet("AX_DESC",    "nanoseconds")
epicsEnvSet("AX_EGU",     "ns")
epicsEnvSet("AX_EGU",     "ns")
epicsEnvSet("MOD_RANGE",  "1E9")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "ns")
epicsEnvSet("ECMC_R",                     "ns-")
epicsEnvSet("ECMC_AXIS_NO",               "8")
epicsEnvSet("ECMC_DESC",                  "nanoseconds")
epicsEnvSet("ECMC_EGU",                   "ns")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "1E9")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "1E9")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s50.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "1E9*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s50.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s50.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s50.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s50.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s50.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s50.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s50.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s50.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s50.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "1E9/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "1E9/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "1E9/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "1E9/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s50.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s50.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s50.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s50.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1E9)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1E9...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1E9)<>0","# ECMC_ENC_SCALE_NUM value OK == 1E9...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1E9...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-2147483648)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == -2147483648...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-2147483648)<>0","# ECMC_DRV_SCALE_NUM value OK == -2147483648...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == -2147483648...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be2022/10/06 11:14:12.449 OK
2022/10/06 11:14:12.449 OK
2022/10/06 11:14:12.449 OK
2022/10/06 11:14:12.449 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.450 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.451 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
2022/10/06 11:14:12.452 OK
 used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(8,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(8, 1E9)"
ecmcConfigOrDie "Cfg.SetAxisModType(8, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(8,10000000)"
 ecmcConfigOrDie "Cfg.SetAxisDec(8,10000000)"
ecmcConfigOrDie "Cfg.SetAxisJerk(8,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(8,50000000)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(8,10000000)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(8,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(8,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(8,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(8,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(8,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.positionActual01,"ax8.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(8,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(8,1E9)"
ecmcConfigOrDie "Cfg.SetAxisEncType(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(8,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(8,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(8,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(8,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(8,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(8,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(8,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.0,"ax8.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.1,"ax8.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.velocitySetpoint01,"ax8.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.2,"ax8.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.1,"ax8.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.3,"ax8.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.7,"ax8.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.14,"ax8.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.2,"ax8.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(8,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(8,-2147483648)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(8,0)"
ecmcConfigOrDie "Cfg.SetAxisDrv2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.453 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.454 OK
2022/10/06 11:14:12.455 OK
2022/10/06 11:14:12.455 OK
2022/10/06 11:14:12.455 ecmcMotorRecord:: setIntegerParam(8 motorPowerAutoOnOff_)=2
2022/10/06 11:14:12.455 ecmcMotorRecord:: setDoubleParam(8 motorPowerOnDelay_)=6
2022/10/06 11:14:12.455 ecmcMotorRecord:: setDoubleParam(8 motorPowerOffDelay_=-1
2022/10/06 11:14:12.455 ecmcMotorRecord:: connected(8)
2022/10/06 11:14:12.455 ecmcMotorRecord:: initialPoll(8) status=0
BrakeCloseAheadTime(8,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax8.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax8.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax8.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax8.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(8,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(8,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(8,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(8,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(8,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(8,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(8,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(8,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(8, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(8, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "8", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1E9)>0){RESULT:=abs(1E9);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=ns, MOTOR_PORT=MCU1, AXIS_NO=8, DESC=nanoseconds, EGU=ns, PREC=3, VELO=50000000, JVEL=50000000, JAR=0.0, ACCS=10000000, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=1000000000.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=ns, MOTOR_PORT=MCU1, AXIS_NO=8,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=ns,AXIS_NO=8,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=ns,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvS2022/10/06 11:14:12.472 OK
2022/10/06 11:14:12.472 OK
2022/10/06 11:14:12.472 OK
2022/10/06 11:14:12.473 OK
2022/10/06 11:14:12.473 OK
2022/10/06 11:14:12.473 OK
2022/10/06 11:14:12.473 OK
2022/10/06 11:14:12.474 OK
2022/10/06 11:14:12.474 OK
2022/10/06 11:14:12.474 OK
2022/10/06 11:14:12.474 OK
2022/10/06 11:14:12.474 OK
2022/10/06 11:14:12.475 OK
2022/10/06 11:14:12.476 OK
2022/10/06 11:14:12.476 OK
2022/10/06 11:14:12.477 OK
2022/10/06 11:14:12.477 OK
2022/10/06 11:14:12.477 OK
2022/10/06 11:14:12.480 OK
global.currtime:=ec_get_time();

global.nano    := global.currtime-trunc(global.currtime/1e9)*1e9;
global.second  := ec_get_time_local_sec(global.currtime)+global.nanos/1E9;
global.minute  := ec_get_time_local_min(global.currtime)+global.seconds/60;
global.hour    := ec_get_time_local_hour(global.currtime)+global.minutes/60;


if(global.hour>12) {
  global.hour:=global.hour-12;
}

# print('Time: ', global.hour);
# print(':', global.minute);
# print(':', global.second);
# print( '.', global.nano );
# println('');
2022/10/06 11:14:12.500 OK
2022/10/06 11:14:12.500 OK
et("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(8,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(8,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(8,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(8,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(8,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(8,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(8,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(8,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(8,1)"
##############################################################################
## PLC 0: Calc time
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=1,FILE=./plc/time.plc,PLC_MACROS=''")
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "0")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC0.plc")
ecmcFileExist("./plc/time.plc",1)
system "msi -V -M '' -o /tmp/PLC0.plc ./plc/time.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC0.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC0.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(0,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(0,/tmp/PLC0.plc)"
system "rm -f /tmp/PLC0.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "0", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=0,Name=IOC_TEST:,Index2Char=00,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## PLC 1: Hour
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=1, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_HOUR_NUM},AX_PHASE=${ECMC_AXIS_HOUR_NUM_P},TIME_SOURCE=global.hour'")
############################################################2022/10/06 11:14:12.504 OK
2022/10/06 11:14:12.504 OK
2022/10/06 11:14:12.504 OK
2022/10/06 11:14:12.504 OK
2022/10/06 11:14:12.504 OK
2022/10/06 11:14:12.504 OK
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000015
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(1) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000007
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(2) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(3) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(4) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(5) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(5) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(6) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(6) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(7) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(7) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(8) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(8) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:13.331 ecmcMotorRecord:: poll(8) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.506 EtherCAT bus ready (not scaning).
2022/10/06 11:14:13.507 INFO: Locking memory
2022/10/06 11:14:13.519 Starting up EtherCAT bus: 0 second(s). Max wait time 30 second(s).
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000005
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000009
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(5) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(6) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(7) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:13.531 ecmcMotorRecord:: poll(8) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:188: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:188: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:188: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO: Motion interlocked (type 16).
2022/10/06 11:14:13.608 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:188: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 37: Not operational (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 50: Not operational (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 51: Not operational (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 60: Not operational (0x24011).
2022/10/06 11:14:13.608 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(1) homed=1
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(1) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(1) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000027
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(2) homed=1
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(2) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(2) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000009
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(3) homed=1
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(3) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(3) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000008
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(4) homed=1
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(4) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(4) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000008
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(5) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(5) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(5) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000006
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(5) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2022/10/06 11:14:13.732 ecmcMotorRecord:: sErrorMessage(5)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(6) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(6) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(6) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000008
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(6) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2022/10/06 11:14:13.732 ecmcMotorRecord:: sErrorMessage(6)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(7) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(7) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(7) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000005
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(7) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2022/10/06 11:14:13.732 ecmcMotorRecord:: sErrorMessage(7)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(8) LLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(8) HLS=0
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(8) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000006
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(8) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2022/10/06 11:14:13.732 ecmcMotorRecord:: sErrorMessage(8)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2022/10/06 11:14:13.732 ecmcMotorRecord:: poll(8) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2022/10/06 11:14:13.932 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2022/10/06 11:14:13.932 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2022/10/06 11:14:13.932 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:13.932 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.132 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2022/10/06 11:14:14.132 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:14.132 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.132 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.332 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000013
2022/10/06 11:14:14.332 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:14.332 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.332 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.519 Starting up EtherCAT bus: 1 second(s). Max wait time 30 second(s).
2022/10/06 11:14:14.532 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2022/10/06 11:14:14.532 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:14.532 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.532 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.732 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2022/10/06 11:14:14.732 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:14.732 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.732 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.932 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2022/10/06 11:14:14.932 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:14.932 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:14.932 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2022/10/06 11:14:15.112 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2022/10/06 11:14:15.112 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO: Motion interlock cleared.
2022/10/06 11:14:15.112 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(1) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000005
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(2) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000008
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(4) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(5) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=4 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(6) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=4 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(7) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=4 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(8) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2022/10/06 11:14:15.133 ecmcMotorRecord:: poll(8) callParamCallbacksUpdateError Error=4 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2022/10/06 11:14:16.519 EtherCAT bus started!
2022/10/06 11:14:16.519 OK
2022/10/06 11:14:16.519 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocBuild (0). Allow callbacks: true.
Starting iocInit
2022/10/06 11:14:16.519 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtBeginning (1). Allow callbacks: true.
2022/10/06 11:14:16.521 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCallbackInit (2). Allow callbacks: true.
2022/10/06 11:14:16.523 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaLinkInit (3). Allow callbacks: true.
2022/10/06 11:14:16.523 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDrvSup (4). Allow callbacks: true.
2022/10/06 11:14:16.523 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitRecSup (5). Allow callbacks: true.
2022/10/06 11:14:16.523 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDevSup (6). Allow callbacks: true.
2022/10/06 11:14:16.526 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.plc0.enable linked to record (asyn reason 1).
2022/10/06 11:14:16.526 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.reset linked to record (asyn reason 2).
2022/10/06 11:14:16.527 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.command linked to record (asyn reason 3).
2022/10/06 11:14:16.527 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.command linked to record (asyn reason 4).
2022/10/06 11:14:16.528 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.command linked to record (asyn reason 5).
2022/10/06 11:14:16.528 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.command linked to record (asyn reason 6).
2022/10/06 11:14:16.529 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.command linked to record (asyn reason 7).
2022/10/06 11:14:16.530 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.command linked to record (asyn reason 8).
2022/10/06 11:14:16.532 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.command linked to record (asyn reason 9).
2022/10/06 11:14:16.533 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.command linked to record (asyn reason 10).
2022/10/06 11:14:16.534 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.driveControl01 linked to record (asyn reason 11).
2022/10/06 11:14:16.535 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.velocitySetpoint01 linked to record (asyn reason 12).
2022/10/06 11:14:16.535 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.encoderControl01 linked to record (asyn reason 13).
2022/10/06 11:14:16.536 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.encoderValue01 linked to record (asyn reason 14).
2022/10/06 11:14:16.536 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.driveControl01 linked to record (asyn reason 15).
2022/10/06 11:14:16.537 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.velocitySetpoint01 linked to record (asyn reason 16).
2022/10/06 11:14:16.537 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.encoderControl01 linked to record (asyn reason 17).
2022/10/06 11:14:16.538 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.encoderValue01 linked to record (asyn reason 18).
2022/10/06 11:14:16.539 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.driveControl01 linked to record (asyn reason 19).
2022/10/06 11:14:16.539 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.velocitySetpoint01 linked to record (asyn reason 20).
2022/10/06 11:14:16.540 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.encoderControl01 linked to record (asyn reason 21).
2022/10/06 11:14:16.541 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.encoderValue01 linked to record (asyn reason 22).
2022/10/06 11:14:16.541 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.driveControl01 linked to record (asyn reason 23).
2022/10/06 11:14:16.542 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.velocitySetpoint01 linked to record (asyn reason 24).
2022/10/06 11:14:16.542 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.encoderControl01 linked to record (asyn reason 25).
2022/10/06 11:14:16.543 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.encoderValue01 linked to record (asyn reason 26).
2022/10/06 11:14:16.549 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.targpos linked to record (asyn reason 27).
2022/10/06 11:14:16.550 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.targvelo linked to record (asyn reason 28).
2022/10/06 11:14:16.558 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.targpos linked to record (asyn reason 29).
2022/10/06 11:14:16.559 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.targvelo linked to record (asyn reason 30).
2022/10/06 11:14:16.560 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.targpos linked to record (asyn reason 31).
2022/10/06 11:14:16.561 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.targvelo linked to record (asyn reason 32).
2022/10/06 11:14:16.563 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.targpos linked to record (asyn reason 33).
2022/10/06 11:14:16.565 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.targvelo linked to record (asyn reason 34).
2022/10/06 11:14:16.567 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.targpos linked to record (asyn reason 35).
2022/10/06 11:14:16.569 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.targvelo linked to record (asyn reason 36).
2022/10/06 11:14:16.572 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.targpos linked to record (asyn reason 37).
2022/10/06 11:14:16.573 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.targvelo linked to record (asyn reason 38).
2022/10/06 11:14:16.576 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.targpos linked to record (asyn reason 39).
2022/10/06 11:14:16.577 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.targvelo linked to record (asyn reason 40).
2022/10/06 11:14:16.581 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.targpos linked to record (asyn reason 41).
2022/10/06 11:14:16.582 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.targvelo linked to record (asyn reason 42).
2022/10/06 11:14:16.582 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.driveStatus01 linked to record (asyn reason 43).
2022/10/06 11:14:16.583 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.encoderStatus01 linked to record (asyn reason 44).
2022/10/06 11:14:16.584 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.driveStatus01 linked to record (asyn reason 45).
2022/10/06 11:14:16.584 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.encoderStatus01 linked to record (asyn reason 46).
2022/10/06 11:14:16.585 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.driveStatus01 linked to record (asyn reason 47).
2022/10/06 11:14:16.585 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.encoderStatus01 linked to record (asyn reason 48).
2022/10/06 11:14:16.586 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.driveStatus01 linked to record (asyn reason 49).
2022/10/06 11:14:16.586 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.encoderStatus01 linked to record (asyn reason 50).
2022/10/06 11:14:16.587 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.diagnostic linked to record (asyn reason 51).
2022/10/06 11:14:16.587 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.plc.expression linked to record (asyn reason 52).
2022/10/06 11:14:16.587 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.diagnostic linked to record (asyn reason 53).
2022/10/06 11:14:16.588 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.plc.expression linked to record (asyn reason 54).
2022/10/06 11:14:16.588 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.diagnostic linked to record (asyn reason 55).
2022/10/06 11:14:16.588 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.plc.expression linked to record (asyn reason 56).
2022/10/06 11:14:16.589 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.diagnostic linked to record (asyn reason 57).
2022/10/06 11:14:16.589 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.plc.expression linked to record (asyn reason 58).
2022/10/06 11:14:16.590 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.diagnostic linked to record (asyn reason 59).
2022/10/06 11:14:16.590 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.plc.expression linked to record (asyn reason 60).
2022/10/06 11:14:16.590 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.diagnostic linked to record (asyn reason 61).
2022/10/06 11:14:16.591 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.plc.expression linked to record (asyn reason 62).
2022/10/06 11:14:16.591 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.diagnostic linked to record (asyn reason 63).
2022/10/06 11:14:16.591 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.plc.expression linked to record (asyn reason 64).
2022/10/06 11:14:16.592 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.diagnostic linked to record (asyn reason 65).
2022/10/06 11:14:16.592 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.plc.expression linked to record (asyn reason 66).
2022/10/06 11:14:16.593 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.msg linked to record (asyn reason 67).
2022/10/06 11:14:16.593 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.updated linked to record (asyn reason 68).
2022/10/06 11:14:16.594 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.slavestatus linked to record (asyn reason 69).
2022/10/06 11:14:16.596 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.slavestatus linked to record (asyn reason 70).
2022/10/06 11:14:16.598 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.slavestatus linked to record (asyn reason 71).
2022/10/06 11:14:16.599 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.slavestatus linked to record (asyn reason 72).
2022/10/06 11:14:16.600 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.status linked to record (asyn reason 73).
2022/10/06 11:14:16.600 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.errorid linked to record (asyn reason 74).
2022/10/06 11:14:16.601 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.status linked to record (asyn reason 75).
2022/10/06 11:14:16.602 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.errorid linked to record (asyn reason 76).
2022/10/06 11:14:16.602 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.status linked to record (asyn reason 77).
2022/10/06 11:14:16.603 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.errorid linked to record (asyn reason 78).
2022/10/06 11:14:16.604 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.status linked to record (asyn reason 79).
2022/10/06 11:14:16.605 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.errorid linked to record (asyn reason 80).
2022/10/06 11:14:16.606 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.status linked to record (asyn reason 81).
2022/10/06 11:14:16.606 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.errorid linked to record (asyn reason 82).
2022/10/06 11:14:16.607 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.status linked to record (asyn reason 83).
2022/10/06 11:14:16.608 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.errorid linked to record (asyn reason 84).
2022/10/06 11:14:16.608 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.status linked to record (asyn reason 85).
2022/10/06 11:14:16.609 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.errorid linked to record (asyn reason 86).
2022/10/06 11:14:16.610 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.status linked to record (asyn reason 87).
2022/10/06 11:14:16.611 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.errorid linked to record (asyn reason 88).
2022/10/06 11:14:16.612 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.masterstatus linked to record (asyn reason 89).
2022/10/06 11:14:16.613 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.slavecounter linked to record (asyn reason 90).
2022/10/06 11:14:16.613 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.memmapcounter linked to record (asyn reason 91).
2022/10/06 11:14:16.615 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainfailcountertotal linked to record (asyn reason 92).
2022/10/06 11:14:16.616 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.entrycounter linked to record (asyn reason 93).
2022/10/06 11:14:16.617 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainstatus linked to record (asyn reason 94).
2022/10/06 11:14:16.618 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.enable linked to record (asyn reason 95).
2022/10/06 11:14:16.619 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.firstscan linked to record (asyn reason 96).
2022/10/06 11:14:16.621 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.enable linked to record (asyn reason 97).
2022/10/06 11:14:16.622 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.firstscan linked to record (asyn reason 98).
2022/10/06 11:14:16.624 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.enable linked to record (asyn reason 99).
2022/10/06 11:14:16.626 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.firstscan linked to record (asyn reason 100).
2022/10/06 11:14:16.627 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.enable linked to record (asyn reason 101).
2022/10/06 11:14:16.629 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.firstscan linked to record (asyn reason 102).
2022/10/06 11:14:16.631 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.enable linked to record (asyn reason 103).
2022/10/06 11:14:16.632 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.firstscan linked to record (asyn reason 104).
2022/10/06 11:14:16.634 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.enable linked to record (asyn reason 105).
2022/10/06 11:14:16.636 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.firstscan linked to record (asyn reason 106).
2022/10/06 11:14:16.638 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.enable linked to record (asyn reason 107).
2022/10/06 11:14:16.640 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.firstscan linked to record (asyn reason 108).
2022/10/06 11:14:16.642 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax8.plc.enable linked to record (asyn reason 109).
2022/10/06 11:14:16.644 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax8.plc.firstscan linked to record (asyn reason 110).
2022/10/06 11:14:16.648 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.ok linked to record (asyn reason 111).
2022/10/06 11:14:16.650 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.control linked to record (asyn reason 112).
2022/10/06 11:14:16.652 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.control linked to record (asyn reason 113).
2022/10/06 11:14:16.654 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.control linked to record (asyn reason 114).
2022/10/06 11:14:16.655 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.control linked to record (asyn reason 115).
2022/10/06 11:14:16.657 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.control linked to record (asyn reason 116).
2022/10/06 11:14:16.658 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.control linked to record (asyn reason 117).
2022/10/06 11:14:16.660 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.control linked to record (asyn reason 118).
2022/10/06 11:14:16.661 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.control linked to record (asyn reason 119).
2022/10/06 11:14:16.663 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.ONE linked to record (asyn reason 120).
2022/10/06 11:14:16.665 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.ZERO linked to record (asyn reason 121).
2022/10/06 11:14:16.666 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.ONE linked to record (asyn reason 122).
2022/10/06 11:14:16.668 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.ZERO linked to record (asyn reason 123).
2022/10/06 11:14:16.669 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.ONE linked to record (asyn reason 124).
2022/10/06 11:14:16.671 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.ZERO linked to record (asyn reason 125).
2022/10/06 11:14:16.672 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.ONE linked to record (asyn reason 126).
2022/10/06 11:14:16.674 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.ZERO linked to record (asyn reason 127).
2022/10/06 11:14:16.676 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.cmddata linked to record (asyn reason 128).
2022/10/06 11:14:16.681 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.cmddata linked to record (asyn reason 129).
2022/10/06 11:14:16.682 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.cmddata linked to record (asyn reason 130).
2022/10/06 11:14:16.684 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.cmddata linked to record (asyn reason 131).
2022/10/06 11:14:16.686 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.cmddata linked to record (asyn reason 132).
2022/10/06 11:14:16.688 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.cmddata linked to record (asyn reason 133).
2022/10/06 11:14:16.690 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.cmddata linked to record (asyn reason 134).
2022/10/06 11:14:16.692 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.cmddata linked to record (asyn reason 135).
2022/10/06 11:14:16.695 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.positionActual01 linked to record (asyn reason 136).
2022/10/06 11:14:16.697 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s37.encoderLatchPostion01 linked to record (asyn reason 137).
2022/10/06 11:14:16.701 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.positionActual01 linked to record (asyn reason 138).
2022/10/06 11:14:16.703 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s50.encoderLatchPostion01 linked to record (asyn reason 139).
2022/10/06 11:14:16.711 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.positionActual01 linked to record (asyn reason 140).
2022/10/06 11:14:16.712 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s51.encoderLatchPostion01 linked to record (asyn reason 141).
2022/10/06 11:14:16.717 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.positionActual01 linked to record (asyn reason 142).
2022/10/06 11:14:16.719 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s60.encoderLatchPostion01 linked to record (asyn reason 143).
2022/10/06 11:14:16.723 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.setpos linked to record (asyn reason 144).
2022/10/06 11:14:16.725 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.poserr linked to record (asyn reason 145).
2022/10/06 11:14:16.726 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.error linked to record (asyn reason 146).
2022/10/06 11:14:16.728 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.setpos linked to record (asyn reason 147).
2022/10/06 11:14:16.729 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.poserr linked to record (asyn reason 148).
2022/10/06 11:14:16.730 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.error linked to record (asyn reason 149).
2022/10/06 11:14:16.732 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.setpos linked to record (asyn reason 150).
2022/10/06 11:14:16.734 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.poserr linked to record (asyn reason 151).
2022/10/06 11:14:16.735 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.error linked to record (asyn reason 152).
2022/10/06 11:14:16.737 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.setpos linked to record (asyn reason 153).
2022/10/06 11:14:16.738 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.poserr linked to record (asyn reason 154).
2022/10/06 11:14:16.740 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.error linked to record (asyn reason 155).
2022/10/06 11:14:16.741 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.actpos0 linked to record (asyn reason 156).
2022/10/06 11:14:16.743 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.actvel0 linked to record (asyn reason 157).
2022/10/06 11:14:16.744 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.setpos linked to record (asyn reason 158).
2022/10/06 11:14:16.746 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.poserr linked to record (asyn reason 159).
2022/10/06 11:14:16.747 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.error linked to record (asyn reason 160).
2022/10/06 11:14:16.749 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.actpos0 linked to record (asyn reason 161).
2022/10/06 11:14:16.750 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.actvel0 linked to record (asyn reason 162).
2022/10/06 11:14:16.752 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.setpos linked to record (asyn reason 163).
2022/10/06 11:14:16.754 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.poserr linked to record (asyn reason 164).
2022/10/06 11:14:16.755 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.error linked to record (asyn reason 165).
2022/10/06 11:14:16.757 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.actpos0 linked to record (asyn reason 166).
2022/10/06 11:14:16.759 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.actvel0 linked to record (asyn reason 167).
2022/10/06 11:14:16.761 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.setpos linked to record (asyn reason 168).
2022/10/06 11:14:16.763 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.poserr linked to record (asyn reason 169).
2022/10/06 11:14:16.764 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.error linked to record (asyn reason 170).
2022/10/06 11:14:16.766 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.actpos0 linked to record (asyn reason 171).
2022/10/06 11:14:16.768 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.actvel0 linked to record (asyn reason 172).
2022/10/06 11:14:16.770 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.setpos linked to record (asyn reason 173).
2022/10/06 11:14:16.772 ecmcAsynPortDriver:drvUserCreate: Parameter ax8.poserr linked to record (asyn reason 174).
2022/10/06 11:14:16.774 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax8.plc.error linked to record (asyn reason 175).
2022/10/06 11:14:16.777 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.plc0.scantime linked to record (asyn reason 176).
2022/10/06 11:14:16.781 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.plc0.error linked to record (asyn reason 177).
2022/10/06 11:14:16.783 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.appmode linked to record (asyn reason 178).
2022/10/06 11:14:16.784 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.id linked to record (asyn reason 179).
2022/10/06 11:14:16.786 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.min linked to record (asyn reason 180).
2022/10/06 11:14:16.789 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.max linked to record (asyn reason 181).
2022/10/06 11:14:16.791 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.min linked to record (asyn reason 182).
2022/10/06 11:14:16.793 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.max linked to record (asyn reason 183).
2022/10/06 11:14:16.794 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.min linked to record (asyn reason 184).
2022/10/06 11:14:16.796 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.max linked to record (asyn reason 185).
2022/10/06 11:14:16.799 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.min linked to record (asyn reason 186).
2022/10/06 11:14:16.800 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.max linked to record (asyn reason 187).
##################
## PLC 2: Minute
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=2, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_MINUTE_NUM},AX_PHASE=${ECMC_AXIS_MINUTE_NUM_P},TIME_SOURCE=global.minute'")
##############################################################################
## PLC 3: Second
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=3, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_SECOND_NUM},AX_PHASE=${ECMC_AXIS_SECOND_NUM_P},TIME_SOURCE=global.second'")
##############################################################################
## PLC 4: Nano
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=4, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_NANOS_NUM},AX_PHASE=${ECMC_AXIS_NANOS_NUM_P},TIME_SOURCE=global.nano'")
##############################################################################
############# Configure diagnostics:
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"
# go active
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setAppMode.cmd)
#==============================================================================
# setAppMode.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/general.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/general.cmd
#==============================================================================
# general.cmd
ecmcFileExist("ecmcGeneral.db",1,1)
dbLoadRecords("ecmcGeneral.db","P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0,ECMC_PROC_HOOK=")
# Examples of commands for info:
# ecmcReport <level> or asynReport <level>
# ecmcReport 3
# ecmcGrepParam <pattern>
# List all ecmc params for ethercat slave 2:
# ecmcGrepParam *s2*
#
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("ecmcEc.db",1,1)
 dbLoadRecords("ecmcEc.db","P=IOC_TEST:,ECMC_EC_MP=m,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,T_SMP_MS=10,TSE=0")
ecmcConfigOrDie "Cfg.SetAppMode(1)"
iocInit()
############################################################################
## EPICS R7.0.6.1-E3-7.0.6.1-patch
## Rev. 2022-03-09T15:26+0100
############################################################################
IOC_TEST:h_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:h_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:m_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:m_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:s_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:s_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:n_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:n_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
2022/10/06 11:14:16.801 [devMotorAsyn.c:439  IOC_TEST:h_phase] init_record IOC_TEST:h_phase position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.802 [devMotorAsyn.c:185  IOC_TEST:h_phase] init_controller IOC_TEST:h_phase set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:266  IOC_TEST:h_phase] update_soft_limits IOC_TEST:h_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.802 [motorDevSup.c:327  IO2022/10/06 11:14:16.802 ecmcMotorRecord:: setIntegerParam(1 motorUpdateStatus_)=0
2022/10/06 11:14:16.802 ecmcMotorRecord:: setIntegerParam(2 motorUpdateStatus_)=0
2022/10/06 11:14:16.802 ecmcMotorRecord:: setIntegerParam(3 motorUpdateStatus_)=0
C_TEST:h_phase] PositionRestoreNeeded IOC_TEST:h_phase rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.802 [motorRecord.cc:782  IOC_TEST:h_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.802 [motorRecord.cc:720  IOC_TEST:h_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:833  IOC_TEST:h_phase] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:968  IOC_TEST:h_phase] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x490a neverPolled=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:439  IOC_TEST:m_phase] init_record IOC_TEST:m_phase position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.802 [devMotorAsyn.c:185  IOC_TEST:m_phase] init_controller IOC_TEST:m_phase set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:266  IOC_TEST:m_phase] update_soft_limits IOC_TEST:m_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.802 [motorDevSup.c:327  IOC_TEST:m_phase] PositionRestoreNeeded IOC_TEST:m_phase rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.802 [motorRecord.cc:782  IOC_TEST:m_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.802 [motorRecord.cc:720  IOC_TEST:m_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:833  IOC_TEST:m_phase] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:968  IOC_TEST:m_phase] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x490a neverPolled=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:439  IOC_TEST:s_phase] init_record IOC_TEST:s_phase position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.802 [devMotorAsyn.c:185  IOC_TEST:s_phase] init_controller IOC_TEST:s_phase set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:266  IOC_TEST:s_phase] update_soft_limits IOC_TEST:s_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.802 [motorDevSup.c:327  IOC_TEST:s_phase] PositionRestoreNeeded IOC_TEST:s_phase rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.802 [motorRecord.cc:782  IOC_TEST:s_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.802 [motorRecord.cc:720  IOC_TEST:s_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:833  IOC_TEST:s_phase] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:968  IOC_TEST:s_phase] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x490a neverPolled=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:439  IOC_TEST:n_phase] init_record IOC_TEST:n_phase position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.802 [devMotorAsyn.c:185  IOC_TEST:n_phase] init_controller IOC_TEST:n_phase set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:266  IOC_TEST:n_phase] update_soft_limits IOC_TEST:n_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.802 [motorDevSup.c:327  IOC_TEST:n_phase] PositionRestoreNeeded IOC_TEST:n_2022/10/06 11:14:16.802 ecmcMotorRecord:: setIntegerParam(4 motorUpdateStatus_)=0
2022/10/06 11:14:16.803 ecmcMotorRecord:: setIntegerParam(5 motorUpdateStatus_)=0
2022/10/06 11:14:16.804 ecmcMotorRecord:: setIntegerParam(6 motorUpdateStatus_)=0
phase rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.802 [motorRecord.cc:782  IOC_TEST:n_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.802 [motorRecord.cc:720  IOC_TEST:n_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:833  IOC_TEST:n_phase] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000
2022/10/06 11:14:16.802 [motorRecord.cc:968  IOC_TEST:n_phase] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x490a neverPolled=0
2022/10/06 11:14:16.802 [devMotorAsyn.c:439  IOC_TEST:h] init_record IOC_TEST:h position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x0b0a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.803 [devMotorAsyn.c:185  IOC_TEST:h] init_controller IOC_TEST:h set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.803 [devMotorAsyn.c:266  IOC_TEST:h] update_soft_limits IOC_TEST:h RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.803 [motorDevSup.c:327  IOC_TEST:h] PositionRestoreNeeded IOC_TEST:h rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.000937 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.803 [motorRecord.cc:782  IOC_TEST:h] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.803 [motorRecord.cc:720  IOC_TEST:h] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.000937
2022/10/06 11:14:16.803 [motorRecord.cc:833  IOC_TEST:h] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 11:14:16.803 [motorRecord.cc:968  IOC_TEST:h] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0xb0a neverPolled=0
2022/10/06 11:14:16.803 [devMotorAsyn.c:439  IOC_TEST:m] init_record IOC_TEST:m position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x0b0a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.803 [devMotorAsyn.c:185  IOC_TEST:m] init_controller IOC_TEST:m set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.803 [devMotorAsyn.c:266  IOC_TEST:m] update_soft_limits IOC_TEST:m RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.804 [motorDevSup.c:327  IOC_TEST:m] PositionRestoreNeeded IOC_TEST:m rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.004687 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.804 [motorRecord.cc:782  IOC_TEST:m] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.804 [motorRecord.cc:720  IOC_TEST:m] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.004687
2022/10/06 11:14:16.804 [motorRecord.cc:833  IOC_TEST:m] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 11:14:16.804 [motorRecord.cc:968  IOC_TEST:m] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0xb0a neverPolled=0
2022/10/06 11:14:16.804 [devMotorAsyn.c:439  IOC_TEST:s] init_record IOC_TEST:s position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x0b0a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.804 [devMotorAsyn.c:185  IOC_TEST:s] init_controller IOC_TEST:s set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.804 [devMotorAsyn.c:266  IOC_TEST:s] update_soft_limits IOC_TEST:s RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.804 [motorDevSup.c:327  IOC_TEST:s] PositionRestoreNeeded IOC_TEST:s rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.004687 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.804 [motorRecord.cc:782  IOC_TEST:s] init_re_init start neverPolled=0 stat=17 n2022/10/06 11:14:16.804 ecmcMotorRecord:: setIntegerParam(7 motorUpdateStatus_)=0
2022/10/06 11:14:16.804 ecmcMotorRecord:: setIntegerParam(8 motorUpdateStatus_)=0
2022/10/06 11:14:16.820 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDatabase (7). Allow callbacks: true.
2022/10/06 11:14:16.821 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterFinishDevSup (8). Allow callbacks: true.
2022/10/06 11:14:17.336 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterScanInit (9). Allow callbacks: true.
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(1 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(2 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(3 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(4 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(5 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(6 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(7 HomPos_)=0.000000
2022/10/06 11:14:17.337 ecmcMotorRecord:: setDoubleParam(8 HomPos_)=0.000000
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(1 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(2 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(3 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(4 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(5 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(6 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(7 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.338 ecmcMotorRecord:: setIntegerParam(8 HomProc_)=3 motorNotHomedProblem=0
2022/10/06 11:14:17.339 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitialProcess (10). Allow callbacks: true.
2022/10/06 11:14:17.341 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (11). Allow callbacks: true.
2022/10/06 11:14:17.341 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocBuilt (12). Allow callbacks: true.
2022/10/06 11:14:17.345 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocRun (13). Allow callbacks: true.
2022/10/06 11:14:17.345 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterDatabaseRunning (14). Allow callbacks: true.
2022/10/06 11:14:17.345 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInterruptAccept (28). Allow callbacks: true.
2022/10/06 11:14:17.346 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaServerRunning (15). Allow callbacks: true.
2022/10/06 11:14:17.346 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (29). Allow callbacks: true.
iocRun: All initialization complete
2022/10/06 11:14:17.359 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocRunning (16). Allow callbacks: true.
sta=0
2022/10/06 11:14:16.804 [motorRecord.cc:720  IOC_TEST:s] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.004687
2022/10/06 11:14:16.804 [motorRecord.cc:833  IOC_TEST:s] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 11:14:16.804 [motorRecord.cc:968  IOC_TEST:s] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0xb0a neverPolled=0
2022/10/06 11:14:16.804 [devMotorAsyn.c:439  IOC_TEST:ns] init_record IOC_TEST:ns position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x0b0a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 11:14:16.804 [devMotorAsyn.c:185  IOC_TEST:ns] init_controller IOC_TEST:ns set encoder ratio=1.000000 status=0
2022/10/06 11:14:16.804 [devMotorAsyn.c:266  IOC_TEST:ns] update_soft_limits IOC_TEST:ns RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 11:14:16.804 [motorDevSup.c:327  IOC_TEST:ns] PositionRestoreNeeded IOC_TEST:ns rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=78125.000000 pmr->mres=78125.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 11:14:16.804 [motorRecord.cc:782  IOC_TEST:ns] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 11:14:16.804 [motorRecord.cc:720  IOC_TEST:ns] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=78125.000000
2022/10/06 11:14:16.804 [motorRecord.cc:833  IOC_TEST:ns] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 11:14:16.804 [motorRecord.cc:968  IOC_TEST:ns] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0xb0a neverPolled=0
# dbpf $(IOC):timing.SPAM 0
# dbpf $(IOC):phase.SPAM 0
# dbpf $(IOC):phys.SPAM 0
epicsEnvSet EPICS_DRIVER_PATH /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0:/epics/base-7.0.6.1/require/4.0.0/siteMods
epicsEnvSet EPICS_DRIVER_PATH /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0:/home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0:/epics/base-7.0.6.1/require/4.0.0/siteMods
# Set the IOC Prompt String One 
epicsEnvSet IOCSH_PS1 "mcag-dev-asm-02-29260 > "
#
[?1034hmcag-dev-asm-02-29260 > dbl
IOC_TEST:m0s037-Enc01-LtchAutRst
IOC_TEST:m0s050-Enc01-LtchAutRst
IOC_TEST:m0s051-Enc01-LtchAutRst
IOC_TEST:m0s060-Enc01-LtchAutRst
IOC_TEST:m0s037-Enc01-LtchRst
IOC_TEST:m0s050-Enc01-LtchRst
IOC_TEST:m0s051-Enc01-LtchRst
IOC_TEST:m0s060-Enc01-LtchRst
IOC_TEST:h_phase-DbgStrToLOG
IOC_TEST:m_phase-DbgStrToLOG
IOC_TEST:s_phase-DbgStrToLOG
IOC_TEST:n_phase-DbgStrToLOG
IOC_TEST:h-DbgStrToLOG
IOC_TEST:m-DbgStrToLOG
IOC_TEST:s-DbgStrToLOG
IOC_TEST:ns-DbgStrToLOG
IOC_TEST:m0s037-Enc01-LchAutRstSp
IOC_TEST:m0s050-Enc01-LchAutRstSp
IOC_TEST:m0s051-Enc01-LchAutRstSp
IOC_TEST:m0s060-Enc01-LchAutRstSp
IOC_TEST:h_phase-EnaCmd
IOC_TEST:h_phase-ExeCmd
IOC_TEST:h_phase-StpCmd
IOC_TEST:h_phase-RstCmd
IOC_TEST:h_phase-EncSrcTyp-Cmd
IOC_TEST:h_phase-TrjSrcTyp-Cmd
IOC_TEST:h_phase-PLC-EnaCmd
IOC_TEST:h_phase-CmdFrmPLCCmd
IOC_TEST:h_phase-SftLimBwdEna
IOC_TEST:h_phase-SftLimFwdEna
IOC_TEST:m_phase-EnaCmd
IOC_TEST:m_phase-ExeCmd
IOC_TEST:m_phase-StpCmd
IOC_TEST:m_phase-RstCmd
IOC_TEST:m_phase-EncSrcTyp-Cmd
IOC_TEST:m_phase-TrjSrcTyp-Cmd
IOC_TEST:m_phase-PLC-EnaCmd
IOC_TEST:m_phase-CmdFrmPLCCmd
IOC_TEST:m_phase-SftLimBwdEna
IOC_TEST:m_phase-SftLimFwdEna
IOC_TEST:s_phase-EnaCmd
IOC_TEST:s_phase-ExeCmd
IOC_TEST:s_phase-StpCmd
IOC_TEST:s_phase-RstCmd
IOC_TEST:s_phase-EncSrcTyp-Cmd
IOC_TEST:s_phase-TrjSrcTyp-Cmd
IOC_TEST:s_phase-PLC-EnaCmd
IOC_TEST:s_phase-CmdFrmPLCCmd
IOC_TEST:s_phase-SftLimBwdEna
IOC_TEST:s_phase-SftLimFwdEna
IOC_TEST:n_phase-EnaCmd
IOC_TEST:n_phase-ExeCmd
IOC_TEST:n_phase-StpCmd
IOC_TEST:n_phase-RstCmd
IOC_TEST:n_phase-EncSrcTyp-Cmd
IOC_TEST:n_phase-TrjSrcTyp-Cmd
IOC_TEST:n_phase-PLC-EnaCmd
IOC_TEST:n_phase-CmdFrmPLCCmd
IOC_TEST:n_phase-SftLimBwdEna
IOC_TEST:n_phase-SftLimFwdEna
IOC_TEST:h-EnaCmd
IOC_TEST:h-ExeCmd
IOC_TEST:h-StpCmd
IOC_TEST:h-RstCmd
IOC_TEST:h-EncSrcTyp-Cmd
IOC_TEST:h-TrjSrcTyp-Cmd
IOC_TEST:h-PLC-EnaCmd
IOC_TEST:h-CmdFrmPLCCmd
IOC_TEST:h-SftLimBwdEna
IOC_TEST:h-SftLimFwdEna
IOC_TEST:m-EnaCmd
IOC_TEST:m-ExeCmd
IOC_TEST:m-StpCmd
IOC_TEST:m-RstCmd
IOC_TEST:m-EncSrcTyp-Cmd
IOC_TEST:m-TrjSrcTyp-Cmd
IOC_TEST:m-PLC-EnaCmd
IOC_TEST:m-CmdFrmPLCCmd
IOC_TEST:m-SftLimBwdEna
IOC_TEST:m-SftLimFwdEna
IOC_TEST:s-EnaCmd
IOC_TEST:s-ExeCmd
IOC_TEST:s-StpCmd
IOC_TEST:s-RstCmd
IOC_TEST:s-EncSrcTyp-Cmd
IOC_TEST:s-TrjSrcTyp-Cmd
IOC_TEST:s-PLC-EnaCmd
IOC_TEST:s-CmdFrmPLCCmd
IOC_TEST:s-SftLimBwdEna
IOC_TEST:s-SftLimFwdEna
IOC_TEST:ns-EnaCmd
IOC_TEST:ns-ExeCmd
IOC_TEST:ns-StpCmd
IOC_TEST:ns-RstCmd
IOC_TEST:ns-EncSrcTyp-Cmd
IOC_TEST:ns-TrjSrcTyp-Cmd
IOC_TEST:ns-PLC-EnaCmd
IOC_TEST:ns-CmdFrmPLCCmd
IOC_TEST:ns-SftLimBwdEna
IOC_TEST:ns-SftLimFwdEna
IOC_TEST:PLC00-EnaCmd
IOC_TEST:MCU-ErrRst
IOC_TEST:h_phase-HomProc-RB
IOC_TEST:h_phase-Type
IOC_TEST:h_phase-DrvType
IOC_TEST:h_phase-TrajType
IOC_TEST:m_phase-HomProc-RB
IOC_TEST:m_phase-Type
IOC_TEST:m_phase-DrvType
IOC_TEST:m_phase-TrajType
IOC_TEST:s_phase-HomProc-RB
IOC_TEST:s_phase-Type
IOC_TEST:s_phase-DrvType
IOC_TEST:s_phase-TrajType
IOC_TEST:n_phase-HomProc-RB
IOC_TEST:n_phase-Type
IOC_TEST:n_phase-DrvType
IOC_TEST:n_phase-TrajType
IOC_TEST:h-HomProc-RB
IOC_TEST:h-Type
IOC_TEST:h-DrvType
IOC_TEST:h-TrajType
IOC_TEST:m-HomProc-RB
IOC_TEST:m-Type
IOC_TEST:m-DrvType
IOC_TEST:m-TrajType
IOC_TEST:s-HomProc-RB
IOC_TEST:s-Type
IOC_TEST:s-DrvType
IOC_TEST:s-TrajType
IOC_TEST:ns-HomProc-RB
IOC_TEST:ns-Type
IOC_TEST:ns-DrvType
IOC_TEST:ns-TrajType
IOC_TEST:m0s037-Enc01-LtchCmd
IOC_TEST:m0s050-Enc01-LtchCmd
IOC_TEST:m0s051-Enc01-LtchCmd
IOC_TEST:m0s060-Enc01-LtchCmd
IOC_TEST:h_phase-MtnCmd
IOC_TEST:m_phase-MtnCmd
IOC_TEST:s_phase-MtnCmd
IOC_TEST:n_phase-MtnCmd
IOC_TEST:h-MtnCmd
IOC_TEST:m-MtnCmd
IOC_TEST:s-MtnCmd
IOC_TEST:ns-MtnCmd
IOC_TEST:m0s037-Drv01-Cmd
IOC_TEST:m0s037-Drv01-Spd
IOC_TEST:m0s037-Enc01-Cmd
IOC_TEST:m0s037-Enc01-PosCmd
IOC_TEST:m0s050-Drv01-Cmd
IOC_TEST:m0s050-Drv01-Spd
IOC_TEST:m0s050-Enc01-Cmd
IOC_TEST:m0s050-Enc01-PosCmd
IOC_TEST:m0s051-Drv01-Cmd
IOC_TEST:m0s051-Drv01-Spd
IOC_TEST:m0s051-Enc01-Cmd
IOC_TEST:m0s051-Enc01-PosCmd
IOC_TEST:m0s060-Drv01-Cmd
IOC_TEST:m0s060-Drv01-Spd
IOC_TEST:m0s060-Enc01-Cmd
IOC_TEST:m0s060-Enc01-PosCmd
IOC_TEST:h_phase-OFF_
IOC_TEST:h_phase-MRES_
IOC_TEST:h_phase-HomPos
IOC_TEST:h_phase-VelToHom
IOC_TEST:h_phase-VelFrmHom
IOC_TEST:h_phase-AccHom
IOC_TEST:h_phase-TgtPosCmd
IOC_TEST:h_phase-TgtVelCmd
IOC_TEST:m_phase-OFF_
IOC_TEST:m_phase-MRES_
IOC_TEST:m_phase-HomPos
IOC_TEST:m_phase-VelToHom
IOC_TEST:m_phase-VelFrmHom
IOC_TEST:m_phase-AccHom
IOC_TEST:m_phase-TgtPosCmd
IOC_TEST:m_phase-TgtVelCmd
IOC_TEST:s_phase-OFF_
IOC_TEST:s_phase-MRES_
IOC_TEST:s_phase-HomPos
IOC_TEST:s_phase-VelToHom
IOC_TEST:s_phase-VelFrmHom
IOC_TEST:s_phase-AccHom
IOC_TEST:s_phase-TgtPosCmd
IOC_TEST:s_phase-TgtVelCmd
IOC_TEST:n_phase-OFF_
IOC_TEST:n_phase-MRES_
IOC_TEST:n_phase-HomPos
IOC_TEST:n_phase-VelToHom
IOC_TEST:n_phase-VelFrmHom
IOC_TEST:n_phase-AccHom
IOC_TEST:n_phase-TgtPosCmd
IOC_TEST:n_phase-TgtVelCmd
IOC_TEST:h-OFF_
IOC_TEST:h-MRES_
IOC_TEST:h-HomPos
IOC_TEST:h-VelToHom
IOC_TEST:h-VelFrmHom
IOC_TEST:h-AccHom
IOC_TEST:h-TgtPosCmd
IOC_TEST:h-TgtVelCmd
IOC_TEST:m-OFF_
IOC_TEST:m-MRES_
IOC_TEST:m-HomPos
IOC_TEST:m-VelToHom
IOC_TEST:m-VelFrmHom
IOC_TEST:m-AccHom
IOC_TEST:m-TgtPosCmd
IOC_TEST:m-TgtVelCmd
IOC_TEST:s-OFF_
IOC_TEST:s-MRES_
IOC_TEST:s-HomPos
IOC_TEST:s-VelToHom
IOC_TEST:s-VelFrmHom
IOC_TEST:s-AccHom
IOC_TEST:s-TgtPosCmd
IOC_TEST:s-TgtVelCmd
IOC_TEST:ns-OFF_
IOC_TEST:ns-MRES_
IOC_TEST:ns-HomPos
IOC_TEST:ns-VelToHom
IOC_TEST:ns-VelFrmHom
IOC_TEST:ns-AccHom
IOC_TEST:ns-TgtPosCmd
IOC_TEST:ns-TgtVelCmd
IOC_TEST:m0s037-Drv01-Stat
IOC_TEST:m0s037-Enc01-Stat
IOC_TEST:m0s037-Stat_
IOC_TEST:m0s050-Drv01-Stat
IOC_TEST:m0s050-Enc01-Stat
IOC_TEST:m0s050-Stat_
IOC_TEST:m0s051-Drv01-Stat
IOC_TEST:m0s051-Enc01-Stat
IOC_TEST:m0s051-Stat_
IOC_TEST:m0s060-Drv01-Stat
IOC_TEST:m0s060-Enc01-Stat
IOC_TEST:m0s060-Stat_
IOC_TEST:h_phase-Stat_
IOC_TEST:m_phase-Stat_
IOC_TEST:s_phase-Stat_
IOC_TEST:n_phase-Stat_
IOC_TEST:h-Stat_
IOC_TEST:m-Stat_
IOC_TEST:s-Stat_
IOC_TEST:ns-Stat_
IOC_TEST:m0-Stat_
IOC_TEST:m0-Dom-Stat_
REQMOD:mcag-dev-asm-02-29260:MODULES
REQMOD:mcag-dev-asm-02-29260:VERSIONS
REQMOD:mcag-dev-asm-02-29260:MOD_VER
IOC_TEST:h_phase-Arr-Stat
IOC_TEST:h_phase-PLC-Expr-RB
IOC_TEST:m_phase-Arr-Stat
IOC_TEST:m_phase-PLC-Expr-RB
IOC_TEST:s_phase-Arr-Stat
IOC_TEST:s_phase-PLC-Expr-RB
IOC_TEST:n_phase-Arr-Stat
IOC_TEST:n_phase-PLC-Expr-RB
IOC_TEST:h-Arr-Stat
IOC_TEST:h-PLC-Expr-RB
IOC_TEST:m-Arr-Stat
IOC_TEST:m-PLC-Expr-RB
IOC_TEST:s-Arr-Stat
IOC_TEST:s-PLC-Expr-RB
IOC_TEST:ns-Arr-Stat
IOC_TEST:ns-PLC-Expr-RB
IOC_TEST:MCU-ErrMsg
IOC_TEST:MCU-Updated
IOC_TEST:m0s037-Stat
IOC_TEST:m0s050-Stat
IOC_TEST:m0s051-Stat
IOC_TEST:m0s060-Stat
IOC_TEST:h_phase-MR-ErrId
IOC_TEST:h_phase-CfgRDBD-En-RB
IOC_TEST:h_phase-CfgPOSLAG-En-RB
IOC_TEST:h_phase-CfgDHLM-En-RB
IOC_TEST:h_phase-CfgDLLM-En-RB
IOC_TEST:h_phase-Stat
IOC_TEST:h_phase-ErrId
IOC_TEST:m_phase-MR-ErrId
IOC_TEST:m_phase-CfgRDBD-En-RB
IOC_TEST:m_phase-CfgPOSLAG-En-RB
IOC_TEST:m_phase-CfgDHLM-En-RB
IOC_TEST:m_phase-CfgDLLM-En-RB
IOC_TEST:m_phase-Stat
IOC_TEST:m_phase-ErrId
IOC_TEST:s_phase-MR-ErrId
IOC_TEST:s_phase-CfgRDBD-En-RB
IOC_TEST:s_phase-CfgPOSLAG-En-RB
IOC_TEST:s_phase-CfgDHLM-En-RB
IOC_TEST:s_phase-CfgDLLM-En-RB
IOC_TEST:s_phase-Stat
IOC_TEST:s_phase-ErrId
IOC_TEST:n_phase-MR-ErrId
IOC_TEST:n_phase-CfgRDBD-En-RB
IOC_TEST:n_phase-CfgPOSLAG-En-RB
IOC_TEST:n_phase-CfgDHLM-En-RB
IOC_TEST:n_phase-CfgDLLM-En-RB
IOC_TEST:n_phase-Stat
IOC_TEST:n_phase-ErrId
IOC_TEST:h-MR-ErrId
IOC_TEST:h-CfgRDBD-En-RB
IOC_TEST:h-CfgPOSLAG-En-RB
IOC_TEST:h-CfgDHLM-En-RB
IOC_TEST:h-CfgDLLM-En-RB
IOC_TEST:h-Stat
IOC_TEST:h-ErrId
IOC_TEST:m-MR-ErrId
IOC_TEST:m-CfgRDBD-En-RB
IOC_TEST:m-CfgPOSLAG-En-RB
IOC_TEST:m-CfgDHLM-En-RB
IOC_TEST:m-CfgDLLM-En-RB
IOC_TEST:m-Stat
IOC_TEST:m-ErrId
IOC_TEST:s-MR-ErrId
IOC_TEST:s-CfgRDBD-En-RB
IOC_TEST:s-CfgPOSLAG-En-RB
IOC_TEST:s-CfgDHLM-En-RB
IOC_TEST:s-CfgDLLM-En-RB
IOC_TEST:s-Stat
IOC_TEST:s-ErrId
IOC_TEST:ns-MR-ErrId
IOC_TEST:ns-CfgRDBD-En-RB
IOC_TEST:ns-CfgPOSLAG-En-RB
IOC_TEST:ns-CfgDHLM-En-RB
IOC_TEST:ns-CfgDLLM-En-RB
IOC_TEST:ns-Stat
IOC_TEST:ns-ErrId
IOC_TEST:m0-Stat
IOC_TEST:m0-SlvCntr
IOC_TEST:m0-MemmapCntr
IOC_TEST:m0-DomFailCntrTot
IOC_TEST:m0-EntryCntr
IOC_TEST:m0-Dom-Stat
IOC_TEST:m0s037-Drv01-WrnAlrm
IOC_TEST:m0s037-Drv01-ErrAlrm
IOC_TEST:m0s037-Drv01-StlAlrm
IOC_TEST:m0s037-Drv01-SyncErrAlrm
IOC_TEST:m0s037-Enc01-ExtLtchOK
IOC_TEST:m0s037-Enc01-OpnCrctAlrm
IOC_TEST:m0s037-Enc01-WrnAlrm
IOC_TEST:m0s037-Enc01-SyncErrAlrm
IOC_TEST:m0s037-Online
IOC_TEST:m0s037-Operational
IOC_TEST:m0s037-Alstate-Init
IOC_TEST:m0s037-Alstate-Preop
IOC_TEST:m0s037-Alstate-Safeop
IOC_TEST:m0s037-Alstate-Op
IOC_TEST:m0s050-Drv01-WrnAlrm
IOC_TEST:m0s050-Drv01-ErrAlrm
IOC_TEST:m0s050-Drv01-StlAlrm
IOC_TEST:m0s050-Drv01-SyncErrAlrm
IOC_TEST:m0s050-Enc01-ExtLtchOK
IOC_TEST:m0s050-Enc01-OpnCrctAlrm
IOC_TEST:m0s050-Enc01-WrnAlrm
IOC_TEST:m0s050-Enc01-SyncErrAlrm
IOC_TEST:m0s050-Online
IOC_TEST:m0s050-Operational
IOC_TEST:m0s050-Alstate-Init
IOC_TEST:m0s050-Alstate-Preop
IOC_TEST:m0s050-Alstate-Safeop
IOC_TEST:m0s050-Alstate-Op
IOC_TEST:m0s051-Drv01-WrnAlrm
IOC_TEST:m0s051-Drv01-ErrAlrm
IOC_TEST:m0s051-Drv01-StlAlrm
IOC_TEST:m0s051-Drv01-SyncErrAlrm
IOC_TEST:m0s051-Enc01-ExtLtchOK
IOC_TEST:m0s051-Enc01-OpnCrctAlrm
IOC_TEST:m0s051-Enc01-WrnAlrm
IOC_TEST:m0s051-Enc01-SyncErrAlrm
IOC_TEST:m0s051-Online
IOC_TEST:m0s051-Operational
IOC_TEST:m0s051-Alstate-Init
IOC_TEST:m0s051-Alstate-Preop
IOC_TEST:m0s051-Alstate-Safeop
IOC_TEST:m0s051-Alstate-Op
IOC_TEST:m0s060-Drv01-WrnAlrm
IOC_TEST:m0s060-Drv01-ErrAlrm
IOC_TEST:m0s060-Drv01-StlAlrm
IOC_TEST:m0s060-Drv01-SyncErrAlrm
IOC_TEST:m0s060-Enc01-ExtLtchOK
IOC_TEST:m0s060-Enc01-OpnCrctAlrm
IOC_TEST:m0s060-Enc01-WrnAlrm
IOC_TEST:m0s060-Enc01-SyncErrAlrm
IOC_TEST:m0s060-Online
IOC_TEST:m0s060-Operational
IOC_TEST:m0s060-Alstate-Init
IOC_TEST:m0s060-Alstate-Preop
IOC_TEST:m0s060-Alstate-Safeop
IOC_TEST:m0s060-Alstate-Op
IOC_TEST:h_phase-EnaCmd-RB
IOC_TEST:h_phase-EnaAct
IOC_TEST:h_phase-ExeCmd-RB
IOC_TEST:h_phase-Busy
IOC_TEST:h_phase-AtTarget
IOC_TEST:h_phase-Moving
IOC_TEST:h_phase-LimFwd
IOC_TEST:h_phase-LimBwd
IOC_TEST:h_phase-HomeSwitch
IOC_TEST:h_phase-Homed
IOC_TEST:h_phase-InRT
IOC_TEST:h_phase-TrjSrcTyp-RB
IOC_TEST:h_phase-EncSrcTyp-RB
IOC_TEST:h_phase-CmdFrmPLCCmd-RB
IOC_TEST:h_phase-SftLimFwdEna-RB
IOC_TEST:h_phase-SftLimBwdEna-RB
IOC_TEST:h_phase-PLC-EnaCmd-RB
IOC_TEST:h_phase-PLC-FirstScan
IOC_TEST:m_phase-EnaCmd-RB
IOC_TEST:m_phase-EnaAct
IOC_TEST:m_phase-ExeCmd-RB
IOC_TEST:m_phase-Busy
IOC_TEST:m_phase-AtTarget
IOC_TEST:m_phase-Moving
IOC_TEST:m_phase-LimFwd
IOC_TEST:m_phase-LimBwd
IOC_TEST:m_phase-HomeSwitch
IOC_TEST:m_phase-Homed
IOC_TEST:m_phase-InRT
IOC_TEST:m_phase-TrjSrcTyp-RB
IOC_TEST:m_phase-EncSrcTyp-RB
IOC_TEST:m_phase-CmdFrmPLCCmd-RB
IOC_TEST:m_phase-SftLimFwdEna-RB
IOC_TEST:m_phase-SftLimBwdEna-RB
IOC_TEST:m_phase-PLC-EnaCmd-RB
IOC_TEST:m_phase-PLC-FirstScan
IOC_TEST:s_phase-EnaCmd-RB
IOC_TEST:s_phase-EnaAct
IOC_TEST:s_phase-ExeCmd-RB
IOC_TEST:s_phase-Busy
IOC_TEST:s_phase-AtTarget
IOC_TEST:s_phase-Moving
IOC_TEST:s_phase-LimFwd
IOC_TEST:s_phase-LimBwd
IOC_TEST:s_phase-HomeSwitch
IOC_TEST:s_phase-Homed
IOC_TEST:s_phase-InRT
IOC_TEST:s_phase-TrjSrcTyp-RB
IOC_TEST:s_phase-EncSrcTyp-RB
IOC_TEST:s_phase-CmdFrmPLCCmd-RB
IOC_TEST:s_phase-SftLimFwdEna-RB
IOC_TEST:s_phase-SftLimBwdEna-RB
IOC_TEST:s_phase-PLC-EnaCmd-RB
IOC_TEST:s_phase-PLC-FirstScan
IOC_TEST:n_phase-EnaCmd-RB
IOC_TEST:n_phase-EnaAct
IOC_TEST:n_phase-ExeCmd-RB
IOC_TEST:n_phase-Busy
IOC_TEST:n_phase-AtTarget
IOC_TEST:n_phase-Moving
IOC_TEST:n_phase-LimFwd
IOC_TEST:n_phase-LimBwd
IOC_TEST:n_phase-HomeSwitch
IOC_TEST:n_phase-Homed
IOC_TEST:n_phase-InRT
IOC_TEST:n_phase-TrjSrcTyp-RB
IOC_TEST:n_phase-EncSrcTyp-RB
IOC_TEST:n_phase-CmdFrmPLCCmd-RB
IOC_TEST:n_phase-SftLimFwdEna-RB
IOC_TEST:n_phase-SftLimBwdEna-RB
IOC_TEST:n_phase-PLC-EnaCmd-RB
IOC_TEST:n_phase-PLC-FirstScan
IOC_TEST:h-EnaCmd-RB
IOC_TEST:h-EnaAct
IOC_TEST:h-ExeCmd-RB
IOC_TEST:h-Busy
IOC_TEST:h-AtTarget
IOC_TEST:h-Moving
IOC_TEST:h-LimFwd
IOC_TEST:h-LimBwd
IOC_TEST:h-HomeSwitch
IOC_TEST:h-Homed
IOC_TEST:h-InRT
IOC_TEST:h-TrjSrcTyp-RB
IOC_TEST:h-EncSrcTyp-RB
IOC_TEST:h-CmdFrmPLCCmd-RB
IOC_TEST:h-SftLimFwdEna-RB
IOC_TEST:h-SftLimBwdEna-RB
IOC_TEST:h-PLC-EnaCmd-RB
IOC_TEST:h-PLC-FirstScan
IOC_TEST:m-EnaCmd-RB
IOC_TEST:m-EnaAct
IOC_TEST:m-ExeCmd-RB
IOC_TEST:m-Busy
IOC_TEST:m-AtTarget
IOC_TEST:m-Moving
IOC_TEST:m-LimFwd
IOC_TEST:m-LimBwd
IOC_TEST:m-HomeSwitch
IOC_TEST:m-Homed
IOC_TEST:m-InRT
IOC_TEST:m-TrjSrcTyp-RB
IOC_TEST:m-EncSrcTyp-RB
IOC_TEST:m-CmdFrmPLCCmd-RB
IOC_TEST:m-SftLimFwdEna-RB
IOC_TEST:m-SftLimBwdEna-RB
IOC_TEST:m-PLC-EnaCmd-RB
IOC_TEST:m-PLC-FirstScan
IOC_TEST:s-EnaCmd-RB
IOC_TEST:s-EnaAct
IOC_TEST:s-ExeCmd-RB
IOC_TEST:s-Busy
IOC_TEST:s-AtTarget
IOC_TEST:s-Moving
IOC_TEST:s-LimFwd
IOC_TEST:s-LimBwd
IOC_TEST:s-HomeSwitch
IOC_TEST:s-Homed
IOC_TEST:s-InRT
IOC_TEST:s-TrjSrcTyp-RB
IOC_TEST:s-EncSrcTyp-RB
IOC_TEST:s-CmdFrmPLCCmd-RB
IOC_TEST:s-SftLimFwdEna-RB
IOC_TEST:s-SftLimBwdEna-RB
IOC_TEST:s-PLC-EnaCmd-RB
IOC_TEST:s-PLC-FirstScan
IOC_TEST:ns-EnaCmd-RB
IOC_TEST:ns-EnaAct
IOC_TEST:ns-ExeCmd-RB
IOC_TEST:ns-Busy
IOC_TEST:ns-AtTarget
IOC_TEST:ns-Moving
IOC_TEST:ns-LimFwd
IOC_TEST:ns-LimBwd
IOC_TEST:ns-HomeSwitch
IOC_TEST:ns-Homed
IOC_TEST:ns-InRT
IOC_TEST:ns-TrjSrcTyp-RB
IOC_TEST:ns-EncSrcTyp-RB
IOC_TEST:ns-CmdFrmPLCCmd-RB
IOC_TEST:ns-SftLimFwdEna-RB
IOC_TEST:ns-SftLimBwdEna-RB
IOC_TEST:ns-PLC-EnaCmd-RB
IOC_TEST:ns-PLC-FirstScan
IOC_TEST:m0-LinkUp
IOC_TEST:m0-AlStates-Init
IOC_TEST:m0-AlStates-Preop
IOC_TEST:m0-AlStates-Safeop
IOC_TEST:m0-AlStates-Op
IOC_TEST:m0-Dom-RedunActive
IOC_TEST:m0-Dom-WC-Zero
IOC_TEST:m0-Dom-WC-Incomplete
IOC_TEST:m0-Dom-WC-Complete
IOC_TEST:m0-Stat-OK
IOC_TEST:m0s037-EntryCntr
IOC_TEST:m0s050-EntryCntr
IOC_TEST:m0s051-EntryCntr
IOC_TEST:m0s060-EntryCntr
IOC_TEST:h_phase-SeqState
IOC_TEST:h_phase-LastIlock
IOC_TEST:m_phase-SeqState
IOC_TEST:m_phase-LastIlock
IOC_TEST:s_phase-SeqState
IOC_TEST:s_phase-LastIlock
IOC_TEST:n_phase-SeqState
IOC_TEST:n_phase-LastIlock
IOC_TEST:h-SeqState
IOC_TEST:h-LastIlock
IOC_TEST:m-SeqState
IOC_TEST:m-LastIlock
IOC_TEST:s-SeqState
IOC_TEST:s-LastIlock
IOC_TEST:ns-SeqState
IOC_TEST:ns-LastIlock
IOC_TEST:m0-SlvRsp
IOC_TEST:m0-Dom-WC
IOC_TEST:h_phase-Cmd_
IOC_TEST:m_phase-Cmd_
IOC_TEST:s_phase-Cmd_
IOC_TEST:n_phase-Cmd_
IOC_TEST:h-Cmd_
IOC_TEST:m-Cmd_
IOC_TEST:s-Cmd_
IOC_TEST:ns-Cmd_
IOC_TEST:m0s037-One
IOC_TEST:m0s037-Zero
IOC_TEST:m0s050-One
IOC_TEST:m0s050-Zero
IOC_TEST:m0s051-One
IOC_TEST:m0s051-Zero
IOC_TEST:m0s060-One
IOC_TEST:m0s060-Zero
IOC_TEST:h_phase-DIR_
IOC_TEST:h_phase-ErrRst
IOC_TEST:h_phase-HomProc
IOC_TEST:h_phase-MtnCmdData
IOC_TEST:m_phase-DIR_
IOC_TEST:m_phase-ErrRst
IOC_TEST:m_phase-HomProc
IOC_TEST:m_phase-MtnCmdData
IOC_TEST:s_phase-DIR_
IOC_TEST:s_phase-ErrRst
IOC_TEST:s_phase-HomProc
IOC_TEST:s_phase-MtnCmdData
IOC_TEST:n_phase-DIR_
IOC_TEST:n_phase-ErrRst
IOC_TEST:n_phase-HomProc
IOC_TEST:n_phase-MtnCmdData
IOC_TEST:h-DIR_
IOC_TEST:h-ErrRst
IOC_TEST:h-HomProc
IOC_TEST:h-MtnCmdData
IOC_TEST:m-DIR_
IOC_TEST:m-ErrRst
IOC_TEST:m-HomProc
IOC_TEST:m-MtnCmdData
IOC_TEST:s-DIR_
IOC_TEST:s-ErrRst
IOC_TEST:s-HomProc
IOC_TEST:s-MtnCmdData
IOC_TEST:ns-DIR_
IOC_TEST:ns-ErrRst
IOC_TEST:ns-HomProc
IOC_TEST:ns-MtnCmdData
REQMOD:mcag-dev-asm-02-29260:exit
REQMOD:mcag-dev-asm-02-29260:BaseVersion
REQMOD:mcag-dev-asm-02-29260:require_VER
REQMOD:mcag-dev-asm-02-29260:ecmccfg_VER
REQMOD:mcag-dev-asm-02-29260:asyn_VER
REQMOD:mcag-dev-asm-02-29260:exprtk_VER
REQMOD:mcag-dev-asm-02-29260:motor_VER
REQMOD:mcag-dev-asm-02-29260:ruckig_VER
REQMOD:mcag-dev-asm-02-29260:ecmc_VER
IOC_TEST:m0s037-HWType
IOC_TEST:m0s050-HWType
IOC_TEST:m0s051-HWType
IOC_TEST:m0s060-HWType
IOC_TEST:h_phase-MsgTxt
IOC_TEST:m_phase-MsgTxt
IOC_TEST:s_phase-MsgTxt
IOC_TEST:n_phase-MsgTxt
IOC_TEST:h-MsgTxt
IOC_TEST:m-MsgTxt
IOC_TEST:s-MsgTxt
IOC_TEST:ns-MsgTxt
IOC_TEST:m0s037-Drv01-Cmd-RB
IOC_TEST:m0s037-Drv01-Spd-RB
IOC_TEST:m0s037-Enc01-PosAct
IOC_TEST:m0s037-Enc01-LtchPosAct
IOC_TEST:m0s037-Enc01-Cmd-RB
IOC_TEST:m0s037-Enc01-PosCmd-RB
IOC_TEST:m0s050-Drv01-Cmd-RB
IOC_TEST:m0s050-Drv01-Spd-RB
IOC_TEST:m0s050-Enc01-PosAct
IOC_TEST:m0s050-Enc01-LtchPosAct
IOC_TEST:m0s050-Enc01-Cmd-RB
IOC_TEST:m0s050-Enc01-PosCmd-RB
IOC_TEST:m0s051-Drv01-Cmd-RB
IOC_TEST:m0s051-Drv01-Spd-RB
IOC_TEST:m0s051-Enc01-PosAct
IOC_TEST:m0s051-Enc01-LtchPosAct
IOC_TEST:m0s051-Enc01-Cmd-RB
IOC_TEST:m0s051-Enc01-PosCmd-RB
IOC_TEST:m0s060-Drv01-Cmd-RB
IOC_TEST:m0s060-Drv01-Spd-RB
IOC_TEST:m0s060-Enc01-PosAct
IOC_TEST:m0s060-Enc01-LtchPosAct
IOC_TEST:m0s060-Enc01-Cmd-RB
IOC_TEST:m0s060-Enc01-PosCmd-RB
IOC_TEST:h_phase-Vel-RB
IOC_TEST:h_phase-Acc-RB
IOC_TEST:h_phase-EncAct
IOC_TEST:h_phase-CfgSREV-RB
IOC_TEST:h_phase-CfgUREV-RB
IOC_TEST:h_phase-CfgPMIN-RB
IOC_TEST:h_phase-CfgPMAX-RB
IOC_TEST:h_phase-CfgSPDB-RB
IOC_TEST:h_phase-CfgRDBD-RB
IOC_TEST:h_phase-CfgRDBD-Tim-RB
IOC_TEST:h_phase-CfgPOSLAG-RB
IOC_TEST:h_phase-CfgPOSLAG-Tim-RB
IOC_TEST:h_phase-CfgDHLM-RB
IOC_TEST:h_phase-CfgDLLM-RB
IOC_TEST:h_phase-CfgVELO-RB
IOC_TEST:h_phase-CfgVMAX-RB
IOC_TEST:h_phase-CfgJVEL-RB
IOC_TEST:h_phase-CfgACCS-RB
IOC_TEST:h_phase-HomPos-RB
IOC_TEST:h_phase-PosAct
IOC_TEST:h_phase-VelAct
IOC_TEST:h_phase-PosSet
IOC_TEST:h_phase-PosErr
IOC_TEST:h_phase-PLC-Err
IOC_TEST:m_phase-Vel-RB
IOC_TEST:m_phase-Acc-RB
IOC_TEST:m_phase-EncAct
IOC_TEST:m_phase-CfgSREV-RB
IOC_TEST:m_phase-CfgUREV-RB
IOC_TEST:m_phase-CfgPMIN-RB
IOC_TEST:m_phase-CfgPMAX-RB
IOC_TEST:m_phase-CfgSPDB-RB
IOC_TEST:m_phase-CfgRDBD-RB
IOC_TEST:m_phase-CfgRDBD-Tim-RB
IOC_TEST:m_phase-CfgPOSLAG-RB
IOC_TEST:m_phase-CfgPOSLAG-Tim-RB
IOC_TEST:m_phase-CfgDHLM-RB
IOC_TEST:m_phase-CfgDLLM-RB
IOC_TEST:m_phase-CfgVELO-RB
IOC_TEST:m_phase-CfgVMAX-RB
IOC_TEST:m_phase-CfgJVEL-RB
IOC_TEST:m_phase-CfgACCS-RB
IOC_TEST:m_phase-HomPos-RB
IOC_TEST:m_phase-PosAct
IOC_TEST:m_phase-VelAct
IOC_TEST:m_phase-PosSet
IOC_TEST:m_phase-PosErr
IOC_TEST:m_phase-PLC-Err
IOC_TEST:s_phase-Vel-RB
IOC_TEST:s_phase-Acc-RB
IOC_TEST:s_phase-EncAct
IOC_TEST:s_phase-CfgSREV-RB
IOC_TEST:s_phase-CfgUREV-RB
IOC_TEST:s_phase-CfgPMIN-RB
IOC_TEST:s_phase-CfgPMAX-RB
IOC_TEST:s_phase-CfgSPDB-RB
IOC_TEST:s_phase-CfgRDBD-RB
IOC_TEST:s_phase-CfgRDBD-Tim-RB
IOC_TEST:s_phase-CfgPOSLAG-RB
IOC_TEST:s_phase-CfgPOSLAG-Tim-RB
IOC_TEST:s_phase-CfgDHLM-RB
IOC_TEST:s_phase-CfgDLLM-RB
IOC_TEST:s_phase-CfgVELO-RB
IOC_TEST:s_phase-CfgVMAX-RB
IOC_TEST:s_phase-CfgJVEL-RB
IOC_TEST:s_phase-CfgACCS-RB
IOC_TEST:s_phase-HomPos-RB
IOC_TEST:s_phase-PosAct
IOC_TEST:s_phase-VelAct
IOC_TEST:s_phase-PosSet
IOC_TEST:s_phase-PosErr
IOC_TEST:s_phase-PLC-Err
IOC_TEST:n_phase-Vel-RB
IOC_TEST:n_phase-Acc-RB
IOC_TEST:n_phase-EncAct
IOC_TEST:n_phase-CfgSREV-RB
IOC_TEST:n_phase-CfgUREV-RB
IOC_TEST:n_phase-CfgPMIN-RB
IOC_TEST:n_phase-CfgPMAX-RB
IOC_TEST:n_phase-CfgSPDB-RB
IOC_TEST:n_phase-CfgRDBD-RB
IOC_TEST:n_phase-CfgRDBD-Tim-RB
IOC_TEST:n_phase-CfgPOSLAG-RB
IOC_TEST:n_phase-CfgPOSLAG-Tim-RB
IOC_TEST:n_phase-CfgDHLM-RB
IOC_TEST:n_phase-CfgDLLM-RB
IOC_TEST:n_phase-CfgVELO-RB
IOC_TEST:n_phase-CfgVMAX-RB
IOC_TEST:n_phase-CfgJVEL-RB
IOC_TEST:n_phase-CfgACCS-RB
IOC_TEST:n_phase-HomPos-RB
IOC_TEST:n_phase-PosAct
IOC_TEST:n_phase-VelAct
IOC_TEST:n_phase-PosSet
IOC_TEST:n_phase-PosErr
IOC_TEST:n_phase-PLC-Err
IOC_TEST:h-Vel-RB
IOC_TEST:h-Acc-RB
IOC_TEST:h-EncAct
IOC_TEST:h-CfgSREV-RB
IOC_TEST:h-CfgUREV-RB
IOC_TEST:h-CfgPMIN-RB
IOC_TEST:h-CfgPMAX-RB
IOC_TEST:h-CfgSPDB-RB
IOC_TEST:h-CfgRDBD-RB
IOC_TEST:h-CfgRDBD-Tim-RB
IOC_TEST:h-CfgPOSLAG-RB
IOC_TEST:h-CfgPOSLAG-Tim-RB
IOC_TEST:h-CfgDHLM-RB
IOC_TEST:h-CfgDLLM-RB
IOC_TEST:h-CfgVELO-RB
IOC_TEST:h-CfgVMAX-RB
IOC_TEST:h-CfgJVEL-RB
IOC_TEST:h-CfgACCS-RB
IOC_TEST:h-HomPos-RB
IOC_TEST:h-PosAct
IOC_TEST:h-VelAct
IOC_TEST:h-PosSet
IOC_TEST:h-PosErr
IOC_TEST:h-PLC-Err
IOC_TEST:m-Vel-RB
IOC_TEST:m-Acc-RB
IOC_TEST:m-EncAct
IOC_TEST:m-CfgSREV-RB
IOC_TEST:m-CfgUREV-RB
IOC_TEST:m-CfgPMIN-RB
IOC_TEST:m-CfgPMAX-RB
IOC_TEST:m-CfgSPDB-RB
IOC_TEST:m-CfgRDBD-RB
IOC_TEST:m-CfgRDBD-Tim-RB
IOC_TEST:m-CfgPOSLAG-RB
IOC_TEST:m-CfgPOSLAG-Tim-RB
IOC_TEST:m-CfgDHLM-RB
IOC_TEST:m-CfgDLLM-RB
IOC_TEST:m-CfgVELO-RB
IOC_TEST:m-CfgVMAX-RB
IOC_TEST:m-CfgJVEL-RB
IOC_TEST:m-CfgACCS-RB
IOC_TEST:m-HomPos-RB
IOC_TEST:m-PosAct
IOC_TEST:m-VelAct
IOC_TEST:m-PosSet
IOC_TEST:m-PosErr
IOC_TEST:m-PLC-Err
IOC_TEST:s-Vel-RB
IOC_TEST:s-Acc-RB
IOC_TEST:s-EncAct
IOC_TEST:s-CfgSREV-RB
IOC_TEST:s-CfgUREV-RB
IOC_TEST:s-CfgPMIN-RB
IOC_TEST:s-CfgPMAX-RB
IOC_TEST:s-CfgSPDB-RB
IOC_TEST:s-CfgRDBD-RB
IOC_TEST:s-CfgRDBD-Tim-RB
IOC_TEST:s-CfgPOSLAG-RB
IOC_TEST:s-CfgPOSLAG-Tim-RB
IOC_TEST:s-CfgDHLM-RB
IOC_TEST:s-CfgDLLM-RB
IOC_TEST:s-CfgVELO-RB
IOC_TEST:s-CfgVMAX-RB
IOC_TEST:s-CfgJVEL-RB
IOC_TEST:s-CfgACCS-RB
IOC_TEST:s-HomPos-RB
IOC_TEST:s-PosAct
IOC_TEST:s-VelAct
IOC_TEST:s-PosSet
IOC_TEST:s-PosErr
IOC_TEST:s-PLC-Err
IOC_TEST:ns-Vel-RB
IOC_TEST:ns-Acc-RB
IOC_TEST:ns-EncAct
IOC_TEST:ns-CfgSREV-RB
IOC_TEST:ns-CfgUREV-RB
IOC_TEST:ns-CfgPMIN-RB
IOC_TEST:ns-CfgPMAX-RB
IOC_TEST:ns-CfgSPDB-RB
IOC_TEST:ns-CfgRDBD-RB
IOC_TEST:ns-CfgRDBD-Tim-RB
IOC_TEST:ns-CfgPOSLAG-RB
IOC_TEST:ns-CfgPOSLAG-Tim-RB
IOC_TEST:ns-CfgDHLM-RB
IOC_TEST:ns-CfgDLLM-RB
IOC_TEST:ns-CfgVELO-RB
IOC_TEST:ns-CfgVMAX-RB
IOC_TEST:ns-CfgJVEL-RB
IOC_TEST:ns-CfgACCS-RB
IOC_TEST:ns-HomPos-RB
IOC_TEST:ns-PosAct
IOC_TEST:ns-VelAct
IOC_TEST:ns-PosSet
IOC_TEST:ns-PosErr
IOC_TEST:ns-PLC-Err
IOC_TEST:PLC00-ScanTime
IOC_TEST:PLC00-Err
IOC_TEST:MCU-AppMode
IOC_TEST:MCU-ErrId
IOC_TEST:MCU-ThdLatMin
IOC_TEST:MCU-ThdLatMax
IOC_TEST:MCU-ThdPrdMin
IOC_TEST:MCU-ThdPrdMax
IOC_TEST:MCU-ThdExeMin
IOC_TEST:MCU-ThdExeMax
IOC_TEST:MCU-ThdSndMin
IOC_TEST:MCU-ThdSndMax
IOC_TEST:h_phase-MCU1-asyn
IOC_TEST:m_phase-MCU1-asyn
IOC_TEST:s_phase-MCU1-asyn
IOC_TEST:n_phase-MCU1-asyn
IOC_TEST:h-MCU1-asyn
IOC_TEST:m-MCU1-asyn
IOC_TEST:s-MCU1-asyn
IOC_TEST:ns-MCU1-asyn
IOC_TEST:MCU-Cmd
IOC_TEST:h_phase
IOC_TEST:m_phase
IOC_TEST:s_phase
IOC_TEST:n_phase
IOC_TEST:h
IOC_TEST:m
IOC_TEST:s
IOC_TEST:ns
mcag-dev-asm-02-29260 > 
mcag-dev-asm-02-29260 > 
mcag-dev-asm-02-29260 > 