#
# Start at "2022-W40-Oct06-1220-47-CEST"
#
# Version information:
# European Spallation Source ERIC : iocsh (4.0.0-PID-22622)
#
# --->--> snip -->--> 
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# HOSTDISPLAY=""
# WINDOWID="31682073"
# PWD="/home/anderssandstrom/sources/ecmccfg/examples/test/clock_demo"
# USER="anderssandstrom"
# LOGNAME="anderssandstrom"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/epics/base-7.0.6.1"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="4.0.0"
# E3_REQUIRE_LOCATION="/epics/base-7.0.6.1/require/4.0.0"
# E3_REQUIRE_BIN="/epics/base-7.0.6.1/require/4.0.0/bin"
# E3_REQUIRE_DB="/epics/base-7.0.6.1/require/4.0.0/db"
# E3_REQUIRE_DBD="/epics/base-7.0.6.1/require/4.0.0/dbd"
# E3_REQUIRE_INC="/epics/base-7.0.6.1/require/4.0.0/include"
# E3_REQUIRE_LIB="/epics/base-7.0.6.1/require/4.0.0/lib"
# EPICS_DRIVER_PATH="/epics/base-7.0.6.1/require/4.0.0/siteMods"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# EPICS_PVA_AUTO_ADDR_LIST=""
# EPICS_PVA_ADDR_LIST=""
# PATH="/epics/base-7.0.6.1/require/4.0.0/bin:/epics/base-7.0.6.1/bin/linux-x86_64:/opt/conda/condabin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/anderssandstrom/.local/bin:/home/anderssandstrom/bin"
# --->--> snip -->--> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:mcag-dev-asm-02-22622"
#
# Enable an exit subroutine for sotfioc
dbLoadRecords "/epics/base-7.0.6.1/db/softIocExit.db" "IOC=REQMOD:mcag-dev-asm-02-22622"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh is executed.
epicsEnvSet E3_IOCSH_TOP "/home/anderssandstrom/sources/ecmccfg/examples/test/clock_demo"
#
# 
# Load require module, which has the version 4.0.0
# 
dlload /epics/base-7.0.6.1/require/4.0.0/lib/linux-x86_64/librequire.so
dbLoadDatabase /epics/base-7.0.6.1/require/4.0.0/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
# Set E3_CMD_TOP for the absolute path where clock.script exists
epicsEnvSet E3_CMD_TOP "/home/anderssandstrom/sources/ecmccfg/examples/test/clock_demo"
#
iocshLoad 'clock.script',''
##############################################################################
## Example config for sync a motor to system time.
## To be used togheter with mrf or ptp sync of system clock.
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"IOC_TEST")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"iocshLoad")
require ecmccfg master
Module ecmccfg version master found in /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/
Loading library /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/lib/linux-x86_64/libecmccfg.so
Loaded ecmccfg version master
Loading dbd file /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/dbd/ecmccfg.dbd
Calling function ecmccfg_registerRecordDeviceDriver
Loading module info records for ecmccfg
# run module startup.cmd (only needed at ESS  PSI auto call at require)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/startup.cmd, "IOC=IOC_TEST,ECMC_VER=master"
#==============================================================================
# startup.cmd
on error halt
require ecmc        "master"
Module ecmc version master found in /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/
Module ecmc depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.42.0+0
Loading dbd file /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1+0
Module exprtk version 1.2.1+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1+0
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.7+0
Module motor version 7.0.7+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/
Module motor depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 already loaded
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.7+0
Loading dbd file /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Module ecmc depends on ruckig 1.0.0+0
Module ruckig version 1.0.0+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/lib/linux-x86_64/libruckig.so
Loaded ruckig version 1.0.0+0
ruckig has no dbd file
Loading module info records for ruckig
Loading library /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/lib/linux-x86_64/libecmc.so
Loaded ecmc version master
Loading dbd file /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'ecmcMotorRecord'='EthercatMC'", "require  EthercatMC 3.0.2 # Using EthercatMC motor record support.","# Using ecmcMotorRecord motor record support.")
# Using ecmcMotorRecord motor record support.
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_CONFIG_ROOT",     "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/")
epicsEnvSet("ECMC_CONFIG_DB",       "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("SM_PREFIX",            "IOC_TEST:")    # colon added since IOC is _not_ PREFIX
epicsEnvSet("ECMC_PROC_HOOK",       "")
epicsEnvSet(ECMC_MODE, FULL)
ecmcEpicsEnvSetCalcTernary(ECMC_SUPPORT_MOTION, "'FULL'!='DAQ'","","# MODE == DAQ, DISABLING MOTION.")
epicsEnvShow(ECMC_SUPPORT_MOTION)
ECMC_SUPPORT_MOTION=
ecmcEpicsEnvSetCalcTernary(ECMC_USE_MOTOR_RECORD, "'FULL'=='FULL'","","# MODE != FULL, DISABLING MOTOR RECORD.")
epicsEnvShow(ECMC_USE_MOTOR_RECORD)
ECMC_USE_MOTOR_RECORD=
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               0)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd"
#==============================================================================
# initAxis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd"
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd"
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LI2022/10/06 12:20:47.926 
ECMC Initializes.............
2022/10/06 12:20:47.926 ESS Open Source EtherCAT Motion Control Epics Module2022/10/06 12:20:47.926 
Mode: Configuration
2022/10/06 12:20:47.926 OK
2022/10/06 12:20:47.926 OK
2022/10/06 12:20:47.927 OK
2022/10/06 12:20:47.928 OK
2022/10/06 12:20:47.941 OK
2022/10/06 12:20:47.941 OK
2022/10/06 12:20:47.941 OK
NE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMC_AXISFIELDINIT",     "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "IOC_TEST:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# suffix for pva enabled scripts, templates and substitutions
ecmcEpicsEnvSetCalcTernary(ECMC_PVA, "0", "Pva","")
# Set EtherCAT frequency (defaults to 1000)
ecmcConfigOrDie "Cfg.SetSampleRate(1000)"
epicsEnvSet("ECMC_EC_SAMPLE_RATE" ,   1000)
ecmcEpicsEnvSetCalc("ECMC_EC_SAMPLE_RATE_MS" ,1000/1000)
# Update records in 10ms (100Hz) for FULL MODE and in EC_RATE for DAQ mode
ecmcEpicsEnvSetCalcTernary(ECMC_SAMPLE_RATE_MS, "'FULL'=='DAQ'","1","10")
epicsEnvSet("ECMC_P_SCRIPT",        "mXsXXX")
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd",1)
 iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd", "MASTER_ID=0"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "0")
# Claim master
ecmcConfigOrDie "Cfg.EcSetMaster(0)"
epicsEnvSet("ECMC_EC_MASTER_ID" ,0)
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd
#==============================================================================
# setDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
epicsEnvSet("ECMCCFG_INIT" ,"#")
##############################################################################
## Configure hardware:
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "37")
epicsEnvSet("ECMC_EC_SLAVE_NUM_NANO",         "37")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/2022/10/06 12:20:47.942 OK
2022/10/06 12:20:48.009 OK
2022/10/06 12:20:48.010 OK
2022/10/06 12:20:48.010 OK
2022/10/06 12:20:48.010 OK
2022/10/06 12:20:48.010 OK
2022/10/06 12:20:48.011 OK
2022/10/06 12:20:48.011 OK
2022/10/06 12:20:48.011 OK
2022/10/06 12:20:48.011 OK
2022/10/06 12:20:48.011 OK
2022/10/06 12:20:48.011 OK
require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=37, HW_DESC=EL7031, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "37")
epicsEnvSet("HW_DESC",            "EL7031")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=37, HW_DESC=EL7031, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "37")
epicsEnvSet("HW_DESC",            "EL7031")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7031")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b773052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,37,0x2,0x1b773052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(37,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(37,0x2,0x1b773052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=37,HWTYPE=EL7031"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "37","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s037")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s037-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7031.substitutions,ECMC_P=IOC_TEST:m0s037-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7031.substitutions,1,1)
dbLoadTemplate(ecmcEL7031.substitutions,"ECMC_P=IOC_TEST:m0s037-,ECMC_G=IOC_TEST:m0s037,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=37,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)2022/10/06 12:20:48.022 OK
2022/10/06 12:20:48.022 OK
2022/10/06 12:20:48.022 OK
2022/10/06 12:20:48.023 OK
2022/10/06 12:20:48.023 OK
2022/10/06 12:20:48.025 OK
2022/10/06 12:20:48.097 OK
2022/10/06 12:20:48.097 OK
2022/10/06 12:20:48.097 OK
2022/10/06 12:20:48.097 OK
2022/10/06 12:20:48.097 OK
2022/10/06 12:20:48.098 OK
2022/10/06 12:20:48.098 OK

ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s037-,ECMC_G=IOC_TEST:m0s037"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s037-,ECMC_G=IOC_TEST:m0s037,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=37,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "37+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x3,24000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x4,450,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(37,0x8010,0x6,200,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "50")
epicsEnvSet("ECMC_EC_SLAVE_NUM_SECOND",        "50")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=50, HW_DESC=EL7041, CONFIG=-Motor-Amp-57TH76-4280"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7041")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=50, HW_DESC=EL7041, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7041")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7041")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b813052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,50,0x2,0x1b813052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(50,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x12,12022/10/06 12:20:48.098 OK
2022/10/06 12:20:48.098 OK
2022/10/06 12:20:48.098 OK
2022/10/06 12:20:48.098 OK
2022/10/06 12:20:48.100 OK
2022/10/06 12:20:48.101 OK
2022/10/06 12:20:48.101 OK
2022/10/06 12:20:48.101 OK
2022/10/06 12:20:48.101 OK
6,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "50","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s050")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s050-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7041.substitutions,ECMC_P=IOC_TEST:m0s050-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7041.substitutions,1,1)
dbLoadTemplate(ecmcEL7041.substitutions,"ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "50+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-Motor-Amp-57TH76-4280.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-Motor-Amp-57TH76-4280.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x1,2800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x3,48000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x4,113,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x6,200,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "51")
epicsEnvSet("ECMC_EC_SLAVE_NUM_MINUTE",        "51")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=51, HW_DESC=EL7041-0052, CONFIG=-Motor-Amp-57TH76-4280"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7041-0052")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=51, HW_DESC=EL7041-0052, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7041-0052")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"       2022/10/06 12:20:48.101 OK
2022/10/06 12:20:48.196 OK
2022/10/06 12:20:48.199 OK
2022/10/06 12:20:48.199 OK
2022/10/06 12:20:48.199 OK
2022/10/06 12:20:48.199 OK
2022/10/06 12:20:48.199 OK
2022/10/06 12:20:48.199 OK
2022/10/06 12:20:48.200 OK
2022/10/06 12:20:48.200 OK
2022/10/06 12:20:48.200 OK
2022/10/06 12:20:48.200 OK
2022/10/06 12:20:48.209 OK
2022/10/06 12:20:48.209 OK
2022/10/06 12:20:48.210 OK
      "EL7041-0052")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b813052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,51,0x2,0x1b813052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(51,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1600,0x7000,0x11,16,encoderValue01"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "51","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s051")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s051-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7041-0052.substitutions,ECMC_P=IOC_TEST:m0s051-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7041-0052.substitutions,1,1)
dbLoadTemplate(ecmcEL7041-0052.substitutions,"ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "51+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052-Motor-Amp-57TH76-4280.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052-Motor-Amp-57TH76-4280.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x1,2800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x3,48000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x4,113,2)2022/10/06 12:20:48.210 OK
2022/10/06 12:20:48.210 OK
2022/10/06 12:20:48.211 OK
2022/10/06 12:20:48.305 OK
2022/10/06 12:20:48.305 OK
2022/10/06 12:20:48.305 OK
2022/10/06 12:20:48.305 OK
2022/10/06 12:20:48.306 OK
2022/10/06 12:20:48.306 OK
2022/10/06 12:20:48.306 OK
2022/10/06 12:20:48.306 OK
2022/10/06 12:20:48.306 OK
2022/10/06 12:20:48.306 OK
2022/10/06 12:20:48.306 OK
"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x6,200,2)"
#ecmcConfigOrDie "Cfg.EcAddSdo(${ECMC_EC_SLAVE_NUM},0x8010,0xA,290,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "60")
epicsEnvSet("ECMC_EC_SLAVE_NUM_HOUR",        "60")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=60, HW_DESC=EL7031, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL7031")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=60, HW_DESC=EL7031, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL7031")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7031")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b773052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,60,0x2,0x1b773052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(60,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b773052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7031"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "60","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s060")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s060-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7031.substitutions,ECMC_P=IOC_TEST:m0s060-"
#==========================================================2022/10/06 12:20:48.308 OK
2022/10/06 12:20:48.308 OK
2022/10/06 12:20:48.308 OK
2022/10/06 12:20:48.308 OK
2022/10/06 12:20:48.308 OK
2022/10/06 12:20:48.309 OK
global.currtime:=ec_get_time();

global.nano    := global.currtime-trunc(global.currtime/1e9)*1e9;
global.second  := ec_get_time_local_sec(global.currtime)+global.nanos/1E9;
global.minute  := ec_get_time_local_min(global.currtime)+global.seconds/60;
global.hour    := ec_get_time_local_hour(global.currtime)+global.minutes/60;


if(global.hour>12) {
  global.hour:=global.hour-12;
}

# print('Time: ', global.hour);
# print(':', global.minute);
# print(':', global.second);
# print( '.', global.nano );
# println('');
2022/10/06 12:20:48.332 OK
2022/10/06 12:20:48.333 OK
====================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7031.substitutions,1,1)
dbLoadTemplate(ecmcEL7031.substitutions,"ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7031,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "60+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7031-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x3,24000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x4,450,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x6,200,2)"
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"
##############################################################################
## PLC 0: Calc time source for all axes
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=1,FILE=./plc/time.plc,PLC_MACROS=''"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "0")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC0.plc")
ecmcFileExist("./plc/time.plc",1)
system "msi -V -M '' -o /tmp/PLC0.plc ./plc/time.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC0.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC0.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(0,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(0,/tmp/PLC0.plc)"
system "rm -f /tmp/PLC0.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "0", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=0,Name=IOC_TEST:,Index2Char=00,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
# Config motion
epicsEnvSet("ECMC_AXIS_HOUR_NUM_P",           "1")
epicsEnvSet("ECMC_AXIS_HOUR_NUM",             "2")
epicsEnvSet("ECMC_AXIS_MINUTE_NUM_P",         "3")
epicsEnvSet("ECMC_AXIS_MINUTE_NUM",           "4")
epicsEnvSet("ECMC_AXIS_SECOND_NUM_P",         "5")
epicsEnvSet("ECMC_AXIS_SECOND_NUM",           "6")
epicsEnvSet("ECMC_AXIS_NANOS_NUM_P",          "7")
epicsEnvSet("ECMC_AXIS_NANOS_NUM",            "8")
###############################################################################
### AXIS 1: Virtual axis hour
##
#epicsEnvSet("DEV",        "$(IOC)")
#epicsEnvSet("AX_ID",      "${ECMC_AXIS_HOUR_NUM_P}")
#epicsEnvSet("AX_NAME",    "h_phase")
#epicsEnvSet("AX_DESC",    "Hours phase")
#epicsEnvSet("AX_EGU",     "h")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#
######################################################macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
#########################
### AXIS 2: Physical axis hour
##
#epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "$(ECMC_EC_SLAVE_NUM_HOUR)")
#epicsEnvSet("DEV",        "$(IOC)")
#epicsEnvSet("AX_ID",      "${ECMC_AXIS_HOUR_NUM}")
#epicsEnvSet("AX_NAME",    "h")
#epicsEnvSet("AX_DESC",    "Hours")
#epicsEnvSet("AX_EGU",     "h")
#epicsEnvSet("MOD_RANGE",  "12")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/phys.ax)
#$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(${ECMC_AXIS_HOUR_NUM},1)"
#
###############################################################################
### PLC 1: Hour
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=1, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_HOUR_NUM},AX_PHASE=${ECMC_AXIS_HOUR_NUM_P},TIME_SOURCE=global.hour, MOD_RANGE=${MOD_RANGE}'"
#
###############################################################################
### PLC 2: Hour seq
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=2, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_HOUR_NUM},AX_PHASE=${ECMC_AXIS_HOUR_NUM_P},AX_VELO=1,AX_ACC=1,PLC_ID=2'"
#
###############################################################################
### AXIS 3: Virtual axis minutes
##
#epicsEnvSet("DEV",        "$(IOC)")
#epicsEnvSet("AX_ID",      "${ECMC_AXIS_MINUTE_NUM_P}")
#epicsEnvSet("AX_NAME",    "m_phase")
#epicsEnvSet("AX_DESC",    "Minutes phase")
#epicsEnvSet("AX_EGU",     "min")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#
###############################################################################
### AXIS 4: Physical axis minutes
##
#epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "$(ECMC_EC_SLAVE_NUM_MINUTE)")
#epicsEnvSet("DEV",        "$(IOC)")
#epicsEnvSet("AX_ID",      "${ECMC_AXIS_MINUTE_NUM}")
#epicsEnvSet("AX_NAME",    "m")
#epicsEnvSet("AX_DESC",    "Minutes")
#epicsEnvSet("AX_EGU",     "min")
#epicsEnvSet("MOD_RANGE",  "60")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/phys.ax)
#$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(${ECMC_AXIS_MINUTE_NUM},1)"
#
###############################################################################
### PLC 3: Minute
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=3, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_MINUTE_NUM},AX_PHASE=${ECMC_AXIS_MINUTE_NUM_P},TIME_SOURCE=global.minute,MOD_RANGE=${MOD_RANGE}'"
#
###############################################################################
### PLC 4: Minute seq
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=4, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_MINUTE_NUM},AX_PHASE=${ECMC_AXIS_MINUTE_NUM_P},AX_VELO=5,AX_ACC=5,PLC_ID=4'"
##############################################################################
## AXIS 5: Virtual axis seconds
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "5")
epicsEnvSet("AX_NAME",    "s_phase")
epicsEnvSet("AX_DESC",    "Seconds phase")
epicsEnvSet("AX_EGU",     "s")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "s_phase")
epicsEnvSet("ECMC_AXIS_NO",               "5")
epicsEnvSet("ECMC_DESC",                  "Seconds phase")
epicsEnvSet("ECMC_EGU",                   "s")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad2022/10/06 12:20:48.352 OK
2022/10/06 12:20:48.352 OK
2022/10/06 12:20:48.352 OK
2022/10/06 12:20:48.352 OK
2022/10/06 12:20:48.352 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
 /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(5,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(5, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(5, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(5,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(5,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(5,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(5,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(5,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(5,5)"
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.353 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 12:20:48.354 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 OK
2022/10/06 12:20:48.354 ecmcMotorRecord:: setIntegerParam(5 motorPowerAutoOnOff_)=2
2022/10/06 12:20:48.354 ecmcMotorRecord:: setDoubleParam(5 motorPowerOnDelay_)=6
2022/10/06 12:20:48.354 ecmcMotorRecord:: setDoubleParam(5 motorPowerOffDelay_=-1
2022/10/06 12:20:48.354 ecmcMotorRecord:: connected(5)
2022/10/06 12:20:48.354 ecmcMotorRecord:: initialPoll(5) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:s_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:s_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax5.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:s_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:s_phase-PosAct.DESC" to "Axis ax5: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:s_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:s_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax5.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:s_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:s_phase-VelAct.DESC" to "Axis ax5: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(5,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax5.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(5,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(5,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(5,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(5,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(5,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(5,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(5,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(5,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(5,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(5, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(5, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "5", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s_phase, MOTOR_PORT=MCU1, AXIS_NO=5, DESC=Seconds phase, EGU=s, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s_phase, MOTOR_PORT=MCU1, AXIS_NO=5,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=s_phase,AXIS_NO=5,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=s_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
2022/10/06 12:20:48.358 OK
_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(5,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(5,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(5,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(5,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(5,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(5,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(5,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 6: Physical axis seconds
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "50")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "6")
epicsEnvSet("AX_NAME",    "s")
epicsEnvSet("AX_DESC",    "Seconds")
epicsEnvSet("AX_EGU",     "s")
epicsEnvSet("MOD_RANGE",  "60")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "s")
epicsEnvSet("ECMC_R",                     "s-")
epicsEnvSet("ECMC_AXIS_NO",               "6")
epicsEnvSet("ECMC_DESC",                  "Seconds")
epicsEnvSet("ECMC_EGU",                   "s")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "60")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s50.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "60*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s50.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s50.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s50.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s50.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s50.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s50.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s50.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s50.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s50.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "60/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "60/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "60/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "60/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s50.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s50.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s50.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s50.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(60)<>0","# ECMC_ENC_SCALE_NUM value OK == 60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(600)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == 600...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(600)<>0","# ECMC_DRV_SCALE_NUM value OK == 600...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == 600...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_D2022/10/06 12:20:48.364 OK
2022/10/06 12:20:48.364 OK
2022/10/06 12:20:48.364 OK
2022/10/06 12:20:48.364 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.365 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.366 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.367 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
RV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(6,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(6, 60)"
ecmcConfigOrDie "Cfg.SetAxisModType(6, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(6,1)"
 ecmcConfigOrDie "Cfg.SetAxisDec(6,1)"
ecmcConfigOrDie "Cfg.SetAxisJerk(6,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(6,3)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(6,1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(6,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(6,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(6,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(6,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(6,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.positionActual01,"ax6.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(6,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(6,60)"
ecmcConfigOrDie "Cfg.SetAxisEncType(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(6,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(6,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(6,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(6,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(6,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(6,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.0,"ax6.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.1,"ax6.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.velocitySetpoint01,"ax6.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.brake")"2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.368 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.369 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.370 OK
2022/10/06 12:20:48.371 OK
2022/10/06 12:20:48.371 OK
2022/10/06 12:20:48.371 ecmcMotorRecord:: setIntegerParam(6 motorPowerAutoOnOff_)=2
2022/10/06 12:20:48.371 ecmcMotorRecord:: setDoubleParam(6 motorPowerOnDelay_)=6
2022/10/06 12:20:48.371 ecmcMotorRecord:: setDoubleParam(6 motorPowerOffDelay_=-1
2022/10/06 12:20:48.371 ecmcMotorRecord:: connected(6)
2022/10/06 12:20:48.371 ecmcMotorRecord:: initialPoll(6) status=0

ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.2,"ax6.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.1,"ax6.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.3,"ax6.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.7,"ax6.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.14,"ax6.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.2,"ax6.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(6,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(6,600)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax6.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax6.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax6.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax6.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(6,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(6,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(6,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(6,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(6,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(6,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(6, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(6, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "6", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(60)>0){RESULT:=abs(60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s, MOTOR_PORT=MCU1, AXIS_NO=6, DESC=Seconds, EGU=s, PREC=3, VELO=3, JVEL=3, JAR=0.0, ACCS=1, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=60.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s, MOTOR_PORT=MCU1, AXIS_NO=6,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=s,AXIS_NO=6,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=s,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands fro2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
2022/10/06 12:20:48.375 OK
m PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(6,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(6,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(6,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(6,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(6,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(6,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(6,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(6,1)"
##############################################################################
## PLC 5: Second
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=5, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=6,AX_PHASE=5,TIME_SOURCE=global.second,MOD_RANGE=60'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "5")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC5.plc")
ecmcFileExist("./plc/phys_and_phase.plc",1)
system "msi -V -M 'AX_PHYS=6,AX_PHASE=5,TIME_SOURCE=global.second,MOD_RANGE=60' -o /tmp/PLC5.plc ./plc/phys_and_phase.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC5.p# MACROS needed:
#  AX_PHYS     : Axis index for physical axis
#  AX_PHASE    : Axis index for virtual axis phase
#  TIME_SOURCE : Global variable for time source
#  MOD_RANGE   : Range of motion (ex. 60 for minutes)


var phase:=global.second-ax6.enc.actpos;

if(phase > 60/2) {
  phase:=-(60-phase);
};

if(phase < -60) {
  phase:=60+phase;
};

ax5.enc.actpos:=phase;
ax6.traj.setpos:=global.second-ax5.traj.setpos;
2022/10/06 12:20:48.390 OK
2022/10/06 12:20:48.390 OK
# MACROS needed:
#  PLC_ID      : ID of this PLC
#  AX_PHYS     : Axis index for physical axis
#  AX_PHASE    : Axis index for virtual axis phase
#  AX_VELO     : Nominal velo
#  AX_ACC      : Acc and dec

if(plc6.firstscan) {
  println('State 0: trying to enable physical axis');
}

#State 0: Power physical axis
if(static.state = 0) {
  mc_power(6,1);
}

if(ax6.drv.enabled and static.state=0) {
  println('State 1: Move vel');
  static.state:=1;
}

# State 1: Start move velo 5
if(static.state = 1) {
  mc_move_vel(6,1,5,5,5);
}

if(static.counter<1000 and ax6.enc.actvelo<5*0.995 and ax6.enc.actvelo<5*1.005) {
  static.counter:=static.counter+1;
} else {
  static.counter:=0;
}

# Enable phase axis to get stable setpoint
if(static.counter>=100 and static.state=1) {
  println('State 2: Power phase axis (axis ${AX_PHASE})');
  static.state:=2;
  mc_power(5,1)
}

if(ax5.drv.enabled and static.state=2) {
  println('State 1: Phase axis enabled.. Change source of phys axis to ext');
  ax6.traj.source:=1;
  static.state:=3;
}

# println('Axis ext setpoint: ', ax6.traj.extsetpos );
# println('Axis int setpoint: ', ax6.traj.setpos );
2022/10/06 12:20:48.420 OK
2022/10/06 12:20:48.420 OK
2022/10/06 12:20:48.428 OK
2022/10/06 12:20:48.428 OK
2022/10/06 12:20:48.428 OK
2022/10/06 12:20:48.428 ERROR: Axis object NULL
2022/10/06 12:20:48.428 ECMC command "Cfg.SetDiagAxisIndex(1)" returned error: ERROR_MAIN_AXIS_OBJECT_NULL (0x20004)
lc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC5.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(5,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(5,/tmp/PLC5.plc)"
system "rm -f /tmp/PLC5.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "5", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=5,Name=IOC_TEST:,Index2Char=05,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## PLC 6: Second seq 
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=6, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=6,AX_PHASE=5,AX_VELO=5,AX_ACC=5,PLC_ID=6'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "6")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "100")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "100>0", "100","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC6.plc")
ecmcFileExist("./plc/seq.plc",1)
system "msi -V -M 'AX_PHYS=6,AX_PHASE=5,AX_VELO=5,AX_ACC=5,PLC_ID=6' -o /tmp/PLC6.plc ./plc/seq.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC6.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC6.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(6,100)"
ecmcConfigOrDie "Cfg.LoadPLCFile(6,/tmp/PLC6.plc)"
system "rm -f /tmp/PLC6.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "6", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=6,Name=IOC_TEST:,Index2Char=06,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
###############################################################################
### AXIS 7: Virtual axis nanos)
##
#epicsEnvSet("DEV",        "$(IOC)")
#epicsEnvSet("AX_ID",      "${ECMC_AXIS_NANOS_NUM_P}")
#epicsEnvSet("AX_NAME",    "n_phase")
#epicsEnvSet("AX_DESC",    "Nanos phase")
#epicsEnvSet("AX_EGU",     "ns")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#
###############################################################################
### AXIS 8: Physical axis nanos
##
#epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "$(ECMC_EC_SLAVE_NUM_SECOND)")
#epicsEnvSet("DEV",        "$(IOC)")
#epicsEnvSet("AX_ID",      "${ECMC_AXIS_NANOS_NUM}")
#epicsEnvSet("AX_NAME",    "ns")
#epicsEnvSet("AX_DESC",    "nanoseconds")
#epicsEnvSet("AX_EGU",     "ns")
#epicsEnvSet("AX_EGU",     "ns")
#epicsEnvSet("MOD_RANGE",  "1E9")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/phys.ax)
#$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(${ECMC_AXIS_NANOS_NUM},1)"
#
###############################################################################
### PLC 7: Nano
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=7, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_NANOS_NUM},AX_PHASE=${ECMC_AXIS_NANOS_NUM_P},TIME_SOURCE=global.nano,MOD_RANGE=${MOD_RANGE}'"
#
###############################################################################
### PLC 8: Nano seq 
#$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=8, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=${ECMC_AXIS_NANOS_NUM},AX_PHASE=${ECMC_AXIS_NANOS_NUM_P},AX_VELO=5E8,AX_ACC=5E8,PLC_ID=8'"
##############################################################################
############# Configure diagnostics:
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
