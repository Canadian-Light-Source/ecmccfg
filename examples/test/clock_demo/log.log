#
# Start at "2022-W40-Oct06-1408-17-CEST"
#
# Version information:
# European Spallation Source ERIC : iocsh (4.0.0-PID-2928)
#
# --->--> snip -->--> 
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# HOSTDISPLAY=""
# WINDOWID="31682073"
# PWD="/home/anderssandstrom/sources/ecmccfg/examples/test/clock_demo"
# USER="anderssandstrom"
# LOGNAME="anderssandstrom"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/epics/base-7.0.6.1"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="4.0.0"
# E3_REQUIRE_LOCATION="/epics/base-7.0.6.1/require/4.0.0"
# E3_REQUIRE_BIN="/epics/base-7.0.6.1/require/4.0.0/bin"
# E3_REQUIRE_DB="/epics/base-7.0.6.1/require/4.0.0/db"
# E3_REQUIRE_DBD="/epics/base-7.0.6.1/require/4.0.0/dbd"
# E3_REQUIRE_INC="/epics/base-7.0.6.1/require/4.0.0/include"
# E3_REQUIRE_LIB="/epics/base-7.0.6.1/require/4.0.0/lib"
# EPICS_DRIVER_PATH="/epics/base-7.0.6.1/require/4.0.0/siteMods"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# EPICS_PVA_AUTO_ADDR_LIST=""
# EPICS_PVA_ADDR_LIST=""
# PATH="/epics/base-7.0.6.1/require/4.0.0/bin:/epics/base-7.0.6.1/bin/linux-x86_64:/opt/conda/condabin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/anderssandstrom/.local/bin:/home/anderssandstrom/bin"
# --->--> snip -->--> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:mcag-dev-asm-02-2928"
#
# Enable an exit subroutine for sotfioc
dbLoadRecords "/epics/base-7.0.6.1/db/softIocExit.db" "IOC=REQMOD:mcag-dev-asm-02-2928"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh is executed.
epicsEnvSet E3_IOCSH_TOP "/home/anderssandstrom/sources/ecmccfg/examples/test/clock_demo"
#
# 
# Load require module, which has the version 4.0.0
# 
dlload /epics/base-7.0.6.1/require/4.0.0/lib/linux-x86_64/librequire.so
dbLoadDatabase /epics/base-7.0.6.1/require/4.0.0/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
# Set E3_CMD_TOP for the absolute path where clock.script exists
epicsEnvSet E3_CMD_TOP "/home/anderssandstrom/sources/ecmccfg/examples/test/clock_demo"
#
iocshLoad 'clock.script',''
##############################################################################
## Example config for sync 4 motors to system time (hours, minutes, seconds, nanos).
## The setup consists of 4 virtual and 4 physical axes. The virtual axes corresponds 
## to the phase error beween system time and the physcal axis.
##
## The following sequence is executed:
## 1. The physical axes are enabled and reference to 0 at current position. (so start with any indicators pointing vertically)
## 2. For the faster axes (nanos), the physcal axis is ramped up to the same velocity as the system nanos.
## 3. The virtual axes is enabled
## 4. The virtual axes is controlled to 0 phase error.
## 5. Now the 4 motors should show system time
##
## Notes:;
## 1. This demo does not utilize the dc clocks of teh terminals
## 2. Actually only the nanos axis needs a virtual phase axes, because of speed. But for consistensy all 4 axes are controlled through avirt axis.
## 3. The idea is that system time should be controlled by ptp or mrf (time2ntp).
##
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"IOC_TEST")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"iocshLoad")
require ecmccfg master
Module ecmccfg version master found in /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/
Loading library /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/lib/linux-x86_64/libecmccfg.so
Loaded ecmccfg version master
Loading dbd file /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/dbd/ecmccfg.dbd
Calling function ecmccfg_registerRecordDeviceDriver
Loading module info records for ecmccfg
# run module startup.cmd (only needed at ESS  PSI auto call at require)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/startup.cmd, "IOC=IOC_TEST,ECMC_VER=master"
#==============================================================================
# startup.cmd
on error halt
require ecmc        "master"
Module ecmc version master found in /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/
Module ecmc depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.42.0+0
Loading dbd file /epics/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1+0
Module exprtk version 1.2.1+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1+0
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.7+0
Module motor version 7.0.7+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/
Module motor depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 already loaded
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.7+0
Loading dbd file /epics/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Module ecmc depends on ruckig 1.0.0+0
Module ruckig version 1.0.0+0 found in /epics/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/
Loading library /epics/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/lib/linux-x86_64/libruckig.so
Loaded ruckig version 1.0.0+0
ruckig has no dbd file
Loading module info records for ruckig
Loading library /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/lib/linux-x86_64/libecmc.so
Loaded ecmc version master
Loading dbd file /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'ecmcMotorRecord'='EthercatMC'", "require  EthercatMC 3.0.2 # Using EthercatMC motor record support.","# Using ecmcMotorRecord motor record support.")
# Using ecmcMotorRecord motor record support.
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_CONFIG_ROOT",     "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/")
epicsEnvSet("ECMC_CONFIG_DB",       "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("SM_PREFIX",            "IOC_TEST:")    # colon added since IOC is _not_ PREFIX
epicsEnvSet("ECMC_PROC_HOOK",       "")
epicsEnvSet(ECMC_MODE, FULL)
ecmcEpicsEnvSetCalcTernary(ECMC_SUPPORT_MOTION, "'FULL'!='DAQ'","","# MODE == DAQ, DISABLING MOTION.")
epicsEnvShow(ECMC_SUPPORT_MOTION)
ECMC_SUPPORT_MOTION=
ecmcEpicsEnvSetCalcTernary(ECMC_USE_MOTOR_RECORD, "'FULL'=='FULL'","","# MODE != FULL, DISABLING MOTOR RECORD.")
epicsEnvShow(ECMC_USE_MOTOR_RECORD)
ECMC_USE_MOTOR_RECORD=
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               0)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd"
#==============================================================================
# initAxis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd"
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
ep2022/10/06 14:08:17.284 
ECMC Initializes.............
2022/10/06 14:08:17.284 ESS Open Source EtherCAT Motion Control Epics Module2022/10/06 14:08:17.284 
Mode: Configuration
2022/10/06 14:08:17.284 OK
2022/10/06 14:08:17.285 OK
2022/10/06 14:08:17.285 OK
2022/10/06 14:08:17.286 OK
icsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd"
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMC_AXISFIELDINIT",     "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "IOC_TEST:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# suffix for pva enabled scripts, templates and substitutions
ecmcEpicsEnvSetCalcTernary(ECMC_PVA, "0", "Pva","")
# Set EtherCAT frequency (defaults to 1000)
ecmcConfigOrDie "Cfg.SetSampleRate(1000)"
epicsEnvSet("ECMC_EC_SAMPLE_RATE" ,   1000)
ecmcEpicsEnvSetCalc("ECMC_EC_SAMPLE_RATE_MS" ,1000/1000)
# Update records in 10ms (100Hz) for FULL MODE and in EC_RATE for DAQ mode
ecmcEpicsEnvSetCalcTernary(ECMC_SAMPLE_RATE_MS, "'FULL'=='DAQ'","1","10")
epicsEnvSet("ECMC_P_SCRIPT",        "mXsXXX")
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd",1)
 iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd", "MASTER_ID=0"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "0")
# Claim master
ecmcConfigOrDie "Cfg.EcSetMaster(0)"
epicsEnvSet("ECMC_EC_MASTER_ID" ,0)
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "2022/10/06 14:08:17.294 OK
2022/10/06 14:08:17.294 OK
2022/10/06 14:08:17.294 OK
2022/10/06 14:08:17.295 OK
2022/10/06 14:08:17.369 OK
2022/10/06 14:08:17.370 OK
2022/10/06 14:08:17.370 OK
2022/10/06 14:08:17.370 OK
2022/10/06 14:08:17.370 OK
2022/10/06 14:08:17.370 OK
2022/10/06 14:08:17.370 OK
2022/10/06 14:08:17.371 OK
2022/10/06 14:08:17.371 OK
2022/10/06 14:08:17.371 OK
2022/10/06 14:08:17.371 OK
mkdir -p /tmp/IOC_TEST/EcMaster_0/"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd
#==============================================================================
# setDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
epicsEnvSet("ECMCCFG_INIT" ,"#")
##############################################################################
## Configure hardware:
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "50")
epicsEnvSet("ECMC_EC_SLAVE_NUM_HOUR",        "50")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=50, HW_DESC=EL7041, CONFIG=-Motor-Amp-57TH76-4280"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7041")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=50, HW_DESC=EL7041, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "50")
epicsEnvSet("HW_DESC",            "EL7041")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7041")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b813052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,50,0x2,0x1b813052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(50,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(50,0x2,0x1b813052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEp2022/10/06 14:08:17.376 OK
2022/10/06 14:08:17.376 OK
2022/10/06 14:08:17.376 OK
2022/10/06 14:08:17.376 OK
2022/10/06 14:08:17.377 OK
2022/10/06 14:08:17.377 OK
2022/10/06 14:08:17.473 OK
icsEnvSetCalc("sid", "50","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s050")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s050-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7041.substitutions,ECMC_P=IOC_TEST:m0s050-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7041.substitutions,1,1)
dbLoadTemplate(ecmcEL7041.substitutions,"ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s050-,ECMC_G=IOC_TEST:m0s050,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=50,HWTYPE=EL7041,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "50+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-Motor-Amp-57TH76-4280.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-Motor-Amp-57TH76-4280.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x1,2800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x3,48000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x4,113,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(50,0x8010,0x6,200,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "51")
epicsEnvSet("ECMC_EC_SLAVE_NUM_MINUTE",        "51")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=51, HW_DESC=EL7041-0052, CONFIG=-Motor-Amp-57TH76-4280"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7041-0052")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=51, HW_DESC=EL7041-0052, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "51")
epicsEnvSet("HW_DESC",            "EL7041-0052")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7041-0052")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b813052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,51,0x2,0x1b813052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(51,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUns2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.474 OK
2022/10/06 14:08:17.476 OK
2022/10/06 14:08:17.477 OK
2022/10/06 14:08:17.477 OK
2022/10/06 14:08:17.477 OK
2022/10/06 14:08:17.477 OK
et(SLAVE_FW)
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1600,0x7000,0x11,16,encoderValue01"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(51,0x2,0x1b813052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "51","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s051")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s051-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7041-0052.substitutions,ECMC_P=IOC_TEST:m0s051-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7041-0052.substitutions,1,1)
dbLoadTemplate(ecmcEL7041-0052.substitutions,"ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s051-,ECMC_G=IOC_TEST:m0s051,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=51,HWTYPE=EL7041-0052,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "51+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052-Motor-Amp-57TH76-4280.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7041-0052-Motor-Amp-57TH76-4280.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x1,2800,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x3,48000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x4,113,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(51,0x8010,0x6,200,2)"
#ecmcConfigOrDie "Cfg.EcAddSdo(${ECMC_EC_SLAVE_NUM},0x8010,0xA,290,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "60")
epicsEnvSet("ECMC_EC_SLAVE_NUM_SECOND",        "60")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=60, HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST2818S1006"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/home/anderssandstrom/sources/e32022/10/06 14:08:17.477 OK
2022/10/06 14:08:17.559 OK
2022/10/06 14:08:17.559 OK
2022/10/06 14:08:17.559 OK
2022/10/06 14:08:17.559 OK
2022/10/06 14:08:17.559 OK
2022/10/06 14:08:17.559 OK
2022/10/06 14:08:17.560 OK
2022/10/06 14:08:17.560 OK
2022/10/06 14:08:17.560 OK
2022/10/06 14:08:17.560 OK
2022/10/06 14:08:17.560 OK
2022/10/06 14:08:17.560 OK
2022/10/06 14:08:17.560 OK
-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=60, HW_DESC=EL7037, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "60")
epicsEnvSet("HW_DESC",            "EL7037")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,60,0x2,0x1b7d3052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(60,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(60,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7037"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "60","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s060")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s060-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7037.substitutions,ECMC_P=IOC_TEST:m0s060-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.562 OK
2022/10/06 14:08:17.645 OK
2022/10/06 14:08:17.645 OK
2022/10/06 14:08:17.645 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
TEST:m0s060"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s060-,ECMC_G=IOC_TEST:m0s060,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=60,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "60+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Nanotec-ST2818S1006.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Nanotec-ST2818S1006.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x1,670,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x2,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x3,2400,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x4,560,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(60,0x8010,0xA,100,2)"
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "61")
epicsEnvSet("ECMC_EC_SLAVE_NUM_NANO",        "61")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=61, HW_DESC=EL7037, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "61")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=61, HW_DESC=EL7037, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "61")
epicsEnvSet("HW_DESC",            "EL7037")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,61,0x2,0x1b7d3052)"
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(61,0x1011,0x1,1684107116,4)"
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(61,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8012,0xA2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.646 OK
2022/10/06 14:08:17.649 OK
2022/10/06 14:08:17.649 OK
2022/10/06 14:08:17.649 OK
2022/10/06 14:08:17.649 OK
2022/10/06 14:08:17.649 OK
2022/10/06 14:08:17.649 OK
2022/10/06 14:08:17.649 OK
global.currtime:=ec_get_time();

global.nano    := (global.currtime-trunc(global.currtime/1e9)*1e9)/1E9;
global.second  := ec_get_time_local_sec(global.currtime)+global.nano;
global.minute  := ec_get_time_local_min(global.currtime)+global.second/60;
global.hour    := ec_get_time_local_hour(global.currtime)+global.minute/60;


if(global.hour>12) {
  global.hour:=global.hour-12;
}

#print('Time: ', global.hour);
#print(':', global.minute);
#print(':', global.second);
#print( '.', global.nano );
#println('');
2022/10/06 14:08:17.666 OK
2022/10/06 14:08:17.666 OK
,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8012,0x9,0,1)"
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=61,HWTYPE=EL7037"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "61","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s061")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s061-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7037.substitutions,ECMC_P=IOC_TEST:m0s061-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"ECMC_P=IOC_TEST:m0s061-,ECMC_G=IOC_TEST:m0s061,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=61,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s061-,ECMC_G=IOC_TEST:m0s061"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s061-,ECMC_G=IOC_TEST:m0s061,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=61,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "61+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8010,0x2,100,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8010,0x3,2400,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8010,0x4,450,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(61,0x8010,0xA,750,2)"
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"
##############################################################################
## PLC 0: Calc time source for all axes
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=1,FILE=./plc/time.plc,PLC_MACROS=''"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "0")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC0.plc")
ecmcFileExist("./plc/time.plc",1)
system "msi -V -M '' -o /tmp/PLC0.plc ./plc/time.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC0.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC0.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(0,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(0,/tmp/PLC0.plc)"
system "rm -f /tmp/PLC0.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "0", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=0,Name=IOC_TESmacLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
T:,Index2Char=00,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
# Config motion
epicsEnvSet("ECMC_AXIS_HOUR_NUM_P",           "1")
epicsEnvSet("ECMC_AXIS_HOUR_NUM",             "2")
epicsEnvSet("ECMC_AXIS_MINUTE_NUM_P",         "3")
epicsEnvSet("ECMC_AXIS_MINUTE_NUM",           "4")
epicsEnvSet("ECMC_AXIS_SECOND_NUM_P",         "5")
epicsEnvSet("ECMC_AXIS_SECOND_NUM",           "6")
epicsEnvSet("ECMC_AXIS_NANOS_NUM_P",          "7")
epicsEnvSet("ECMC_AXIS_NANOS_NUM",            "8")
##############################################################################
## AXIS 1: Virtual axis hour
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "1")
epicsEnvSet("AX_NAME",    "h_phase")
epicsEnvSet("AX_DESC",    "Hours phase")
epicsEnvSet("AX_EGU",     "h")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "h_phase")
epicsEnvSet("ECMC_AXIS_NO",               "1")
epicsEnvSet("ECMC_DESC",                  "Hours phase")
epicsEnvSet("ECMC_EGU",                   "h")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstr2022/10/06 14:08:17.695 OK
2022/10/06 14:08:17.695 OK
2022/10/06 14:08:17.695 OK
2022/10/06 14:08:17.696 OK
2022/10/06 14:08:17.696 OK
2022/10/06 14:08:17.697 OK
2022/10/06 14:08:17.697 OK
2022/10/06 14:08:17.697 OK
2022/10/06 14:08:17.697 OK
2022/10/06 14:08:17.697 OK
2022/10/06 14:08:17.697 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.698 OK
2022/10/06 14:08:17.699 OK
2022/10/06 14:08:17.699 OK
2022/10/06 14:08:17.699 OK
2022/10/06 14:08:17.699 OK
2022/10/06 14:08:17.699 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.699 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.699 OK
2022/10/06 14:08:17.699 OK
2022/10/06 14:08:17.700 OK
2022/10/06 14:08:17.700 OK
2022/10/06 14:08:17.700 OK
om/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(1,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(1, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(1, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(1,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(1,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(1,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(1,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(1,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(1,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(1,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax1.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(1,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(1,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax1.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(1,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(1,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(1,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(1,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(1,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(1,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(1,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(1,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(1, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(1, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMod2022/10/06 14:08:17.700 ecmcMotorRecord:: setIntegerParam(1 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.700 ecmcMotorRecord:: setDoubleParam(1 motorPowerOnDelay_)=6
2022/10/06 14:08:17.700 ecmcMotorRecord:: setDoubleParam(1 motorPowerOffDelay_=-1
2022/10/06 14:08:17.701 ecmcMotorRecord:: connected(1)
2022/10/06 14:08:17.701 ecmcMotorRecord:: initialPoll(1) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:h_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:h_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax1.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:h_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:h_phase-PosAct.DESC" to "Axis ax1: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:h_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:h_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax1.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:h_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:h_phase-VelAct.DESC" to "Axis ax1: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
s/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "1", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h_phase, MOTOR_PORT=MCU1, AXIS_NO=1, DESC=Hours phase, EGU=h, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h_phase, MOTOR_PORT=MCU1, AXIS_NO=1,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=h_phase,AXIS_NO=1,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=h_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# ap2022/10/06 14:08:17.713 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.714 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.715 OK
2022/10/06 14:08:17.716 OK
2022/10/06 14:08:17.716 OK
plyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(1,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(1,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(1,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(1,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(1,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(1,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(1,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 2: Physical axis hour
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "50")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "2")
epicsEnvSet("AX_NAME",    "h")
epicsEnvSet("AX_DESC",    "Hours")
epicsEnvSet("AX_EGU",     "h")
epicsEnvSet("MOD_RANGE",  "12")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "h")
epicsEnvSet("ECMC_R",                     "h-")
epicsEnvSet("ECMC_AXIS_NO",               "2")
epicsEnvSet("ECMC_DESC",                  "Hours")
epicsEnvSet("ECMC_EGU",                   "h")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "12")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "-12")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s50.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "-12*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s50.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s50.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s50.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s50.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s50.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s50.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s50.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s50.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s50.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "12/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "12/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "12/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "12/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s50.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s50.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s50.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s50.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-12)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value O2022/10/06 14:08:17.721 OK
2022/10/06 14:08:17.722 OK
2022/10/06 14:08:17.722 OK
2022/10/06 14:08:17.722 OK
2022/10/06 14:08:17.723 OK
2022/10/06 14:08:17.724 OK
2022/10/06 14:08:17.724 OK
2022/10/06 14:08:17.724 OK
2022/10/06 14:08:17.724 OK
2022/10/06 14:08:17.725 OK
2022/10/06 14:08:17.725 OK
2022/10/06 14:08:17.725 OK
2022/10/06 14:08:17.725 OK
2022/10/06 14:08:17.725 OK
2022/10/06 14:08:17.726 OK
K == -12...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-12)<>0","# ECMC_ENC_SCALE_NUM value OK == -12...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == -12...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-120)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == -120...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-120)<>0","# ECMC_DRV_SCALE_NUM value OK == -120...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == -120...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(2,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(2, 12)"
ecmcConfigOrDie "Cfg.SetAxisModType(2, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(2,0)"
 ecmcConfigOrDie "Cfg.SetAxisDec(2,0)"
ecmcConfigOrDie "Cfg.SetAxisJerk(2,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(2,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(2,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(2,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(2,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(2,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(2,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(2,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.positionActual01,"ax2.enc.actpos")2022/10/06 14:08:17.726 OK
2022/10/06 14:08:17.727 OK
2022/10/06 14:08:17.727 OK
2022/10/06 14:08:17.727 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.728 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.729 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.730 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 OK
2022/10/06 14:08:17.731 ecmcMotorRecord:: setIntegerParam(2 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.731 ecmcMotorRecord:: setDoubleParam(2 motorPowerOnDelay_)=6
2022/10/06 14:08:17.731 ecmcMotorRecord:: setDoubleParam(2 motorPowerOffDelay_=-1
2022/10/06 14:08:17.731 ecmcMotorRecord:: connected(2)
2022/10/06 14:08:17.731 ecmcMotorRecord:: initialPoll(2) status=0
"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(2,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(2,-12)"
ecmcConfigOrDie "Cfg.SetAxisEncType(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(2,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(2,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(2,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(2,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(2,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(2,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(2,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(2,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(2,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.0,"ax2.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.1,"ax2.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.velocitySetpoint01,"ax2.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.2,"ax2.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveControl01.1,"ax2.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.3,"ax2.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.7,"ax2.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.14,"ax2.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.driveStatus01.2,"ax2.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(2,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(2,-120)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(2,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(2,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(2,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(2,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax2.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax2.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax2.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s50.ONE.0,"ax2.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(2,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(2,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(2,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(2,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(2,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(2,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(2,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(2,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(2,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(2,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(2, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(2, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "2", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(-12)>0){RESULT:=abs(-12);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h, MOTOR_PORT=MCU1, AXIS_NO=2, DESC=Hours, EGU=h, PREC=3, VELO=1, JVEL=1, JAR=0.0, ACCS=0, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=12.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=h, MOTOR_PORT=MCU1, AXIS_NO=2,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=h,AXIS_NO=2,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=h,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.735 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
2022/10/06 14:08:17.736 OK
_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(2,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(2,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(2,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(2,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(2,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(2,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(2,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(2,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)2022/10/06 14:08:17.736 OK
# MACROS needed:
#  AX_PHYS     : Axis index for physical axis
#  AX_PHASE    : Axis index for virtual axis phase
#  TIME_SOURCE : Global variable for time source
#  MOD_RANGE   : Range of motion (ex. 60 for minutes)


var phase:=global.hour-ax2.enc.actpos;

if(phase > 12/2) {
  phase:=-(12-phase);
};

if(phase < -12) {
  phase:=12+phase;
};

ax1.enc.actpos:=phase;
ax2.traj.setpos:=global.hour-ax1.traj.setpos;
2022/10/06 14:08:17.757 OK
2022/10/06 14:08:17.757 OK
# MACROS needed:
#  PLC_ID        : ID of this PLC
#  AX_PHYS       : Axis index for physical axis
#  AX_PHASE      : Axis index for virtual axis phase
#  AX_VELO       : Nominal velo
#  AX_ACC        : Acc and dec
#  VELO_RAMP_ENA : Enable velo ramp. Only needed for nanos

if(plc2.firstscan) {
  println('State 0: trying to enable physical axis');
}

#State 0: Power physical axis and home to 0
if(static.state = 0) {  
  mc_power(2,1);
}

if(ax2.drv.enabled and static.state = 0) {
  println('State 1: Home and then Move vel');
  mc_home_pos(2,1,15,1,1,0);  
  static.state:=1;
}

# State 1: Start move velo 1
if(static.state = 1) {
  if(0) {
    # Toggle execute bit
    mc_move_vel(2,0,1,1,1);
    mc_move_vel(2,1,1,1,1);
  }
}

if(0) {
  if(static.counter<1000 and ax2.enc.actvelo<1*0.995 and ax2.enc.actvelo<1*1.005) {
    static.counter:=static.counter+1;
  } else {
    static.counter:=0;
  }
} else {
  static.counter:=100;
}

# Enable phase axis to get stable setpoint
if(static.counter>=100 and static.state=1) {
  println('State 2: Power phase axis (axis ${AX_PHASE})');
  static.state:=2;
  mc_power(1,1)
}

if(ax1.drv.enabled and static.state=2) {
  println('State 3: Phase axis enabled.. Change source of phys axis to ext');
  ax2.traj.source:=1;
  static.state:=3;
}

# Move to phase 0
if(static.state=3) {
  println('State 4: Move to 0 phase error');
  mc_move_abs(1,1,0,1,1, 1);
  static.state:=4;
}

# println('Axis ext setpoint: ', ax2.traj.extsetpos );
# println('Axis int setpoint: ', ax2.traj.setpos );
2022/10/06 14:08:17.788 OK
2022/10/06 14:08:17.788 OK

epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(2,1)"
##############################################################################
## PLC 1: Hour
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=1, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=2,AX_PHASE=1,TIME_SOURCE=global.hour, MOD_RANGE=12'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "1")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC1.plc")
ecmcFileExist("./plc/phys_and_phase.plc",1)
system "msi -V -M 'AX_PHYS=2,AX_PHASE=1,TIME_SOURCE=global.hour, MOD_RANGE=12' -o /tmp/PLC1.plc ./plc/phys_and_phase.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC1.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC1.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(1,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(1,/tmp/PLC1.plc)"
system "rm -f /tmp/PLC1.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "1", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=1,Name=IOC_TEST:,Index2Char=01,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## PLC 2: Hour seq
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=2, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=2,AX_PHASE=1,AX_VELO=1,AX_ACC=1,PLC_ID=2'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "2")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "100")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "100>0", "100","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC2.plc")
ecmcFileExist("./plc/seq.plc",1)
system "msi -V -M 'AX_PHYS=2,AX_PHASE=1,AX_VELO=1,AX_ACC=1,PLC_ID=2' -o /tmp/PLC2.plc ./plc/seq.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC2.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC2.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(2,100)"
ecmcConfigOrDie "Cfg.LoadPLCFile(2,/tmp/PLC2.plc)"
system "rm -f /tmp/PLC2.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "2", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=2,Name=IOC_TEST:,Index2Char=02,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## AXIS 3: Virtual axis minutes
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "3")
epicsEnvSet("AX_NAME",    "m_phase")
epicsEnvSet("AX_DESC",    "Minutes phase")
epicsEnvSet("AX_EGU",     "min")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "m_phase")
epicsEnvSet("ECMC_AXIS_NO",               "3")
epicsEnvSet("ECMC_DESC",                  "Minutes phase")
epicsEnvSet("ECMC_EGU",                   "min")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_M2022/10/06 14:08:17.800 OK
2022/10/06 14:08:17.800 OK
2022/10/06 14:08:17.800 OK
2022/10/06 14:08:17.800 OK
2022/10/06 14:08:17.800 OK
ON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(3,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(3,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(3, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(3, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#======================================================================2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.801 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.802 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 OK
2022/10/06 14:08:17.802 ecmcMotorRecord:: setIntegerParam(3 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.802 ecmcMotorRecord:: setDoubleParam(3 motorPowerOnDelay_)=6
2022/10/06 14:08:17.802 ecmcMotorRecord:: setDoubleParam(3 motorPowerOffDelay_=-1
2022/10/06 14:08:17.802 ecmcMotorRecord:: connected(3)
2022/10/06 14:08:17.802 ecmcMotorRecord:: initialPoll(3) status=0
========
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(3,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(3,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(3,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(3,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(3,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(3,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(3,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax3.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(3,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(3,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(3,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(3,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(3,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(3,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(3,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(3,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(3,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(3,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(3,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(3,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(3,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(3,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(3,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(3,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(3, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(3, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "3", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m_phase, MOTOR_PORT=MCU1, AXIS_NO=3, DESC=Minutes phase, EGU=min, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m_phase, MOTOR_PORT=MCU1, AXIS_NO=3,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnmacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:m_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:m_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax3.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:m_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:m_phase-PosAct.DESC" to "Axis ax3: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:m_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:m_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax3.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:m_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:m_phase-VelAct.DESC" to "Axis ax3: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
set(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=m_phase,AXIS_NO=3,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=m_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase mus2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
2022/10/06 14:08:17.806 OK
t be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(3,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(3,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(3,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(3,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(3,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(3,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(3,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(3,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 4: Physical axis minutes
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "51")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "4")
epicsEnvSet("AX_NAME",    "m")
epicsEnvSet("AX_DESC",    "Minutes")
epicsEnvSet("AX_EGU",     "min")
epicsEnvSet("MOD_RANGE",  "60")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "m")
epicsEnvSet("ECMC_R",                     "m-")
epicsEnvSet("ECMC_AXIS_NO",               "4")
epicsEnvSet("ECMC_DESC",                  "Minutes")
epicsEnvSet("ECMC_EGU",                   "min")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "60")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "-60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s51.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "-60*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s51.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s51.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s51.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s51.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s51.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s51.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s51.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s51.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s51.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "60/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "60/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "60/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "60/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s51.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s51.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s51.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s51.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == -60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-60)<>0","# ECMC_ENC_SCALE_NUM value OK == -60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == -60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-600)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NU2022/10/06 14:08:17.812 OK
2022/10/06 14:08:17.812 OK
2022/10/06 14:08:17.812 OK
2022/10/06 14:08:17.812 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.813 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
M value OK == -600...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-600)<>0","# ECMC_DRV_SCALE_NUM value OK == -600...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == -600...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(4,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(4, 60)"
ecmcConfigOrDie "Cfg.SetAxisModType(4, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(4,1)"
 ecmcConfigOrDie "Cfg.SetAxisDec(4,1)"
ecmcConfigOrDie "Cfg.SetAxisJerk(4,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(4,3)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(4,1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(4,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(4,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(4,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(4,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(4,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(4,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.positionActual01,"ax4.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(4,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(4,-60)"
ecmcConfigOrDie "Cfg.SetAxisEncType(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(4,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(4,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(4,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(4,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(4,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(42022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.814 OK
2022/10/06 14:08:17.815 ecmcMotorRecord:: setIntegerParam(4 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.815 ecmcMotorRecord:: setDoubleParam(4 motorPowerOnDelay_)=6
2022/10/06 14:08:17.815 ecmcMotorRecord:: setDoubleParam(4 motorPowerOffDelay_=-1
2022/10/06 14:08:17.815 ecmcMotorRecord:: connected(4)
2022/10/06 14:08:17.815 ecmcMotorRecord:: initialPoll(4) status=0
,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(4,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(4,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(4,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveControl01.0,"ax4.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.1,"ax4.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.velocitySetpoint01,"ax4.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveControl01.2,"ax4.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveControl01.1,"ax4.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.3,"ax4.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.7,"ax4.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.14,"ax4.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.driveStatus01.2,"ax4.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(4,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(4,-600)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(4,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(4,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(4,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(4,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax4.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax4.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax4.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s51.ONE.0,"ax4.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(4,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(4,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(4,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(4,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(4,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(4,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(4,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(4,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(4,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(4,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(4, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(4, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "4", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(-60)>0){RESULT:=abs(-60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m, MOTOR_PORT=MCU1, AXIS_NO=4, DESC=Minutes, EGU=min, PREC=3, VELO=3, JVEL=3, JAR=0.0, ACCS=1, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=60.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=m, MOTOR_PORT=MCU1, AXIS_NO=4,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=m,AXIS_NO=4,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=m,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE"2022/10/06 14:08:17.821 OK
2022/10/06 14:08:17.821 OK
2022/10/06 14:08:17.821 OK
2022/10/06 14:08:17.821 OK
2022/10/06 14:08:17.821 OK
2022/10/06 14:08:17.821 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
2022/10/06 14:08:17.822 OK
,       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(4,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(4,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(4,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(4,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(4,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(4,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(4,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(4,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(4,1)"
##############################################################################
## PLC 3: Minute
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=3, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=4,AX_PHASE=3,TIME_SOURCE=global.minute,MOD_RANGE=60'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "3")
ecmcEpicsEnvSetCal# MACROS needed:
#  AX_PHYS     : Axis index for physical axis
#  AX_PHASE    : Axis index for virtual axis phase
#  TIME_SOURCE : Global variable for time source
#  MOD_RANGE   : Range of motion (ex. 60 for minutes)


var phase:=global.minute-ax4.enc.actpos;

if(phase > 60/2) {
  phase:=-(60-phase);
};

if(phase < -60) {
  phase:=60+phase;
};

ax3.enc.actpos:=phase;
ax4.traj.setpos:=global.minute-ax3.traj.setpos;
2022/10/06 14:08:17.843 OK
2022/10/06 14:08:17.843 OK
# MACROS needed:
#  PLC_ID        : ID of this PLC
#  AX_PHYS       : Axis index for physical axis
#  AX_PHASE      : Axis index for virtual axis phase
#  AX_VELO       : Nominal velo
#  AX_ACC        : Acc and dec
#  VELO_RAMP_ENA : Enable velo ramp. Only needed for nanos

if(plc4.firstscan) {
  println('State 0: trying to enable physical axis');
}

#State 0: Power physical axis and home to 0
if(static.state = 0) {  
  mc_power(4,1);
}

if(ax4.drv.enabled and static.state = 0) {
  println('State 1: Home and then Move vel');
  mc_home_pos(4,1,15,1,1,0);  
  static.state:=1;
}

# State 1: Start move velo 5
if(static.state = 1) {
  if(0) {
    # Toggle execute bit
    mc_move_vel(4,0,5,5,5);
    mc_move_vel(4,1,5,5,5);
  }
}

if(0) {
  if(static.counter<1000 and ax4.enc.actvelo<5*0.995 and ax4.enc.actvelo<5*1.005) {
    static.counter:=static.counter+1;
  } else {
    static.counter:=0;
  }
} else {
  static.counter:=100;
}

# Enable phase axis to get stable setpoint
if(static.counter>=100 and static.state=1) {
  println('State 2: Power phase axis (axis ${AX_PHASE})');
  static.state:=2;
  mc_power(3,1)
}

if(ax3.drv.enabled and static.state=2) {
  println('State 3: Phase axis enabled.. Change source of phys axis to ext');
  ax4.traj.source:=1;
  static.state:=3;
}

# Move to phase 0
if(static.state=3) {
  println('State 4: Move to 0 phase error');
  mc_move_abs(3,1,0,5,5, 5);
  static.state:=4;
}

# println('Axis ext setpoint: ', ax4.traj.extsetpos );
# println('Axis int setpoint: ', ax4.traj.setpos );
2022/10/06 14:08:17.870 OK
2022/10/06 14:08:17.870 OK
macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
c(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC3.plc")
ecmcFileExist("./plc/phys_and_phase.plc",1)
system "msi -V -M 'AX_PHYS=4,AX_PHASE=3,TIME_SOURCE=global.minute,MOD_RANGE=60' -o /tmp/PLC3.plc ./plc/phys_and_phase.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC3.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC3.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(3,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(3,/tmp/PLC3.plc)"
system "rm -f /tmp/PLC3.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "3", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=3,Name=IOC_TEST:,Index2Char=03,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## PLC 4: Minute seq
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=4, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=4,AX_PHASE=3,AX_VELO=5,AX_ACC=5,PLC_ID=4'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "4")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "100")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "100>0", "100","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC4.plc")
ecmcFileExist("./plc/seq.plc",1)
system "msi -V -M 'AX_PHYS=4,AX_PHASE=3,AX_VELO=5,AX_ACC=5,PLC_ID=4' -o /tmp/PLC4.plc ./plc/seq.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC4.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC4.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(4,100)"
ecmcConfigOrDie "Cfg.LoadPLCFile(4,/tmp/PLC4.plc)"
system "rm -f /tmp/PLC4.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "4", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=4,Name=IOC_TEST:,Index2Char=04,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## AXIS 5: Virtual axis seconds
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "5")
epicsEnvSet("AX_NAME",    "s_phase")
epicsEnvSet("AX_DESC",    "Seconds phase")
epicsEnvSet("AX_EGU",     "s")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "s_phase")
epicsEnvSet("ECMC_AXIS_NO",               "5")
epicsEnvSet("ECMC_DESC",                  "Seconds phase")
epicsEnvSet("ECMC_EGU",                   "s")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/ba2022/10/06 14:08:17.885 OK
2022/10/06 14:08:17.885 OK
2022/10/06 14:08:17.885 OK
2022/10/06 14:08:17.885 OK
2022/10/06 14:08:17.885 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.886 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
se-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(5,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(5,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(5, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(5, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(5,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(5,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(5,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(5,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(5,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(5,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(5,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax5.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(5,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(5,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(5,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(5,0)"
ecmcConfigOrDie "Cfg.Lin2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.887 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.887 OK
2022/10/06 14:08:17.888 ecmcMotorRecord:: setIntegerParam(5 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.888 ecmcMotorRecord:: setDoubleParam(5 motorPowerOnDelay_)=6
2022/10/06 14:08:17.888 ecmcMotorRecord:: setDoubleParam(5 motorPowerOffDelay_=-1
2022/10/06 14:08:17.888 ecmcMotorRecord:: connected(5)
2022/10/06 14:08:17.888 ecmcMotorRecord:: initialPoll(5) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:s_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:s_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax5.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:s_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:s_phase-PosAct.DESC" to "Axis ax5: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:s_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:s_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax5.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:s_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:s_phase-VelAct.DESC" to "Axis ax5: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
kEcEntryToObject(,"ax5.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(5,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(5,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(5,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(5,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(5,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(5,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(5,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(5,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(5,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(5,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(5, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(5, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "5", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s_phase, MOTOR_PORT=MCU1, AXIS_NO=5, DESC=Seconds phase, EGU=s, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s_phase, MOTOR_PORT=MCU1, AXIS_NO=5,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=s_phase,AXIS_NO=5,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=s_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnse2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
t(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(5,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(5,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
2022/10/06 14:08:17.891 OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(5,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(5,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(5,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(5,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(5,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(5,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 6: Physical axis seconds
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "60")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "6")
epicsEnvSet("AX_NAME",    "s")
epicsEnvSet("AX_DESC",    "Seconds")
epicsEnvSet("AX_EGU",     "s")
epicsEnvSet("MOD_RANGE",  "60")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "s")
epicsEnvSet("ECMC_R",                     "s-")
epicsEnvSet("ECMC_AXIS_NO",               "6")
epicsEnvSet("ECMC_DESC",                  "Seconds")
epicsEnvSet("ECMC_EGU",                   "s")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "60")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "-60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s60.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "-60*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s60.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s60.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s60.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s60.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s60.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s60.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s60.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s60.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s60.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "60/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "60/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "60/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "60/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s60.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s60.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s60.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s60.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == -60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-60)<>0","# ECMC_ENC_SCALE_NUM value OK == -60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == -60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-600)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == -600...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-600)<>0","# ECMC_DRV_SCALE_NUM value OK == -600...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == -600...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anders2022/10/06 14:08:17.895 OK
2022/10/06 14:08:17.895 OK
2022/10/06 14:08:17.895 OK
2022/10/06 14:08:17.895 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.896 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
sandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(6,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(6, 60)"
ecmcConfigOrDie "Cfg.SetAxisModType(6, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(6,1)"
 ecmcConfigOrDie "Cfg.SetAxisDec(6,1)"
ecmcConfigOrDie "Cfg.SetAxisJerk(6,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(6,3)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(6,1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(6,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(6,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(6,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(6,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(6,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.positionActual01,"ax6.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(6,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(6,-60)"
ecmcConfigOrDie "Cfg.SetAxisEncType(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(6,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(6,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(6,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(6,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(6,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(6,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveControl01.0,"ax6.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.1,"ax6.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.velocitySetpoint01,"ax6.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveControl01.2,"ax6.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveControl01.1,"ax6.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.3,"ax6.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.7,"ax6.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.14,"ax6.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.driveStatus01.2,"ax6.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(62022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.897 OK
2022/10/06 14:08:17.898 ecmcMotorRecord:: setIntegerParam(6 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.898 ecmcMotorRecord:: setDoubleParam(6 motorPowerOnDelay_)=6
2022/10/06 14:08:17.898 ecmcMotorRecord:: setDoubleParam(6 motorPowerOffDelay_=-1
2022/10/06 14:08:17.898 ecmcMotorRecord:: connected(6)
2022/10/06 14:08:17.898 ecmcMotorRecord:: initialPoll(6) status=0
,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(6,-600)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(6,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(6,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax6.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax6.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax6.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s60.ONE.0,"ax6.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(6,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(6,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(6,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(6,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(6,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(6,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(6,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(6,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(6,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(6, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(6, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "6", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(-60)>0){RESULT:=abs(-60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s, MOTOR_PORT=MCU1, AXIS_NO=6, DESC=Seconds, EGU=s, PREC=3, VELO=3, JVEL=3, JAR=0.0, ACCS=1, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=60.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=s, MOTOR_PORT=MCU1, AXIS_NO=6,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=s,AXIS_NO=6,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=s,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
ep2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.901 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
2022/10/06 14:08:17.902 OK
# MACROS needed:
#  AX_PHYS     : Axis index for physical axis
#  AX_PHASE    : Axis index for virtual axis phase
#  TIME_SOURCE : Global variable for time source
#  MOD_RANGE   : Range of motion (ex. 60 for minutes)


var phase:=global.second-ax6.enc.actpos;

if(phase > 60/2) {
  phase:=-(60-phase);
};

if(phase < -60) {
  phase:=60+phase;
};

ax5.enc.actpos:=phase;
ax6.traj.setpos:=global.second-ax5.traj.setpos;
2022/10/06 14:08:17.911 OK
2022/10/06 14:08:17.911 OK
icsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(6,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(6,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(6,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(6,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(6,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(6,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(6,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(6,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(6,1)"
##############################################################################
## PLC 5: Second
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=5, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=6,AX_PHASE=5,TIME_SOURCE=global.second,MOD_RANGE=60'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "5")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC5.plc")
ecmcFileExist("./plc/phys_and_phase.plc",1)
system "msi -V -M 'AX_PHYS=6,AX_PHASE=5,TIME_SOURCE=global.second,MOD_RANGE=60' -o /tmp/PLC5.plc ./plc/phys_and_phase.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC5.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC5.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(5,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(5,/tmp/PLC5.plc)"
system "rm -f /tmp/PLC5.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "5", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=5,Name=IOC_TEST:,Index2Char=05,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## PLC 6: Second seq 
iocshL# MACROS needed:
#  PLC_ID        : ID of this PLC
#  AX_PHYS       : Axis index for physical axis
#  AX_PHASE      : Axis index for virtual axis phase
#  AX_VELO       : Nominal velo
#  AX_ACC        : Acc and dec
#  VELO_RAMP_ENA : Enable velo ramp. Only needed for nanos

if(plc6.firstscan) {
  println('State 0: trying to enable physical axis');
}

#State 0: Power physical axis and home to 0
if(static.state = 0) {  
  mc_power(6,1);
}

if(ax6.drv.enabled and static.state = 0) {
  println('State 1: Home and then Move vel');
  mc_home_pos(6,1,15,1,1,0);  
  static.state:=1;
}

# State 1: Start move velo 5
if(static.state = 1) {
  if(0) {
    # Toggle execute bit
    mc_move_vel(6,0,5,5,5);
    mc_move_vel(6,1,5,5,5);
  }
}

if(0) {
  if(static.counter<1000 and ax6.enc.actvelo<5*0.995 and ax6.enc.actvelo<5*1.005) {
    static.counter:=static.counter+1;
  } else {
    static.counter:=0;
  }
} else {
  static.counter:=100;
}

# Enable phase axis to get stable setpoint
if(static.counter>=100 and static.state=1) {
  println('State 2: Power phase axis (axis ${AX_PHASE})');
  static.state:=2;
  mc_power(5,1)
}

if(ax5.drv.enabled and static.state=2) {
  println('State 3: Phase axis enabled.. Change source of phys axis to ext');
  ax6.traj.source:=1;
  static.state:=3;
}

# Move to phase 0
if(static.state=3) {
  println('State 4: Move to 0 phase error');
  mc_move_abs(5,1,0,5,5, 5);
  static.state:=4;
}

# println('Axis ext setpoint: ', ax6.traj.extsetpos );
# println('Axis int setpoint: ', ax6.traj.setpos );
2022/10/06 14:08:17.928 OK
2022/10/06 14:08:17.928 OK
macLib: macro AX_NAME-) is undefined (expanding string epicsEnvSet("ECMC_R",                     "${AX_NAME-"))
oad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=6, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=6,AX_PHASE=5,AX_VELO=5,AX_ACC=5,PLC_ID=6'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "6")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "100")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "100>0", "100","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC6.plc")
ecmcFileExist("./plc/seq.plc",1)
system "msi -V -M 'AX_PHYS=6,AX_PHASE=5,AX_VELO=5,AX_ACC=5,PLC_ID=6' -o /tmp/PLC6.plc ./plc/seq.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC6.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC6.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(6,100)"
ecmcConfigOrDie "Cfg.LoadPLCFile(6,/tmp/PLC6.plc)"
system "rm -f /tmp/PLC6.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "6", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=6,Name=IOC_TEST:,Index2Char=06,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## AXIS 7: Virtual axis nanos
#
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "7")
epicsEnvSet("AX_NAME",    "n_phase")
epicsEnvSet("AX_DESC",    "Nanos phase")
epicsEnvSet("AX_EGU",     "ns")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/phase.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/phase.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "n_phase")
epicsEnvSet("ECMC_AXIS_NO",               "7")
epicsEnvSet("ECMC_DESC",                  "Nanos phase")
epicsEnvSet("ECMC_EGU",                   "ns")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_EN2022/10/06 14:08:17.937 OK
2022/10/06 14:08:17.937 OK
2022/10/06 14:08:17.937 OK
2022/10/06 14:08:17.937 OK
2022/10/06 14:08:17.937 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.938 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
C_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(7,2,0,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(7,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(7, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(7, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(7,10)"
 ecmcConfigOrDie "Cfg.SetAxisDec(7,10)"
ecmcConfigOrDie "Cfg.SetAxisJerk(7,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(7,5.0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(7,100)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(7,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(7,4)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax7.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(7,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(7,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(7,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(7,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchstatus")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(7,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(7,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(7,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(7,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(7,0)"
ecmcConfigOrDi2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.939 OK
macLib: macro ECMC_DXLM_ENABLE is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(${ECMC_AXIS_NO},${ECMC_DXLM_ENABLE})")
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 OK
2022/10/06 14:08:17.939 ecmcMotorRecord:: setIntegerParam(7 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.939 ecmcMotorRecord:: setDoubleParam(7 motorPowerOnDelay_)=6
2022/10/06 14:08:17.939 ecmcMotorRecord:: setDoubleParam(7 motorPowerOffDelay_=-1
2022/10/06 14:08:17.940 ecmcMotorRecord:: connected(7)
2022/10/06 14:08:17.940 ecmcMotorRecord:: initialPoll(7) status=0
macLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actpos$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 5 has undefined macros
IOC_TEST:n_phase-PosAct.INP Has unexpanded macro
Can't set "IOC_TEST:n_phase-PosAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax7.actpos$(ENC_NO,undefined)?"  : Bad Field value
Error at or before ')' in path "/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/"  file "ecmcAxis.db" line 5
macLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Position $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 9 has undefined macros
IOC_TEST:n_phase-PosAct.DESC Has unexpanded macro
Can't set "IOC_TEST:n_phase-PosAct.DESC" to "Axis ax7: Actual Position $(ENC_NO,undefined)"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))T_SMP_MS=$(T_SMP_MS=1000)/TYPE=asynFloat64/ax$(AXIS_NO).actvel$(ENC_NO)?")
)
Warning: 'ecmcAxis.db' line 16 has undefined macros
IOC_TEST:n_phase-VelAct.INP Has unexpanded macro
Can't set "IOC_TEST:n_phase-VelAct.INP" to "@asyn(MC_CPU1,0,1)T_SMP_MS=10/TYPE=asynFloat64/ax7.actvel$(ENC_NO,undefined)?"  : Bad Field value
ErrormacLib: macro ENC_NO is undefined (expanding string   field(DESC, "Axis ax$(AXIS_NO): Actual Velocity $(ENC_NO)")
)
Warning: 'ecmcAxis.db' line 20 has undefined macros
IOC_TEST:n_phase-VelAct.DESC Has unexpanded macro
Can't set "IOC_TEST:n_phase-VelAct.DESC" to "Axis ax7: Actual Velocity $(ENC_NO,undefined)"  : Bad Field value
ErrordbLoadRecords: failed to load 'ecmcAxis.db'
e "Cfg.SetAxisMonMaxVel(7,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(7,0)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(7,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(7,100)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(7,0)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(7,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(7,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
ecmcConfigOrDie "Cfg.SetAxisHomePosition(7,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(7, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(7, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "7", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=n_phase, MOTOR_PORT=MCU1, AXIS_NO=7, DESC=Nanos phase, EGU=ns, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=n_phase, MOTOR_PORT=MCU1, AXIS_NO=7,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=n_phase,AXIS_NO=7,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=n_phase,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epics2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.951 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
2022/10/06 14:08:17.952 OK
EnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phase.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phase.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# Phase must be within +-180deg
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(7,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(7,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(7,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(7,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(7,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(7,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(7,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(7,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## AXIS 8: Physical axis nanos
#
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",        "61")
epicsEnvSet("DEV",        "IOC_TEST")
epicsEnvSet("AX_ID",      "8")
epicsEnvSet("AX_NAME",    "ns")
epicsEnvSet("AX_DESC",    "nanoseconds")
epicsEnvSet("AX_EGU",     "ns")
epicsEnvSet("AX_EGU",     "ns")
epicsEnvSet("MOD_RANGE",  "1")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/phys.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/phys.ax",1)
iocshLoad ./cfg/phys.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "ns")
epicsEnvSet("ECMC_R",                     "ns-")
epicsEnvSet("ECMC_AXIS_NO",               "8")
epicsEnvSet("ECMC_DESC",                  "nanoseconds")
epicsEnvSet("ECMC_EGU",                   "ns")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "1")                         # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                         # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM" ,        "-1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "12800")
epicsEnvSet("ECMC_ENC_TYPE",              "0")                         # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS",              "16")                        # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                         # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                         # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s61.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")      # Error 0: SSI input error
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")      # Error 1: SSI frame error
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")      # Error 2: Encoder power fail
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE",              "0")                         # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
ecmcEpicsEnvSetCalc("ECMC_DRV_SCALE_NUM" , "-1*10")
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                   # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s61.driveControl01.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s61.driveStatus01.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s61.velocitySetpoint01")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s61.driveControl01.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s61.driveControl01.1")      # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s61.driveStatus01.3")       # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s61.driveStatus01.7")       # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s61.driveStatus01.14")      # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s61.driveStatus01.2")       # Warning
#Trajectory
ecmcEpicsEnvSetCalc("ECMC_VELO",              "1/20")
ecmcEpicsEnvSetCalc("ECMC_JOG_VEL",           "1/20")
epicsEnvSet("ECMC_JAR",                   "0.0")                       #JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2",   "1/100")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",       "1/100")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s61.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s61.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s61.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s61.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "2")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "200")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "500.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/sources/e32022/10/06 14:08:17.956 OK
2022/10/06 14:08:17.956 OK
2022/10/06 14:08:17.956 OK
2022/10/06 14:08:17.956 OK
-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == -1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-1)<>0","# ECMC_ENC_SCALE_NUM value OK == -1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == -1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(-10)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == -10...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(-10)<>0","# ECMC_DRV_SCALE_NUM value OK == -10...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == -10...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(8,1,0,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(8, 1)"
ecmcConfigOrDie "Cfg.SetAxisModType(8, 0)"
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#============================================================================2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.957 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
==
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(8,0)"
 ecmcConfigOrDie "Cfg.SetAxisDec(8,0)"
ecmcConfigOrDie "Cfg.SetAxisJerk(8,0)"
ecmcConfigOrDie "Cfg.SetAxisVel(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(8,0)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(8,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(8,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(8,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(8,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(8,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.positionActual01,"ax8.enc.actpos")"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(8,12800)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(8,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncType(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(8,16)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(8,100)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(8,1)"
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.warning")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(8,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(8,-1)"
ecmcConfigOrDie "Cfg.SelectAxisEncHome(8,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(8,-1)"
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveControl01.0,"ax8.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveStatus01.1,"ax8.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.velocitySetpoint01,"ax8.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.drv.position")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax8.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveControl01.2,"ax8.drv.reducetorque")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveControl01.1,"ax8.drv.reset")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveStatus01.3,"ax8.drv.alarm0")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveStatus01.7,"ax8.drv.alarm1")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveStatus01.14,"ax8.drv.alarm2")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.driveStatus01.2,"ax8.drv.warning")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(8,32768.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(8,-10)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(8,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(8,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(8,0)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(8,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.ONE.0,"ax8.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.ONE.0,"ax8.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.ONE.0,"ax8.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s61.ONE.0,"ax8.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(8,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(8,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(8,2)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(8,200)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(8,500.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.958 OK
2022/10/06 14:08:17.959 ecmcMotorRecord:: setIntegerParam(8 motorPowerAutoOnOff_)=2
2022/10/06 14:08:17.959 ecmcMotorRecord:: setDoubleParam(8 motorPowerOnDelay_)=6
2022/10/06 14:08:17.959 ecmcMotorRecord:: setDoubleParam(8 motorPowerOffDelay_=-1
2022/10/06 14:08:17.959 ecmcMotorRecord:: connected(8)
2022/10/06 14:08:17.959 ecmcMotorRecord:: initialPoll(8) status=0
(8,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(8,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(8,100)"
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(8,0)"
ecmcConfigOrDie "Cfg.SetAxisHomePosition(8,0.0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(8, 0)"
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(8, 0)"
 ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "8", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(-1)>0){RESULT:=abs(-1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=ns, MOTOR_PORT=MCU1, AXIS_NO=8, DESC=nanoseconds, EGU=ns, PREC=3, VELO=0, JVEL=0, JAR=0.0, ACCS=0, RDBD=0.1, DLLM=0, DHLM=0, HOMEPROC=3,SREV=12800,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=ns, MOTOR_PORT=MCU1, AXIS_NO=8,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
# Add the default encoder 0
epicsEnvSet(ECMC_ENC_CFG_ID,0)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=ns,AXIS_NO=8,ENC_NO=0,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
epicsEnvUnset(ECMC_ENC_CFG_ID)
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=ns,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset2022/10/06 14:08:17.961 OK
2022/10/06 14:08:17.961 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/phys.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/phys.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "100")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "var temp:=0;")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(8,1)"
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(8,1)"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)=var temp:=0;"
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(8)="
ecmcConfigOrDie "Cfg.S2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
2022/10/06 14:08:17.962 OK
# MACROS needed:
#  AX_PHYS     : Axis index for physical axis
#  AX_PHASE    : Axis index for virtual axis phase
#  TIME_SOURCE : Global variable for time source
#  MOD_RANGE   : Range of motion (ex. 60 for minutes)


var phase:=global.nano-ax8.enc.actpos;

if(phase > 1/2) {
  phase:=-(1-phase);
};

if(phase < -1) {
  phase:=1+phase;
};

ax7.enc.actpos:=phase;
ax8.traj.setpos:=global.nano-ax7.traj.setpos;
2022/10/06 14:08:18.014 OK
2022/10/06 14:08:18.014 OK
# MACROS needed:
#  PLC_ID        : ID of this PLC
#  AX_PHYS       : Axis index for physical axis
#  AX_PHASE      : Axis index for virtual axis phase
#  AX_VELO       : Nominal velo
#  AX_ACC        : Acc and dec
#  VELO_RAMP_ENA : Enable velo ramp. Only needed for nanos

if(plc8.firstscan) {
  println('State 0: trying to enable physical axis');
}

#State 0: Power physical axis and home to 0
if(static.state = 0) {  
  mc_power(8,1);
}

if(ax8.drv.enabled and static.state = 0) {
  println('State 1: Home and then Move vel');
  mc_home_pos(8,1,15,1,1,0);  
  static.state:=1;
}

# State 1: Start move velo 1
if(static.state = 1) {
  if(1) {
    # Toggle execute bit
    mc_move_vel(8,0,1,0.1,0.1);
    mc_move_vel(8,1,1,0.1,0.1);
  }
}

if(1) {
  if(static.counter<1000 and ax8.enc.actvelo<1*0.995 and ax8.enc.actvelo<1*1.005) {
    static.counter:=static.counter+1;
  } else {
    static.counter:=0;
  }
} else {
  static.counter:=100;
}

# Enable phase axis to get stable setpoint
if(static.counter>=100 and static.state=1) {
  println('State 2: Power phase axis (axis ${AX_PHASE})');
  static.state:=2;
  mc_power(7,1)
}

if(ax7.drv.enabled and static.state=2) {
  println('State 3: Phase axis enabled.. Change source of phys axis to ext');
  ax8.traj.source:=1;
  static.state:=3;
}

# Move to phase 0
if(static.state=3) {
  println('State 4: Move to 0 phase error');
  mc_move_abs(7,1,0,1,0.1, 0.1);
  static.state:=4;
}

# println('Axis ext setpoint: ', ax8.traj.extsetpos );
# println('Axis int setpoint: ', ax8.traj.setpos );
2022/10/06 14:08:18.030 OK
etAxisPLCEncVelFilterSize(8,100)"
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(8,1)"
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(8,0)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(8,10)"
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(8,0)"
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(8,0)"
ecmcFileExist(/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(8,1)"
##############################################################################
## PLC 7: Nano
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=7, SAMPLE_RATE_MS=1,FILE=./plc/phys_and_phase.plc,PLC_MACROS='AX_PHYS=8,AX_PHASE=7,TIME_SOURCE=global.nano,MOD_RANGE=1'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "7")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "1")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "1>0", "1","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC7.plc")
ecmcFileExist("./plc/phys_and_phase.plc",1)
system "msi -V -M 'AX_PHYS=8,AX_PHASE=7,TIME_SOURCE=global.nano,MOD_RANGE=1' -o /tmp/PLC7.plc ./plc/phys_and_phase.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC7.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC7.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(7,1)"
ecmcConfigOrDie "Cfg.LoadPLCFile(7,/tmp/PLC7.plc)"
system "rm -f /tmp/PLC7.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "7", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=7,Name=IOC_TEST:,Index2Char=07,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
## PLC 8: Nano seq 
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=8, SAMPLE_RATE_MS=100,FILE=./plc/seq.plc,PLC_MACROS='AX_PHYS=8,AX_PHASE=7,AX_VELO=1,AX_ACC=0.1,PLC_ID=8,VELO_RAMP_ENA=1'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "8")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/1000", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "100")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "100>0", "100","1.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC8.plc")
ecmcFileExist("./plc/seq.plc",1)
system "msi -V -M 'AX_PHYS=8,AX_PHASE=7,AX_VELO=1,AX_ACC=0.1,PLC_ID=8,VELO_RAMP_ENA=1' -o /tmp/PLC8.plc ./plc/seq.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC8.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC8.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(8,100)"
ecmcConfigOrD2022/10/06 14:08:18.030 OK
Starting iocInit
ie "Cfg.LoadPLCFile(8,/tmp/PLC8.plc)"
system "rm -f /tmp/PLC8.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "8", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=8,Name=IOC_TEST:,Index2Char=08,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
##############################################################################
############# Configure diagnostics:
asynSetTraceMask(MC_CPU1, -1, 0x0)
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
#ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"
# go active
iocshLoad (/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setAppMode.cmd)
#==============================================================================
# setAppMode.cmd
ecmcFileExist("/home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/general.cmd",1)
iocshLoad /home/anderssandstrom/sources/e3-ecmccfg/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/general.cmd
#==============================================================================
# general.cmd
ecmcFileExist("ecmcGeneral.db",1,1)
dbLoadRecords("ecmcGeneral.db","P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0,ECMC_PROC_HOOK=")
# Examples of commands for info:
# ecmcReport <level> or asynReport <level>
# ecmcReport 3
# ecmcGrepParam <pattern>
# List all ecmc params for ethercat slave 2:
# ecmcGrepParam *s2*
#
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("ecmcEc.db",1,1)
 dbLoadRecords("ecmcEc.db","P=IOC_TEST:,ECMC_EC_MP=m,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,T_SMP_MS=10,TSE=0")
ecmcConfigOrDie "Cfg.SetAppMode(1)"
State 0: trying to enable physical axis
State 0: trying to enable physical axis
State 0: trying to enable physical axis
State 0: trying to enable physical axis
State 1: Home and then Move vel
State 2: Power phase axis (axis ${AX_PHASE})
State 1: Home and then Move vel
State 2: Power phase axis (axis ${AX_PHASE})
State 3: Phase axis enabled.. Change source of phys axis to ext
State 4: Move to 0 phase error
State 3: Phase axis enabled.. Change source of phys axis to ext
State 4: Move to 0 phase error
State 1: Home and then Move vel
State 2: Power phase axis (axis ${AX_PHASE})
State 3: Phase axis enabled.. Change source of phys axis to ext
State 4: Move to 0 phase error
State 1: Home and then Move vel
iocInit()
############################################################################
## EPICS R7.0.6.1-E3-7.0.6.1-patch
## Rev. 2022-03-09T15:26+0100
############################################################################
IOC_TEST:h_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:h_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:m_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:m_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:s_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:s_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:n_phase-PosAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
IOC_TEST:n_phase-VelAct devAsynFloat64::initCommon invalid INST_IO Must be asyn(<port> <addr> <timeout>)userParams
2022/10/06 14:08:22.420 [devMotorAsyn.c:439  IOC_TEST:h_phase] init_record IOC_TEST:h_phase position=1.402648 encoderPos=1.402648 velocity=0.000000 MSTAstatus=0x4d28 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.420 [devMotorAsyn.c:185  IOC_TEST:h_phase] init_controller IOC_TEST:h_phase set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.420 [devMotorAsyn.c:266  IOC_TEST:h_phase] update_soft_limits IOC_TEST:h_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.420 [motorDevSup.c:327  IOC_TEST:h_phase] PositionRestoreNeeded IOC_TEST:h_phase rstm=2 dval=0.000000 drbv=1.402648 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.420 [motorRecord.cc:782  IOC_TEST:h_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.420 [motorRecord.cc:720  IOC_TEST:h_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 14:08:22.420 [motorRecord.cc:833  IOC_TEST:h_phase] init_re_init  end dval=1.402648 drbv=1.402648 rdbd=1.000000 spdb=1.000000
2022/10/06 14:08:22.420 [motorRecord.cc:968  IOC_TEST:h_phase] init_record process_reason="callbackdata + soft limits" dval=1.402648 drbv=1.402648 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x4d28 neverPolled=0
2022/10/06 14:08:22.420 [devMotorAsyn.c:439  IOC_TEST:h] init_record IOC_TEST:h position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x4d29 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.420 [devMotorAsyn.c:185  IOC_TEST:h] init_controller IOC_TEST:h set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.420 [devMotorAsyn.c:266  IOC_TEST:h] update_soft_limits IOC_TEST:h RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.420 [motorDevSup.c:327  IOC_TEST:h] PositionRestoreNeeded IOC_TEST:h rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.000937 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.420 [motorRecord.cc:782  IOC_TEST:h] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.420 [motorRecord.cc:720  IOC_TEST:h] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.000937
2022/10/06 14:08:22.420 [motorRecord.cc:833  IOC_TEST:h] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 14:08:22.420 [motorRecord.cc:968  IOC_TEST:h] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x4d29 neverPolled=0
2022/10/06 14:08:22.420 [devMotorAsyn.c:439  IOC_TEST:m_phase] init_record IOC_TEST:m_phase position=4.668272 encoderPos=4.668272 velocity=0.000000 MSTAstatus=0x4d28 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.421 [devMotorAsyn.c:185  IOC_TEST:m_phase] init_controller IOC_TEST:m_phase set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:266  IOC_TEST:m_phase] update_soft_limits IOC_TEST:m_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.421 [motorDevSup.c:327  IOC_TEST:m_phase] PositionRestoreNeeded IOC_TEST:m_phase rstm=2 dval=0.000000 drbv=4.668272 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.421 [motorRecord.cc:782  IOC_TEST:m_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.421 [motorRecord.cc:720  IOC_TEST:m_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 14:08:22.421 [motorRecord.cc:833  IOC_TEST:m_phase] init_re_init  end dval=4.668272 drbv=4.668272 rdbd=1.000000 spdb=1.000000
2022/10/06 14:08:22.421 [motorRecord.cc:968  IOC_TEST:m_phase] init_record process_reason="callbackdata + soft limits" dval=4.668272 drbv=4.668272 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x4d28 neverPolled=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:439  IOC_TEST:m] init_record IOC_TEST:m position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x4d29 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.421 [devMotorAsyn.c:185  IOC_TEST:m] init_controller IOC_TEST:m set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:266  IOC_TEST:m] update_soft_limits IOC_TEST:m RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.421 [motorDevSup.c:327  IOC_TEST:m] PositionRestoreNeeded IOC_TEST:m rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.004687 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.421 [motorRecord.cc:782  IOC_TEST:m] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.421 [motorRecord.cc:720  IOC_TEST:m] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.004687
2022/10/06 14:08:22.421 [motorRecord.cc:833  IOC_TEST:m] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 14:08:22.421 [motorRecord.cc:968  IOC_TEST:m] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x4d29 neverPolled=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:439  IOC_TEST:s_phase] init_record IOC_TEST:s_phase position=19.054129 encoderPos=19.054129 velocity=0.000000 MSTAstatus=0x4d28 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.421 [devMotorAsyn.c:185  IOC_TEST:s_phase] init_controller IOC_TEST:s_phase set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:266  IOC_TEST:s_phase] update_soft_limits IOC_TEST:s_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.421 [motorDevSup.c:327  IOC_TEST:s_phase] PositionRestoreNeeded IOC_TEST:s_phase rstm=2 dval=0.000000 drbv=19.054129 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.421 [motorRecord.cc:782  IOC_TEST:s_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.421 [motorRecord.cc:720  IOC_TEST:s_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 14:08:22.421 [motorRecord.cc:833  IOC_TEST:s_phase] init_re_init  end dval=19.054129 drbv=19.054129 rdbd=1.000000 spdb=1.000000
2022/10/06 14:08:22.421 [motorRecord.cc:968  IOC_TEST:s_phase] init_record process_reason="callbackdata + soft limits" dval=19.054129 drbv=19.054129 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x4d28 neverPolled=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:439  IOC_TEST:s] init_record IOC_TEST:s position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x4d29 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.421 [devMotorAsyn.c:185  IOC_TEST:s] init_controller IOC_TEST:s set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:266  IOC_TEST:s] update_soft_limits IOC_TEST:s RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.421 [motorDevSup.c:327  IOC_TEST:s] PositionRestoreNeeded IOC_TEST:s rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.004687 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.421 [motorRecord.cc:782  IOC_TEST:s] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.421 [motorRecord.cc:720  IOC_TEST:s] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.004687
2022/10/06 14:08:22.421 [motorRecord.cc:833  IOC_TEST:s] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2022/10/06 14:08:22.421 [motorRecord.cc:968  IOC_TEST:s] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x4d29 neverPolled=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:439  IOC_TEST:n_phase] init_record IOC_TEST:n_phase position=0.263504 encoderPos=0.263504 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.421 [devMotorAsyn.c:185  IOC_TEST:n_phase] init_controller IOC_TEST:n_phase set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:266  IOC_TEST:n_phase] update_soft_limits IOC_TEST:n_phase RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.421 [motorDevSup.c:327  IOC_TEST:n_phase] PositionRestoreNeeded IOC_TEST:n_phase rstm=2 dval=0.000000 drbv=0.263504 pmr->rdbd=1.000000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.421 [motorRecord.cc:782  IOC_TEST:n_phase] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.421 [motorRecord.cc:720  IOC_TEST:n_phase] enforceMinRetryDeadband spdb=1.000000 rdbd=1.000000 mres=1.000000
2022/10/06 14:08:22.421 [motorRecord.cc:833  IOC_TEST:n_phase] init_re_init  end dval=0.263504 drbv=0.263504 rdbd=1.000000 spdb=1.000000
2022/10/06 14:08:22.421 [motorRecord.cc:968  IOC_TEST:n_phase] init_record process_reason="callbackdata + soft limits" dval=0.263504 drbv=0.263504 rdbd=1.000000 spdb=1.000000 stat=0 msta=0x490a neverPolled=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:439  IOC_TEST:ns] init_record IOC_TEST:ns position=0.020313 encoderPos=0.020313 velocity=0.000000 MSTAstatus=0x0f28 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2022/10/06 14:08:22.421 [devMotorAsyn.c:185  IOC_TEST:ns] init_controller IOC_TEST:ns set encoder ratio=1.000000 status=0
2022/10/06 14:08:22.421 [devMotorAsyn.c:266  IOC_TEST:ns] update_soft_limits IOC_TEST:ns RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2022/10/06 14:08:22.421 [motorDevSup.c:327  IOC_TEST:ns] PositionRestoreNeeded IOC_TEST:ns rstm=2 dval=0.000000 drbv=0.020313 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.000078 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2022/10/06 14:08:22.421 [motorRecord.cc:782  IOC_TEST:ns] init_re_init start neverPolled=0 stat=17 nsta=0
2022/10/06 14:08:22.421 [motorRecord.cc:720  IOC_TEST:ns] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.000078
2022/10/06 14:08:22.421 [motorRecord.cc:833  IOC_TEST:ns] init_re_init  end dval=0.020313 drbv=0.020313 rdbd=0.100000 spdb=0.100000
2022/10/06 14:08:22.421 [motorRecord.cc:968  IOC_TEST:ns] init_record process_reason="callbackdata + soft limits" dval=0.020313 drbv=0.020313 rdbd=0.100000 spdb=0.100000 stat=0 msta=0xf28 neverPolled=0
2022/10/06 14:08:22.486 [motorRecord.cc:1627 IOC_TEST:h_phase] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
2022/10/06 14:08:22.486 [motorRecord.cc:1627 IOC_TEST:m_phase] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
2022/10/06 14:08:22.486 [motorRecord.cc:1627 IOC_TEST:s_phase] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
2022/10/06 14:08:22.486 [motorRecord.cc:1627 IOC_TEST:ns] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
iocRun: All initialization complete
# dbpf $(IOC):timing.SPAM 0
# dbpf $(IOC):phase.SPAM 0
# dbpf $(IOC):phys.SPAM 0
epicsEnvSet EPICS_DRIVER_PATH /home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0:/epics/base-7.0.6.1/require/4.0.0/siteMods
epicsEnvSet EPICS_DRIVER_PATH /home/anderssandstrom/sources/e3-ecmc/cellMods//base-7.0.6.1/require-4.0.0:/home/anderssandstrom/sources/e3-ecmccfg/cellMods//base-7.0.6.1/require-4.0.0:/epics/base-7.0.6.1/require/4.0.0/siteMods
# Set the IOC Prompt String One 
epicsEnvSet IOCSH_PS1 "mcag-dev-asm-02-2928 > "
#
[?1034hmcag-dev-asm-02-2928 > 2022/10/06 14:08:23.887 [motorRecord.cc:1510 IOC_TEST:m_phase] msta.Bits.RA_MOVING=0
2022/10/06 14:08:23.887 [motorRecord.cc:1530 IOC_TEST:m_phase] msta.Bits.RA_DONE=1
2022/10/06 14:08:23.887 [motorRecord.cc:1696 IOC_TEST:m_phase] motor is stopped dval=4.668272 drbv=-0.001920 pp=1 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x8000(EXTERNAL(Ex)) msta=0x492a
2022/10/06 14:08:23.887 [motorRecord.cc:1212 IOC_TEST:m_phase] mipClrBit STOP(St) old=EXTERNAL(Ex) new=EXTERNAL(Ex)
2022/10/06 14:08:23.887 [motorRecord.cc:1854 IOC_TEST:m_phase] mipSetVal old=EXTERNAL(Ex) new=''
2022/10/06 14:08:24.087 [motorRecord.cc:1212 IOC_TEST:m_phase] mipClrBit STOP(St) old='' new=''
2022/10/06 14:08:24.087 [motorRecord.cc:1627 IOC_TEST:m] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
2022/10/06 14:08:24.487 [motorRecord.cc:1510 IOC_TEST:h_phase] msta.Bits.RA_MOVING=0
2022/10/06 14:08:24.488 [motorRecord.cc:1530 IOC_TEST:h_phase] msta.Bits.RA_DONE=1
2022/10/06 14:08:24.488 [motorRecord.cc:1696 IOC_TEST:h_phase] motor is stopped dval=1.402648 drbv=-0.000178 pp=1 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x8000(EXTERNAL(Ex)) msta=0x492a
2022/10/06 14:08:24.488 [motorRecord.cc:1212 IOC_TEST:h_phase] mipClrBit STOP(St) old=EXTERNAL(Ex) new=EXTERNAL(Ex)
2022/10/06 14:08:24.488 [motorRecord.cc:1854 IOC_TEST:h_phase] mipSetVal old=EXTERNAL(Ex) new=''
2022/10/06 14:08:24.488 [motorRecord.cc:1627 IOC_TEST:h] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
2022/10/06 14:08:24.688 [motorRecord.cc:1212 IOC_TEST:h_phase] mipClrBit STOP(St) old='' new=''
2022/10/06 14:08:26.890 [motorRecord.cc:1510 IOC_TEST:s_phase] msta.Bits.RA_MOVING=0
2022/10/06 14:08:26.890 [motorRecord.cc:1530 IOC_TEST:s_phase] msta.Bits.RA_DONE=1
2022/10/06 14:08:26.890 [motorRecord.cc:1696 IOC_TEST:s_phase] motor is stopped dval=19.054129 drbv=0.001296 pp=1 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x8000(EXTERNAL(Ex)) msta=0x492a
2022/10/06 14:08:26.890 [motorRecord.cc:1212 IOC_TEST:s_phase] mipClrBit STOP(St) old=EXTERNAL(Ex) new=EXTERNAL(Ex)
2022/10/06 14:08:26.890 [motorRecord.cc:1854 IOC_TEST:s_phase] mipSetVal old=EXTERNAL(Ex) new=''
2022/10/06 14:08:27.090 [motorRecord.cc:1212 IOC_TEST:s_phase] mipClrBit STOP(St) old='' new=''
State 2: Power phase axis (axis ${AX_PHASE})
2022/10/06 14:08:30.694 [motorRecord.cc:1510 IOC_TEST:n_phase] msta.Bits.RA_MOVING=1
2022/10/06 14:08:30.694 [motorRecord.cc:1522 IOC_TEST:n_phase] msta.Bits.EA_POSITION power on=1
2022/10/06 14:08:30.694 [motorRecord.cc:1530 IOC_TEST:n_phase] msta.Bits.RA_DONE=0
2022/10/06 14:08:30.694 [motorRecord.cc:1627 IOC_TEST:n_phase] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
State 3: Phase axis enabled.. Change source of phys axis to ext
State 4: Move to 0 phase error
2022/10/06 14:08:34.898 [motorRecord.cc:1510 IOC_TEST:n_phase] msta.Bits.RA_MOVING=0
2022/10/06 14:08:34.898 [motorRecord.cc:1530 IOC_TEST:n_phase] msta.Bits.RA_DONE=1
2022/10/06 14:08:34.898 [motorRecord.cc:1696 IOC_TEST:n_phase] motor is stopped dval=0.263504 drbv=0.001014 pp=1 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x8000(EXTERNAL(Ex)) msta=0x492a
2022/10/06 14:08:34.898 [motorRecord.cc:1212 IOC_TEST:n_phase] mipClrBit STOP(St) old=EXTERNAL(Ex) new=EXTERNAL(Ex)
2022/10/06 14:08:34.898 [motorRecord.cc:1854 IOC_TEST:n_phase] mipSetVal old=EXTERNAL(Ex) new=''
2022/10/06 14:08:35.098 [motorRecord.cc:1212 IOC_TEST:n_phase] mipClrBit STOP(St) old='' new=''
2022/10/06 14:09:00.121 [motorRecord.cc:1627 IOC_TEST:s] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
