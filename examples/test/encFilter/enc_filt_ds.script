co##############################################################################
## Example config for filtering a encoder signal by use of data storage. 
## Note: This works ONLY aslong as the encoder signal is not over/under-flowing any bit limits (like from 0 to 65xxx)..
## Therefore, to reduce problem, if el5101, then use the 32 bit version of config.
## Tha basic principle:
## 1. Write the encoder position to data storage e cah cycle (ds_append_data())
## 2. Write the average of the data storage (ds_get_avg()) values to a simulated ethercat entry.
## 3. Link the simulated ethercat entry to the actpos in the axis config file.
##
## To avoid issues with over/underflow it might be possible to use a virtuel axis for the encoder value (without scaling).
## Then this ax<id>.actpos can be written to the data storage instead. See other example in this dir.  


##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg develop

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=develop"

##############################################################################
## Configure hardware

#Configure EL1018 digital input terminal
epicsEnvSet(ECMC_EC_SLAVE_NUM,                "1")
epicsEnvSet("SLAVE_INPUTS", ${ECMC_EC_SLAVE_NUM})
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL1018"

#Configure EL2808 digital output terminal
epicsEnvSet(ECMC_EC_SLAVE_NUM,                "2")
epicsEnvSet("SLAVE_OUTPUTS", ${ECMC_EC_SLAVE_NUM})
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=${ECMC_EC_SLAVE_NUM}, HW_DESC=EL2808"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "3")
epicsEnvSet("SLAVE_ENCODER", ${ECMC_EC_SLAVE_NUM})
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL5101_32bit,"

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "8")
epicsEnvSet("SLAVE_DRIVE", ${ECMC_EC_SLAVE_NUM})
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EL7037, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"


# ADDITIONAL SETUP
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_1,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_2,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_3,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_4,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_5,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_6,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_7,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},BO_8,1)"
# END of ADDITIONAL SETUP

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

##############################################################################
## AXIS 1
#
epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/el7037_enc_filt_ds_1.ax)

##############################################################################
## Data Storage: For encoder values
epicsEnvSet("ECMC_ID_DS_FILT",0)
epicsEnvSet("ECMC_FILT_SIZE", 10)
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=${ECMC_ID_DS_FILT}, DS_SIZE=${ECMC_FILT_SIZE}, SAMPLE_RATE_MS=100,DS_TYPE=2")

##############################################################################
## PLC 1: Implemnts a low pas filter. Writes filterend posiiton

# DS_FILT_ID = ID of ds to use as a filter id.
# PLC_ID     = ID of this PLC
# ENC_S_ID    = Slave id of encoder terminal
epicsEnvSet("ECMC_PLC_ID",0)
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=${ECMC_PLC_ID}, SAMPLE_RATE_MS=${ECMC_SAMPLE_RATE_MS},FILE=./plc/enc_filt_ds.plc, PLC_MACROS='PLC_ID=${ECMC_PLC_ID},ENC_S_ID=${SLAVE_ENCODER},DS_FILT_ID=${ECMC_ID_DS_FILT}'")

##############################################################################
############# Configure diagnostics:

ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"

# go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)

iocInit();
dbl > pvs.log
