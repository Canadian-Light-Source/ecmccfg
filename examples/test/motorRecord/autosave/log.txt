registerChannelProviderLocal firstTime true
#
# ------>-----> snip ----->------> 
#
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# The IOC is started at "2020-W34-Aug17-1431-03-CEST"
#
# Version information:
# European Spallation Source ERIC : iocsh.bash (0.5.1-81d1214.PID-26835)
#
# HOSTDISPLAY=""
# WINDOWID=""
# PWD="/home/dev/projects/e3-ecmccfg/ecmccfg-dev/examples/test/autosave"
# USER="dev"
# LOGNAME="dev"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/epics/base-7.0.3.1"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="3.1.2"
# E3_REQUIRE_LOCATION="/epics/base-7.0.3.1/require/3.1.2"
# E3_REQUIRE_BIN="/epics/base-7.0.3.1/require/3.1.2/bin"
# E3_REQUIRE_DB="/epics/base-7.0.3.1/require/3.1.2/db"
# E3_REQUIRE_DBD="/epics/base-7.0.3.1/require/3.1.2/dbd"
# E3_REQUIRE_INC="/epics/base-7.0.3.1/require/3.1.2/include"
# E3_REQUIRE_LIB="/epics/base-7.0.3.1/require/3.1.2/lib"
# E3_SITEAPPS_PATH="/epics/base-7.0.3.1/require/3.1.2/siteApps"
# E3_SITELIBS_PATH="/epics/base-7.0.3.1/require/3.1.2/siteLibs"
# E3_SITEMODS_PATH="/epics/base-7.0.3.1/require/3.1.2/siteMods"
# EPICS_DRIVER_PATH="/epics/base-7.0.3.1/require/3.1.2/siteMods:/epics/base-7.0.3.1/require/3.1.2/siteApps"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# PATH="/epics/base-7.0.3.1/require/3.1.2/bin:/epics/base-7.0.3.1/bin/linux-x86_64:/home/dev/programs/root/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/dev/.local/bin:/home/dev/bin"
# LD_LIBRARY_PATH="/epics/base-7.0.3.1/lib/linux-x86_64:/epics/base-7.0.3.1/require/3.1.2/lib/linux-x86_64:/epics/base-7.0.3.1/require/3.1.2/siteLibs/linux-x86_64:/home/dev/programs/root/lib/root:/home/dev/programs/root/lib/root"
#
# ------>-----> snip ----->------> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:81d1214-mcag-ep-26835"
#
# Enable an exit subroutine.
dbLoadRecords "/epics/base-7.0.3.1/db/softIocExit.db" "IOC=REQMOD:81d1214-mcag-ep-26835"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh.bash is executed.
epicsEnvSet E3_IOCSH_TOP "/home/dev/projects/e3-ecmccfg/ecmccfg-dev/examples/test/autosave"
# 
# Load require module, which has the version 3.1.2
# 
dlload /epics/base-7.0.3.1/require/3.1.2/lib/linux-x86_64/librequire.so
dbLoadDatabase /epics/base-7.0.3.1/require/3.1.2/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
# Set E3_CMD_TOP for the absolute path where mcu1025_autosave.script exists
epicsEnvSet E3_CMD_TOP "/home/dev/projects/e3-ecmccfg/ecmccfg-dev/examples/test/autosave"
#
iocshLoad 'mcu1025_autosave.script','IOC=IOC2'
##############################################################################
## Example config ESS crate of type MCU1025
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"IOC2")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"iocshLoad")
require ecmccfg master
Module ecmccfg version master found in /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/
Module ecmccfg has no library
Loading module info records for ecmccfg
require autosave 5.10.0
Module autosave version 5.10.0 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/autosave/5.10.0/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/autosave/5.10.0/lib/linux-x86_64/libautosave.so
Loaded autosave version 5.10.0
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/autosave/5.10.0/dbd/autosave.dbd
Calling function autosave_registerRecordDeviceDriver
Loading module info records for autosave
# Epics Motor record driver that will be used:
epicsEnvShow(ECMC_MR_MODULE)
ECMC_MR_MODULE is not an environment variable.
# run module startup.cmd (only needed at ESS  PSI auto call at require)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/startup.cmd, "IOC=IOC2,ECMC_VER=master,stream_VER=2.8.10"
################################################################################
on error halt
require ecmc        "master"
Module ecmc version master found in /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmc/master/
Module ecmc depends on asyn 4.36.0
Module asyn version 4.36.0 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/asyn/4.36.0/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/asyn/4.36.0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.36.0
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/asyn/4.36.0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1
Module exprtk version 1.2.1 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/exprtk/1.2.1/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/exprtk/1.2.1/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.1
Module motor version 7.0.1 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/motor/7.0.1/
Module motor depends on asyn 4.36.0
Module asyn version 4.36.0 already loaded
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/motor/7.0.1/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.1
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/motor/7.0.1/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmc/master/lib/linux-x86_64/libecmc.so
Loaded ecmc version master
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmc/master/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
require stream      "2.8.10"
Module stream version 2.8.10 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/stream/2.8.10/
Module stream depends on asyn 4.36.0
Module asyn version 4.36.0 already loaded
Module stream depends on calc 3.7.3
Module calc version 3.7.3 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/calc/3.7.3/
Module calc depends on sequencer 2.2.7
Module sequencer version 2.2.7 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/sequencer/2.2.7/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/sequencer/2.2.7/lib/linux-x86_64/libsequencer.so
Loaded sequencer version 2.2.7
sequencer has no dbd file
Loading module info records for sequencer
Module calc depends on sscan 2.11.3
Module sscan version 2.11.3 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/sscan/2.11.3/
Module sscan depends on sequencer 2.2.7
Module sequencer version 2.2.7 already loaded
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/sscan/2.11.3/lib/linux-x86_64/libsscan.so
Loaded sscan version 2.11.3
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/sscan/2.11.3/dbd/sscan.dbd
Calling function sscan_registerRecordDeviceDriver
Loading module info records for sscan
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/calc/3.7.3/lib/linux-x86_64/libcalc.so
Loaded calc version 3.7.3
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/calc/3.7.3/dbd/calc.dbd
Calling function calc_registerRecordDeviceDriver
Loading module info records for calc
Module stream depends on pcre 8.41.0
Module pcre version 8.41.0 found in /epics/base-7.0.3.1/require/3.1.2/siteMods/pcre/8.41.0/
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/pcre/8.41.0/lib/linux-x86_64/libpcre.so
Loaded pcre version 8.41.0
pcre has no dbd file
Loading module info records for pcre
Loading library /epics/base-7.0.3.1/require/3.1.2/siteMods/stream/2.8.10/lib/linux-x86_64/libstream.so
Loaded stream version 2.8.10
Loading dbd file /epics/base-7.0.3.1/require/3.1.2/siteMods/stream/2.8.10/dbd/stream.dbd
Calling function stream_registerRecordDeviceDriver
Loading module info records for stream
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'ecmcMotorRecord'='EthercatMC'", "require  EthercatMC 3.0.2 # Using EthercatMC motor record support.","# Using ecmcMotorRecord motor record support.")
# Using ecmcMotorRecord motor record support.
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_CONFIG_ROOT",     "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/")
epicsEnvSet("ECMC_CONFIG_DB",       "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/db/")
#epicsEnvSet("EthercatMC_DB",        "${EthercatMC_TEMPLATES}/")
epicsEnvSet("STREAM_PROTOCOL_PATH", ":/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/:/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/db")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("SM_PREFIX",            "IOC2:")    # colon added since IOC is _not_ PREFIX
epicsEnvSet("ECMC_PROC_HOOK",       "")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/initAll.cmd",1)
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/init.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               -2)
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/initAxis.cmd",1)
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/initAxis.cmd"
#==============================================================================
# initAxis.cmd
epicsEnvSet("ECMC_MOTOR_NAME",            "NOT SET")
epicsEnvSet("ECMC_R",                     "NOT SET")
epicsEnvSet("ECMC_AXIS_NO",               "NOT SET")
epicsEnvSet("ECMC_DESC",                  "NOT SET")
epicsEnvSet("ECMC_EGU",                   "NOT SET")       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "NOT SET")       # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "NOT SET")       # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "NOT SET")       # Entry for axis health output (example: ec0.s1.BO_1.0)
epicsEnvSet("ECMC_ENC_SCALE_NUM",         "NOT SET")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "NOT SET")
epicsEnvSet("ECMC_ENC_BITS",              "NOT SET")
epicsEnvSet("ECMC_ENC_TYPE",              "NOT SET")       # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "NOT SET")       # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_ENC_ABS_BITS",          "NOT SET")       # Absolute bit count (for absolute encoders) always least significant part
epicsEnvSet("ECMC_ENC_ABS_OFFSET",        "NOT SET")       # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_LATCHPOS",       "")              # Ethercat entry for latch position (only valid for home seq 11,12)
epicsEnvSet("ECMC_EC_ENC_LATCH_CONTROL",  "")              # Ethercat entry for latch control (only valid for home seq 11,12)
epicsEnvSet("ECMC_EC_ENC_LATCH_STATUS",   "")              # Ethercat entry for latch status (only valid for home seq 11,12)
epicsEnvSet("ECMC_DRV_SCALE_NUM",         "NOT SET")
epicsEnvSet("ECMC_DRV_SCALE_DENOM",       "NOT SET")
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "NOT SET")       # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "NOT SET")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "NOT SET")       # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "NOT SET")       # Ethercat entry for brake output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "NOT SET")       # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "NOT SET")  # Brake timing para2020/08/17 14:31:03.263 
ECMC Initializes.............
2020/08/17 14:31:03.264 ESS Open Source EtherCAT Motion Control Epics Module2020/08/17 14:31:03.264 
Mode: Configuration
2020/08/17 14:31:03.264 OK
2020/08/17 14:31:03.264 OK
2020/08/17 14:31:03.264 OK
meter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "NOT SET")  # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_VELO",                  "NOT SET")
epicsEnvSet("ECMC_JOG_VEL",               "NOT SET")
epicsEnvSet("ECMC_JAR",                   "NOT SET")       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "NOT SET")
epicsEnvSet("ECMC_EMERG_DECEL",           "NOT SET")       # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "NOT SET")
epicsEnvSet("ECMC_HOME_PROC",              "NOT SET")
epicsEnvSet("ECMC_HOME_POS",               "NOT SET")
epicsEnvSet("ECMC_HOME_VEL_TO",            "NOT SET")
epicsEnvSet("ECMC_HOME_VEL_FRM",           "NOT SET")
epicsEnvSet("ECMC_HOME_ACC",               "NOT SET")
epicsEnvSet("ECMC_HOME_DEC",               "NOT SET")
epicsEnvSet("ECMC_HOME_LATCH_COUNT_OFFSET","0")
epicsEnvSet("ECMC_CNTRL_KP",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KI",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KD",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KFF",             "NOT SET")
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "NOT SET")       #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "NOT SET")       #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "NOT SET")       #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "NOT SET")       #  Ethercat entry for external interlock input
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "NOT SET")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "NOT SET")
epicsEnvSet("ECMC_DXLM_ENABLE",           "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",    "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX",          "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "NOT SET")
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMCAXISFIELDINIT",      "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "IOC2:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# Update records in 10ms (100Hz)
epicsEnvSet("ECMC_SAMPLE_RATE_MS",       "10")
# Set EtherCAT frequency (defaults to 1000)
ecmcConfigOrDie "Cfg.SetSampleRate(1000)"
epicsEnvSet("ECMC_EC_SAMPLE_RATE" ,1000)
ecmcFileExist("/epics/base-7.0.3.1/req2020/08/17 14:31:03.265 OK
2020/08/17 14:31:03.265 OK
2020/08/17 14:31:03.266 OK
macLib: macro 0+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.268 OK
2020/08/17 14:31:03.270 OK
2020/08/17 14:31:03.271 OK
2020/08/17 14:31:03.271 OK
2020/08/17 14:31:03.271 OK
2020/08/17 14:31:03.271 OK
2020/08/17 14:31:03.272 OK
2020/08/17 14:31:03.272 OK
2020/08/17 14:31:03.272 OK
macLib: macro 1+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
uire/3.1.2/siteMods/ecmccfg/master/addMaster.cmd",1)
iocshLoad "/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addMaster.cmd", "MASTER_ID=0"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "0")
# Claim master
ecmcConfigOrDie "Cfg.EcSetMaster(0)"
epicsEnvSet("ECMCCFG_INIT" ,"#")
##############################################################################
## Configure hardware:
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcMCU1025.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcMCU1025.cmd
############################################################
############# MCU1025:
#Configure EK1100 coupler terminal
epicsEnvSet(ECMC_EC_SLAVE_NUM,0)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=0, HW_DESC=EK1100"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "0")
epicsEnvSet("HW_DESC",            "EK1100")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEK1100.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEK1100.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EK1100")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x044c2c52")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,0,0x2,0x044c2c52)"
ecmcConfigOrDie "Cfg.EcAddSlave(0,0,0x2,0x044c2c52)"
ecmcFileExist(ecmcEK1100.substitutions,1,1)
dbLoadTemplate(ecmcEK1100.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=0,HWTYPE=EK1100,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
#Configure EL1018 digital input terminal
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "0+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=1, HW_DESC=EL1018"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "1")
epicsEnvSet("HW_DESC",            "EL1018")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL1018.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL1018.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1018")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x03fa3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,1,0x2,0x03fa3052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x03fa3052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1018.substitutions,1,1)
dbLoadTemplate(ecmcEL1018.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=1,HWTYPE=EL1018,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
#Configure EL2808 digital output terminal
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "1+1")
epicsEnvShow("ECMC_EC_SLAVE_NUM")
ECMC_EC_SLAVE_NUM=2
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=2, HW_DESC=EL2808"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "2")
epicsEnvSet("HW_DESC",            "EL2808")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/mast2020/08/17 14:31:03.275 OK
2020/08/17 14:31:03.275 OK
2020/08/17 14:31:03.275 OK
2020/08/17 14:31:03.275 OK
2020/08/17 14:31:03.275 OK
2020/08/17 14:31:03.275 OK
2020/08/17 14:31:03.276 OK
2020/08/17 14:31:03.276 OK
2020/08/17 14:31:03.276 OK
macLib: macro 2+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.278 OK
2020/08/17 14:31:03.303 OK
2020/08/17 14:31:03.303 OK
2020/08/17 14:31:03.304 OK
2020/08/17 14:31:03.304 OK
2020/08/17 14:31:03.304 OK
macLib: macro 3+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.307 OK
2020/08/17 14:31:03.307 OK
2020/08/17 14:31:03.307 OK
2020/08/17 14:31:03.307 OK
2020/08/17 14:31:03.307 OK
2020/08/17 14:31:03.308 OK
2020/08/17 14:31:03.308 OK
2020/08/17 14:31:03.308 OK
er/ecmcEL2808.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL2808.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2808")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0af83052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,2,0x2,0x0af83052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1604,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1605,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1606,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x0af83052,1,0,0x1607,0x7070,0x1,1,BO_8)"
ecmcFileExist(ecmcEL2808.substitutions,1,1)
dbLoadTemplate(ecmcEL2808.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=2,HWTYPE=EL2808,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
# Save the slave number for later
epicsEnvSet("ECMC_EC_SLAVE_NUM_DIG_OUT", "2")
#Configure EL5002 2-channel SSI encoder terminal, motor 1
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "2+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=3, HW_DESC=EL5002"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "3")
epicsEnvSet("HW_DESC",            "EL5002")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL5002")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x138a3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,3,0x2,0x138a3052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(3,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x138a3052,2,3,0x1a00,0x6000,0x1,16,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x138a3052,2,3,0x1a00,0x6000,0x11,32,CH1_VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x138a3052,2,3,0x1a01,0x6010,0x1,16,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x138a3052,2,3,0x1a01,0x6010,0x11,32,CH2_VALUE)"
ecmcFileExist(ecmcEL5002.substitutions,1,1)
dbLoadTemplate(ecmcEL5002.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=3,HWTYPE=EL5002,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
#Configure Baumer encoder for EL5002 2-channel SSI encoder terminal (Channel 1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/applySlaveConfig.cmd "CONFIG=-Encoder-ch1-Baumer-BMMH30D1G24C1213P55"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002-Encoder-ch1-Baumer-BMMH30D1G24C1213P55.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002-Encoder-ch1-Baumer-BMMH30D1G24C1213P55.cmd
epicsEnvSet("ECMC_EC_SDO_INDEX"               "0x8000")     # CH1=0x8000. CH2=0x8010
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002-Encoder-Baumer-BMMH30D1G24C1213P55.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x1,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x2,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x3,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x4,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x6,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x9,3,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0xF,2,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8000,0x11,27,2)"
ecmcConfigOrDie "Cfg.E2020/08/17 14:31:03.308 OK
2020/08/17 14:31:03.309 OK
2020/08/17 14:31:03.309 OK
2020/08/17 14:31:03.309 OK
2020/08/17 14:31:03.309 OK
2020/08/17 14:31:03.309 OK
2020/08/17 14:31:03.309 OK
2020/08/17 14:31:03.310 OK
2020/08/17 14:31:03.310 OK
2020/08/17 14:31:03.310 OK
2020/08/17 14:31:03.311 OK
2020/08/17 14:31:03.311 OK
2020/08/17 14:31:03.311 OK
macLib: macro 4+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.313 OK
2020/08/17 14:31:03.313 OK
2020/08/17 14:31:03.314 OK
2020/08/17 14:31:03.314 OK
2020/08/17 14:31:03.314 OK
2020/08/17 14:31:03.314 OK
2020/08/17 14:31:03.314 OK
2020/08/17 14:31:03.314 OK
cAddSdo(3,0x8000,0x12,25,2)"
#Configure Baumer encoder for EL5002 2-channel SSI encoder terminal (Channel 2)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/applySlaveConfig.cmd "CONFIG=-Encoder-ch2-Baumer-BMMH30D1G24C1213P55"
#===============================================================================
# applySlaveConfig.cmd
# Arguments: CONFIG
# apply config ${CONFIG} for ${HW_DESC} at the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002-Encoder-ch2-Baumer-BMMH30D1G24C1213P55.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002-Encoder-ch2-Baumer-BMMH30D1G24C1213P55.cmd
epicsEnvSet("ECMC_EC_SDO_INDEX"               "0x8010")     # CH1=0x8000. CH2=0x8010
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL5002-Encoder-Baumer-BMMH30D1G24C1213P55.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x1,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x2,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x3,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x4,0,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x6,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x9,3,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0xF,2,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x11,27,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(3,0x8010,0x12,25,2)"
# Configure EL9505 Power supply terminal 5V
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "3+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=4, HW_DESC=EL9505"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "4")
epicsEnvSet("HW_DESC",            "EL9505")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL9505.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL9505.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL9505")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x25213052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,4,0x2,0x25213052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x25213052,2,0,0x1a00,0x6000,0x1,1,POWER_OK)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x25213052,2,0,0x1a00,0x6000,0x2,1,OVERLOAD)"
ecmcFileExist(ecmcEL9505.substitutions,1,1)
dbLoadTemplate(ecmcEL9505.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=4,HWTYPE=EL9505,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
# Configure EL1252 digital input terminal
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "4+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=5, HW_DESC=EL1252"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "5")
epicsEnvSet("HW_DESC",            "EL1252")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL1252.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL1252.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1252")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04e43052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,5,0x2,0x04e43052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,0,0x1a01,0x6000,0x2,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,1,0x1a13,0x1d09,0xae,8,CH1_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,1,0x1a13,0x1d09,0xaf,8,CH2_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,1,0x1a13,0x1d09,0xb0,64,CH1_LATCH_POS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,1,0x1a13,0x1d09,0xb8,64,CH1_LATCH_NEG)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2,0x04e43052,2,1,0x1a13,0x1d09,0xc0,64,CH2_LATCH_POS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(5,0x2020/08/17 14:31:03.315 OK
macLib: macro 5+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.318 OK
2020/08/17 14:31:03.318 OK
2020/08/17 14:31:03.318 OK
macLib: macro 6+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.320 OK
2020/08/17 14:31:03.375 OK
2020/08/17 14:31:03.375 OK
2020/08/17 14:31:03.375 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
2020/08/17 14:31:03.376 OK
macLib: macro 7+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2,0x04e43052,2,1,0x1a13,0x1d09,0xc0,64,CH2_LATCH_NEG)"
ecmcFileExist(ecmcEL1252.substitutions,1,1)
dbLoadTemplate(ecmcEL1252.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=5,HWTYPE=EL1252,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
# Configure EL9410 Power supply with refresh of E-Bus.
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "5+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd, "SLAVE_ID=6, HW_DESC=EL9410"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "6")
epicsEnvSet("HW_DESC",            "EL9410")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL9410.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL9410.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL9410")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x24c23052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,6,0x2,0x24c23052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(6,0x2,0x24c23052,2,0,0x1a00,0x6000,0x1,1,EBUS_UNDERVOLTAGE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(6,0x2,0x24c23052,2,0,0x1a01,0x6000,0x1,1,POWER_UNDERVOLTAGE)"
ecmcFileExist(ecmcEL9410.substitutions,1,1)
dbLoadTemplate(ecmcEL9410.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=6,HWTYPE=EL9410,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
#Configure EL7037 stepper drive terminal, motor 1
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "6+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=7, HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST4118L1804-B"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "7")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd "SLAVE_ID=7, HW_DESC=EL7037"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "7")
epicsEnvSet("HW_DESC",            "EL7037")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,7,0x2,0x1b7d3052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(7,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=7,HWTYPE=EL7037,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/epics/base-7.0.3.1/require/3.2020/08/17 14:31:03.378 OK
2020/08/17 14:31:03.378 OK
2020/08/17 14:31:03.378 OK
2020/08/17 14:31:03.378 OK
2020/08/17 14:31:03.378 OK
2020/08/17 14:31:03.379 OK
2020/08/17 14:31:03.379 OK
2020/08/17 14:31:03.435 OK
2020/08/17 14:31:03.435 OK
2020/08/17 14:31:03.435 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
2020/08/17 14:31:03.436 OK
macLib: macro 8+1 is undefined (expanding string epicsEnvSet("SLAVE_ID",           "$(${ECMC_EC_SLAVE_NUM}+1)"))
2020/08/17 14:31:03.438 OK
2020/08/17 14:31:03.438 OK
2020/08/17 14:31:03.438 OK
2020/08/17 14:31:03.438 OK
2020/08/17 14:31:03.438 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
2020/08/17 14:31:03.439 OK
1.2/siteMods/ecmccfg/master/ecmcEL7037-Motor-Nanotec-ST4118L1804-B.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037-Motor-Nanotec-ST4118L1804-B.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x2,500,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x3,2400,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x4,175,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0xA,330,2)"
#Configure EL7037 stepper drive terminal, motor 2
ecmcEpicsEnvSetCalc(ECMC_EC_SLAVE_NUM, "7+1")
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=8, HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST4118L1804-B"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "8")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addSlave.cmd "SLAVE_ID=8, HW_DESC=EL7037"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "8")
epicsEnvSet("HW_DESC",            "EL7037")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,8,0x2,0x1b7d3052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(8,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=8,HWTYPE=EL7037,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037-Motor-Nanotec-ST4118L1804-B.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmcEL7037-Motor-Nanotec-ST4118L1804-B.cmd
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x1,1000,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x2,500,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x3,2400,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x4,175,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0xA,330,2)"
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"
# ADDITIONAL SETUP
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_1,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_2,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_3,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_4,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_5,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_6,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(2,BO_7,1)"
ecmcConfigOrDie "Cfg.WriteEcEntr2020/08/17 14:31:03.439 OK
yIDString(2,BO_8,1)"
# END of ADDITIONAL SETUP
##############################################################################
## AXIS 1
#
epicsEnvSet("DEV",      "IOC2")
iocshLoad (/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/linear_1.ax)
#==============================================================================
# configureAxis.cmd
epicsEnvSet("ECMC_PREFIX"      "IOC2:")
ecmcFileExist("./cfg/linear_1.ax",1)
iocshLoad ./cfg/linear_1.ax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "Axis1")
epicsEnvSet("ECMC_R",                     "Axis1-")
epicsEnvSet("ECMC_AXIS_NO",               "1")
epicsEnvSet("ECMC_DESC",                  "MCU1025 Lower Axis (1)")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.BO_1.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE>0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "-60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "4096")
epicsEnvSet("ECMC_ENC_BITS"               "25")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "25")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "25")                       # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "-100")                     # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s3.CH1_VALUE")         # Ethercat entry for actual position input (encoder)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                        # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "600.0")                    # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                  # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s7.STM_CONTROL.0")     # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s7.STM_STATUS.1")      # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s7.VELOCITY_SETPOINT") # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s7.STM_CONTROL.2")     # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                         # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                   # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                   # Brake timing parameter in cycles (default 1kHz)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "0.1")
epicsEnvSet("ECMC_EMERG_DECEL",           "0.1")             # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "0.001")
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
#Controll2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.441 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
er
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s1.BI_2.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s1.BI_1.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s1.BI_3.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s1.ONE.0")              #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-50")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "80")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addAxis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcConfigOrDie "Cfg.CreateAxis(1,1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.health")"
ecmcConfigOrDie "Cfg.SetAxisModRange(1, 0)"
ecmcConfigOrDie "Cfg.SetAxisModType(1, 0)"
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(1,0.1)"
ecmcConfigOrDie "Cfg.SetAxisVelAccDecTime(1,5.0,0.1)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelTwordsCam(1,5)"
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(1,4)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(1,15.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(1,0.02)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(1,0.0)"
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(1,1.0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s3.CH1_VALUE,"ax1.enc.actpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(1,0)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(1,4096)"
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(1,-60)"
ecmcConfigOrDie "Cfg.SetAxisEncType(1,1)"
ecmcConfigOrDie "Cfg.SetAxisEncBits(1,25)"
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(1,25)"
ecmcConfigOrDie "Cfg.SetAxisEncOffset(1,-100)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchpos")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(1,0)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.STM_CONTROL.0,"ax1.drv.control")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.STM_STATUS.1,"ax1.drv.status")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.VELOCITY_SETPOINT,"ax1.drv.velocity")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.drv.brake")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.STM_CONTROL.2,"ax1.drv.reducetorque")"
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(1,32768.0)"
ecmcConfigOrD2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.442 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.443 OK
2020/08/17 14:31:03.444 OK
2020/08/17 14:31:03.444 OK
2020/08/17 14:31:03.444 ecmcMotorRecord:: setIntegerParam(1 motorPowerAutoOnOff_)=2
2020/08/17 14:31:03.444 ecmcMotorRecord:: setDoubleParam(1 motorPowerOnDelay_)=6
2020/08/17 14:31:03.444 ecmcMotorRecord:: setDoubleParam(1 motorPowerOffDelay_=-1
2020/08/17 14:31:03.444 ecmcMotorRecord:: udateMotorLimitsRO(1) enabledHighAndLow=1 valid=1 fValueHigh=80 fValueLow=-50
2020/08/17 14:31:03.444 ecmcMotorRecord:: connected(1)
2020/08/17 14:31:03.444 ecmcMotorRecord:: initialPoll(1) status=0
ie "Cfg.SetAxisDrvScaleNum(1,600.0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(1,0)"
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(1,0)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(1,-50)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(1,1)"
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(1,80)"
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(1,1)"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s1.BI_2.0,"ax1.mon.lowlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s1.BI_1.0,"ax1.mon.highlim")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s1.BI_3.0,"ax1.mon.homesensor")"
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s1.ONE.0,"ax1.mon.extinterlock")"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(1,0.1)"
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(1,0.5)"
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(1,100)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(1,100.0)"
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(1,1)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(1,200)"
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(1,100)"
ecmcMotorRecordCreateAxis(MCU1, "1", "6", "stepSize=0.001")
ecmcFileExist(ecmcMotorRecord.template,1,1)
dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC2:, MOTOR_NAME=Axis1, MOTOR_PORT=MCU1, AXIS_NO=1, DESC=MCU1025 Lower Axis (1), EGU=mm, PREC=3, VELO=5.0, JVEL=5, JAR=0.0, ACCL=0.1, MRES=0.001, RDBD=0.1, DLLM=-50, DHLM=80, HOMEPROC=3 ")
epicsEnvSet("ECMCAXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC2:, MOTOR_NAME=Axis1, MOTOR_PORT=MCU1, AXIS_NO=1,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
ecmcFileExist("ecmcExpression.db",1,1)
dbLoadRecords("ecmcExpression.db", "PORT=MC_CPU1,A=0,Index=1,Name=IOC2:Axis1")
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC2:,AXIS_NAME=Axis1,AXIS_NO=1,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2")
ecmcFileExist(/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsE2020/08/17 14:31:03.447 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.448 OK
2020/08/17 14:31:03.449 epicsMutex pthread_mutex_unlock epicsMutexOsdUnlock failed: error Operation not permitted
INFO: Locking memory
2020/08/17 14:31:03.464 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000011
2020/08/17 14:31:03.464 ecmcMotorRecord:: poll(1) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2020/08/17 14:31:03.464 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2020/08/17 14:31:03.474 Starting up EtherCAT bus: 0 second(s). Max wait time 30 second(s).
2020/08/17 14:31:03.550 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:501: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2020/08/17 14:31:03.550 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:181: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 0: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 1: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 2: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 3: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 4: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 5: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 6: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 7: Not operational (0x24011).
2020/08/17 14:31:03.550 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.551 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 8: Not operational (0x24011).
2020/08/17 14:31:03.551 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/08/17 14:31:03.671 ecmcMotorRecord:: poll(1) homed=1
2020/08/17 14:31:03.671 ecmcMotorRecord:: poll(1) LLS=0
2020/08/17 14:31:03.671 ecmcMotorRecord:: poll(1) HLS=0
2020/08/17 14:31:03.671 ecmcMotorRecord:: poll(1) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=-100 time=0.000048
2020/08/17 14:31:03.671 ecmcMotorRecord:: poll(1) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2020/08/17 14:31:03.671 ecmcMotorRecord:: sErrorMessage(1)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2020/08/17 14:31:03.671 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2020/08/17 14:31:04.474 Starting up EtherCAT bus: 1 second(s). Max wait time 30 second(s).
2020/08/17 14:31:04.553 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/17 14:31:04.553 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/17 14:31:04.553 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/08/17 14:31:04.672 ecmcMotorRecord:: poll(1) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2020/08/17 14:31:04.672 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=0 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2020/08/17 14:31:06.474 EtherCAT bus started!
2020/08/17 14:31:06.474 OK
2020/08/17 14:31:06.474 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocBuild (0). Allow callbacks: true.
Starting iocInit
2020/08/17 14:31:06.474 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtBeginning (1). Allow callbacks: true.
2020/08/17 14:31:06.478 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCallbackInit (2). Allow callbacks: true.
2020/08/17 14:31:06.480 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaLinkInit (3). Allow callbacks: true.
2020/08/17 14:31:06.480 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDrvSup (4). Allow callbacks: true.
2020/08/17 14:31:06.480 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitRecSup (5). Allow callbacks: true.
2020/08/17 14:31:06.481 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDevSup (6). Allow callbacks: true.
2020/08/17 14:31:06.482 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_1 linked to record (asyn reason 1).
2020/08/17 14:31:06.482 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_2 linked to record (asyn reason 2).
2020/08/17 14:31:06.482 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_3 linked to record (asyn reason 3).
2020/08/17 14:31:06.483 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_4 linked to record (asyn reason 4).
2020/08/17 14:31:06.483 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_5 linked to record (asyn reason 5).
2020/08/17 14:31:06.483 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_6 linked to record (asyn reason 6).
2020/08/17 14:31:06.483 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_7 linked to record (asyn reason 7).
2020/08/17 14:31:06.483 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BO_8 linked to record (asyn reason 8).
2020/08/17 14:31:06.485 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.reset linked to record (asyn reason 9).
2020/08/17 14:31:06.485 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.STM_CONTROL linked to record (asyn reason 10).
2020/08/17 14:31:06.485 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.VELOCITY_SETPOINT linked to record (asyn reason 11).
2020/08/17 14:31:06.485 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.ENC_CONTROL linked to record (asyn reason 12).
2020/08/17 14:31:06.486 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.VALUE linked to record (asyn reason 13).
2020/08/17 14:31:06.486 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.STM_CONTROL linked to record (asyn reason 14).
2020/08/17 14:31:06.486 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.VELOCITY_SETPOINT linked to record (asyn reason 15).
2020/08/17 14:31:06.487 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.ENC_CONTROL linked to record (asyn reason 16).
2020/08/17 14:31:06.488 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.VALUE linked to record (asyn reason 17).
2020/08/17 14:31:06.489 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.CH1_STATUS linked to record (asyn reason 18).
2020/08/17 14:31:06.489 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.CH2_STATUS linked to record (asyn reason 19).
2020/08/17 14:31:06.489 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.CH1_STATUS linked to record (asyn reason 20).
2020/08/17 14:31:06.489 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.CH2_STATUS linked to record (asyn reason 21).
2020/08/17 14:31:06.490 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.STM_STATUS linked to record (asyn reason 22).
2020/08/17 14:31:06.490 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.ENC_STATUS linked to record (asyn reason 23).
2020/08/17 14:31:06.490 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.STM_STATUS linked to record (asyn reason 24).
2020/08/17 14:31:06.491 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.ENC_STATUS linked to record (asyn reason 25).
2020/08/17 14:31:06.491 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.diagnostic linked to record (asyn reason 26).
2020/08/17 14:31:06.491 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.plc.expression linked to record (asyn reason 27).
2020/08/17 14:31:06.492 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.msg linked to record (asyn reason 28).
2020/08/17 14:31:06.492 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.updated linked to record (asyn reason 29).
2020/08/17 14:31:06.492 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s0.slavestatus linked to record (asyn reason 30).
2020/08/17 14:31:06.492 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.slavestatus linked to record (asyn reason 31).
2020/08/17 14:31:06.493 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.slavestatus linked to record (asyn reason 32).
2020/08/17 14:31:06.493 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.slavestatus linked to record (asyn reason 33).
2020/08/17 14:31:06.494 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.slavestatus linked to record (asyn reason 34).
2020/08/17 14:31:06.494 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.slavestatus linked to record (asyn reason 35).
2020/08/17 14:31:06.495 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s6.slavestatus linked to record (asyn reason 36).
2020/08/17 14:31:06.495 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.slavestatus linked to record (asyn reason 37).
2020/08/17 14:31:06.495 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.slavestatus linked to record (asyn reason 38).
2020/08/17 14:31:06.496 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.status linked to record (asyn reason 39).
2020/08/17 14:31:06.497 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.masterstatus linked to record (asyn reason 40).
2020/08/17 14:31:06.497 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.slavecounter linked to record (asyn reason 41).
2020/08/17 14:31:06.498 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.memmapcounter linked to record (asyn reason 42).
2020/08/17 14:31:06.498 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainfailcountertotal linked to record (asyn reason 43).
2020/08/17 14:31:06.499 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.entrycounter linked to record (asyn reason 44).
2020/08/17 14:31:06.499 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainstatus linked to record (asyn reason 45).
2020/08/17 14:31:06.500 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_1 linked to record (asyn reason 46).
2020/08/17 14:31:06.501 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_2 linked to record (asyn reason 47).
2020/08/17 14:31:06.502 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_3 linked to record (asyn reason 48).
2020/08/17 14:31:06.503 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_4 linked to record (asyn reason 49).
2020/08/17 14:31:06.504 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_5 linked to record (asyn reason 50).
2020/08/17 14:31:06.505 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_6 linked to record (asyn reason 51).
2020/08/17 14:31:06.506 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_7 linked to record (asyn reason 52).
2020/08/17 14:31:06.506 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.BI_8 linked to record (asyn reason 53).
2020/08/17 14:31:06.509 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.POWER_OK linked to record (asyn reason 54).
2020/08/17 14:31:06.510 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.OVERLOAD linked to record (asyn reason 55).
2020/08/17 14:31:06.511 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.BI_1 linked to record (asyn reason 56).
2020/08/17 14:31:06.512 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.BI_2 linked to record (asyn reason 57).
2020/08/17 14:31:06.514 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s6.EBUS_UNDERVOLTAGE linked to record (asyn reason 58).
2020/08/17 14:31:06.515 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s6.POWER_UNDERVOLTAGE linked to record (asyn reason 59).
2020/08/17 14:31:06.516 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.enable linked to record (asyn reason 60).
2020/08/17 14:31:06.517 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.firstscan linked to record (asyn reason 61).
2020/08/17 14:31:06.519 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s0.ONE linked to record (asyn reason 62).
2020/08/17 14:31:06.521 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s0.ZERO linked to record (asyn reason 63).
2020/08/17 14:31:06.522 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.ONE linked to record (asyn reason 64).
2020/08/17 14:31:06.523 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.ZERO linked to record (asyn reason 65).
2020/08/17 14:31:06.524 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.ONE linked to record (asyn reason 66).
2020/08/17 14:31:06.525 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.ZERO linked to record (asyn reason 67).
2020/08/17 14:31:06.527 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.ONE linked to record (asyn reason 68).
2020/08/17 14:31:06.528 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.ZERO linked to record (asyn reason 69).
2020/08/17 14:31:06.529 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.ONE linked to record (asyn reason 70).
2020/08/17 14:31:06.530 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.ZERO linked to record (asyn reason 71).
2020/08/17 14:31:06.532 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.ONE linked to record (asyn reason 72).
2020/08/17 14:31:06.533 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.ZERO linked to record (asyn reason 73).
2020/08/17 14:31:06.534 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s6.ONE linked to record (asyn reason 74).
2020/08/17 14:31:06.535 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s6.ZERO linked to record (asyn reason 75).
2020/08/17 14:31:06.537 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.ONE linked to record (asyn reason 76).
2020/08/17 14:31:06.538 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.ZERO linked to record (asyn reason 77).
2020/08/17 14:31:06.540 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.ONE linked to record (asyn reason 78).
2020/08/17 14:31:06.541 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.ZERO linked to record (asyn reason 79).
2020/08/17 14:31:06.543 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.CH1_VALUE linked to record (asyn reason 80).
2020/08/17 14:31:06.544 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.CH2_VALUE linked to record (asyn reason 81).
2020/08/17 14:31:06.545 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.CH1_LATCH_POS linked to record (asyn reason 82).
2020/08/17 14:31:06.547 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.CH1_LATCH_NEG linked to record (asyn reason 83).
2020/08/17 14:31:06.548 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.CH2_LATCH_POS linked to record (asyn reason 84).
2020/08/17 14:31:06.550 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s5.CH2_LATCH_NEG linked to record (asyn reason 85).
2020/08/17 14:31:06.553 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.POSITION linked to record (asyn reason 86).
2020/08/17 14:31:06.555 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.LATCH_POSITION linked to record (asyn reason 87).
2020/08/17 14:31:06.560 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.POSITION linked to record (asyn reason 88).
2020/08/17 14:31:06.561 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.LATCH_POSITION linked to record (asyn reason 89).
2020/08/17 14:31:06.565 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.actpos linked to record (asyn reason 90).
2020/08/17 14:31:06.567 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.setpos linked to record (asyn reason 91).
2020/08/17 14:31:06.569 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.poserr linked to record (asyn reason 92).
2020/08/17 14:31:06.570 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.error linked to record (asyn reason 93).
2020/08/17 14:31:06.572 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.appmode linked to record (asyn reason 94).
2020/08/17 14:31:06.574 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.id linked to record (asyn reason 95).
2020/08/17 14:31:06.575 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.min linked to record (asyn reason 96).
2020/08/17 14:31:06.577 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.max linked to record (asyn reason 97).
2020/08/17 14:31:06.578 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.min linked to record (asyn reason 98).
2020/08/17 14:31:06.580 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.max linked to record (asyn reason 99).
2020/08/17 14:31:06.582 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.min linked to record (asyn reason 100).
2020/08/17 14:31:06.583 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.max linked to record (asyn reason 101).
2020/08/17 14:31:06.585 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.min linked to record (asyn reason 102).
2020/08/17 14:31:06.587 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.max linked to record (asyn reason 103).
2020/08/17 14:31:06.588 ecmcMotorRecord:: setIntegerParam(1 motorUpdateStatus_)=1
2020/08/17 14:31:06.588 devMotorAsyn::update_soft_limits IOC2:Axis1 RawHLM_RO=80.000000 RawLLM_RO=-50.000000 valid=1 DHLM_RO=80.000000 DLLM_RO=-50.000000
2020/08/17 14:31:06.588 ecmcMotorRecord:: setIntegerParam(1 motorUpdateStatus_)=0
reboot_restore: entry for file 'auto_positions.sav'
reboot_restore: Found filename 'auto_positions.sav' in restoreFileList.
*** restoring from './save/auto_positions.sav' at initHookState 7 (after record/device init) ***
dbrestore:reboot_restore: header line '# autosave R5.3	Automatically generated - DO NOT MODIFY - 200817-143048
'
dbrestore:reboot_restore: writing boot-backup file './save/auto_positions.sav_200817-143106'.
reboot_restore: done with file 'auto_positions.sav'

2020/08/17 14:31:06.598 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDatabase (7). Allow callbacks: true.
2020/08/17 14:31:06.599 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterFinishDevSup (8). Allow callbacks: true.
2020/08/17 14:31:07.110 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterScanInit (9). Allow callbacks: true.
2020/08/17 14:31:07.110 ecmcMotorRecord:: setDoubleParam(1 HomPos_)=0.000000
2020/08/17 14:31:07.111 ecmcMotorRecord:: setIntegerParam(1 HomProc_)=3 motorNotHomedProblem=0
2020/08/17 14:31:07.111 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitialProcess (10). Allow callbacks: true.
2020/08/17 14:31:07.114 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (11). Allow callbacks: true.
2020/08/17 14:31:07.114 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocBuilt (12). Allow callbacks: true.
2020/08/17 14:31:07.121 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocRun (13). Allow callbacks: true.
2020/08/17 14:31:07.121 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterDatabaseRunning (14). Allow callbacks: true.
2020/08/17 14:31:07.121 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInterruptAccept (21). Allow callbacks: true.
2020/08/17 14:31:07.121 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaServerRunning (15). Allow callbacks: true.
2020/08/17 14:31:07.121 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (22). Allow callbacks: true.
iocRun: All initialization complete
2020/08/17 14:31:07.130 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocRunning (16). Allow callbacks: true.
nvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvSet("ECMC_PREFIX"      "IOC2:")
##############################################################################
## AXIS 2
#
#epicsEnvSet("DEV",      "$(IOC)")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/linear_2.ax)
##############################################################################
############# Configure diagnostics:
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"
# go active
iocshLoad (/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/setAppMode.cmd)
#==============================================================================
# setAppMode.cmd
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/generalDiagnostics.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/generalDiagnostics.cmd
#==============================================================================
# generalDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcFileExist("/epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/general.cmd",1)
iocshLoad /epics/base-7.0.3.1/require/3.1.2/siteMods/ecmccfg/master/general.cmd
#==============================================================================
# general.cmd
ecmcFileExist("ecmcEc.db",1,1)
dbLoadRecords("ecmcEc.db","P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,T_SMP_MS=10,TSE=-2")
ecmcFileExist("ecmcGeneral.db",1,1)
dbLoadRecords("ecmcGeneral.db","P=IOC2:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2,ECMC_PROC_HOOK=")
# Nice commands for info ecmcReport <level> or asynReport <level>
# ecmcReport 3
ecmcConfigOrDie "Cfg.SetAppMode(1)"
##############################################################################
############# Configure autosave:
save_restoreSet_Debug(1)
save_restoreSet_IncompleteSetsOk(1)
save_restoreSet_DatedBackupFiles(1)
set_savefile_path(".", "save");
set_requestfile_path(".","req")
set_pass1_restoreFile("auto_positions.sav")
save_restoreSet_NumSeqFiles(3)
save_restoreSet_SeqPeriodInSeconds(600)
save_restoreSet_RetrySeconds(60)
save_restoreSet_CAReconnect(1)
save_restoreSet_CallbackTimeout(-1)
iocInit()
############################################################################
## EPICS R7.0.3.1-E3-7.0.3.1-patch
## EPICS Base built Jan  7 2020
############################################################################
../motorApp/MotorSrc/motorRecord.cc:892 IOC2:Axis1 init_record set UDF=FALSE
../motorApp/MotorSrc/motorRecord.cc:748 IOC2:Axis1 init_re_init udf=0 stat=17 nsta=0
../motorApp/MotorSrc/motorRecord.cc:684 IOC2:Axis1 enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.001000
../motorApp/MotorSrc/motorRecord.cc:4095 IOC2:Axis1 pmr->dhlm=80 maxValue=80
../motorApp/MotorSrc/motorRecord.cc:4158 IOC2:Axis1 pmr->dllm=-50 minValue=-50
../motorApp/MotorSrc/motorRecord.cc:922 IOC2:Axis1 init_record process_reason=2 dval=7.416992 drbv=7.416992 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 msta=0x4902
fopen_and_check: checkFile returned 0x27f08d0
create_monitor_set("auto_positions.req", 5, "P=IOC2")
# Set the IOC Prompt String One 
epicsEnvSet IOCSH_PS1 "81d1214-mcag-ep-26835 > "
#
[?1034h81d1214-mcag-ep-26835 > auto_positions.sav: 1 of 1 PV's connected
../motorApp/MotorSrc/motorRecord.cc:1788 IOC2:Axis1 doRetryOrDone dval=-7.993164 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 preferred_dir=1 relpos=-15.278320 relbpos=-15.278320 drbv=7.285156
../motorApp/MotorSrc/motorRecord.cc:1809 IOC2:Axis1 mipSetBit 'Mo' old='' new='Mo'
2020/08/17 14:31:17.677 ecmcMotorRecord:: setClosedLoop(1)=1
2020/08/17 14:31:18.177 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=1 atTarget=0 wf=3 ENC=3.35471e+07 fPos=7.28516 fActPosition=7.41699 time=0.000005
2020/08/17 14:31:18.377 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=3.35472e+07 fPos=-7.99316 fActPosition=6.50879 time=0.000007
2020/08/17 14:31:18.377 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2020/08/17 14:31:21.379 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=3.35482e+07 fPos=-7.99316 fActPosition=-8.00781 time=0.000006
2020/08/17 14:31:21.580 ecmcMotorRecord:: poll(1) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=3.35482e+07 fPos=-7.99316 fActPosition=-8.00781 time=0.000006
2020/08/17 14:31:21.580 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
../motorApp/MotorSrc/motorRecord.cc:1528 IOC2:Axis1 motor has stopped drbv=-8.007812 pp=0 udf=0 stat=0 nsta=0 mip=0x20('Mo') msta=0x4922
../motorApp/MotorSrc/motorRecord.cc:1224 IOC2:Axis1 maybeRetry: close enough; rdbd=0.100000 diff=0.014648 mip=0x20('Mo')
../motorApp/MotorSrc/motorRecord.cc:1227 IOC2:Axis1 mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old='Mo' new=''
