#- PLC rate, if not explicitly declared, deduce rate from bus frequence (ECMC_EC_SAMPLE_RATE)
{%- if plc.rateMilliseconds > 0 %}
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "{{ plc.rateMilliseconds|float }}")
{%- else %}
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/${ECMC_EC_SAMPLE_RATE}", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "${ECMC_PLC_RATE_}")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
{%- endif %}

#- "Call" plc_merge.jinja2 to merge plc.file and plc.code, apply macros
epicsEnvSet("OUTPUT_FILE" , "${TMP_PATH=/tmp}/PLC{{plc.id}}_temp.plc")

{% include 'plc_merge.jinja2' %}

${SCRIPTEXEC} ${ecmccfg_DIR}loadPLCFile.cmd "PLC_ID={{plc.id}}, FILE=${OUTPUT_FILE}, PLC_MACROS='{{plc.macros|default('')}}'"

#- Cleanup
system "rm -f ${OUTPUT_FILE}"
