#==============================================================================
#- plc_load.jinja2
#- Arguments: HW_DESC, [SLAVE_ID = 0, SUBST_FILE, P_SCRIPT, NELM, DEFAULT_SUBS, DEFAULT_SLAVE_PVS]
#-d /**
#-d   \brief Snippet for merging plc.file and plc.code, run msi and then load for PLC and axis-PLC
#-d   \author Anders Sandström
#-d   \file
#-d   \param ID PLC or axis id
#-d   \param AXIS "Axis" for axis and "" for normal PLC
#-d
#-d Note
#-d Rewritten since the jinja workflow was too restrictive:
#-d 1. Need to be able to use macros in files and also in filename
#-d 2. Get en error when plc.file is not found
#-d 3. Append plc.code to plc.file
#-d Conclusion: A bit nasty but works..

#- Build a file plc file of plc.file and plc.code and plc.macros

epicsEnvSet("ECMC_ID_TEMP",          "{{ axis.id }}")
epicsEnvSet("ECMC_TMP_SOURCE_FILE"      "${TMP_PATH=/tmp}/PLC${ECMC_ID_TEMP}_SRC.plc")
epicsEnvSet("ECMC_TMP_SOURCE_FILE_2"    "${TMP_PATH=/tmp}/PLC${ECMC_ID_TEMP}_SRC_2.plc")
epicsEnvSet("ECMC_TMP_OUT_FILE",        "${TMP_PATH=/tmp}/PLC${ECMC_ID_TEMP}_OUT.plc")

#- clear files (make sure no commands in files already)
system "echo '' > ${ECMC_TMP_SOURCE_FILE}"
system "echo '' > ${ECMC_TMP_OUT_FILE}"

#- Build src file plc.file + plc.code
{%- if plc.file %}
    system "cat {{ plc.file }} > ${ECMC_TMP_SOURCE_FILE}"
{%- endif %}

#- Append plc.code ( hard to handle  ''' so replace to € and switch back in shell, not nice..)
{%- if plc.code %}
    {%- for line in plc.code %}
        system "bash ${ecmccfg_DIR}appendCodeToPlc.sh '{{ line|replace('\'', '€') }}' ${ECMC_TMP_SOURCE_FILE} €"
    {%- endfor %}    
{%- endif %}

# Source plc file:
system "cat ${ECMC_TMP_SOURCE_FILE}"

#- Convert file with optional macros (msi)
ecmcFileExist("${FILE}",1)
system "msi -V -M '{{plc.macros|default('')}}' -o ${ECMC_TMP_OUT_FILE} ${ECMC_TMP_SOURCE_FILE}"

#- Printout parsed file?
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, ${PRINT_PLC_FILE=1}=1,"", "#-"  )
${ECMC_EXE_CMD=""}########### Parsed PLC file:
${ECMC_EXE_CMD=""}system "cat ${ECMC_TMP_OUT_FILE}"
${ECMC_EXE_CMD=""}############ PLC file end
${ECMC_EXE_CMD=""}#
epicsEnvUnset(ECMC_EXE_CMD)

ecmcFileExist("${ECMC_TMP_OUT_FILE}",1)
ecmcConfigOrDie "Cfg.LoadAxisPLCFile(${ECMC_ID_TEMP},${ECMC_TMP_OUT_FILE})"

#- Remove parsed file after load
system "rm -f ${ECMC_TMP_OUT_FILE}"
system "rm -f ${ECMC_TMP_SOURCE_FILE}"
epicsEnvUnset(ECMC_ID_TEMP)